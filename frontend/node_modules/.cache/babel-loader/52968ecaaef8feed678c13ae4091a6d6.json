{"ast":null,"code":"var _jsxFileName = \"/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/components/CommItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport MyButton from './UI/button/MyButton';\nimport classes from './css/comment.module.css';\nimport { useFetching } from '../hooks/useFetching';\nimport UserSevice from '../API/UserService';\nimport { Link, useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport LikeSevice from '../API/LikeService';\nimport CommentSevice from '../API/CommentService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentItem = _ref => {\n  _s();\n\n  let {\n    comment,\n    index,\n    comments,\n    setModal,\n    setCommentId,\n    setbuttonText,\n    likes,\n    fetchLikes,\n    fetchComments\n  } = _ref;\n  const params = useParams();\n  const [createLike] = useFetching(async body => {\n    try {\n      const response = await LikeSevice.createCommentLike(params.id, body);\n\n      if (response.data.resp === \"Created\" || response.data.resp === \"Updated\") {\n        fetchLikes();\n      } else {\n        alert(\"Error\");\n      }\n    } catch (err) {\n      alert(err);\n    }\n  });\n  const [deleteLike] = useFetching(async (id, body) => {\n    try {\n      const response = await LikeSevice.deleteLike(id, body);\n\n      if (response.data.resp === \"Deleted\" || response.data.resp === \"Updated\") {\n        fetchLikes();\n      } else {\n        alert(\"Error\");\n      }\n    } catch (err) {\n      alert(err);\n    }\n  });\n  const [deleteComment] = useFetching(async id => {\n    console.log(\"comment deleting\");\n\n    try {\n      const response = await CommentSevice.deleteComment(id);\n\n      if (response.data.resp === \"Deleted\") {\n        fetchComments();\n      } else {\n        alert(\"Error\");\n      }\n    } catch (err) {\n      alert(err);\n    }\n  });\n\n  const likeAction = (likes, action) => {\n    for (let i = 0; i < likes.length; i++) {\n      if (likes[i].authorId === isAuthUser.id && likes[i].type === action) {\n        deleteLike(likes[i].id, {\n          destinationId: comment.authorId\n        });\n        return;\n      }\n    }\n\n    createLike({\n      \"commentId\": comment.id,\n      \"authorId\": isAuthUser.id,\n      \"type\": action,\n      \"destinationId\": comment.authorId\n    });\n    return;\n  };\n\n  const likeStatus = likes => {\n    let status = \"Like\";\n    likes.forEach(like => {\n      if (like.authorId === isAuthUser.id && like.type === 1) {\n        status = \"Liked\";\n      }\n    });\n    return status;\n  };\n\n  const dislikeStatus = likes => {\n    let status = \"Dislike\";\n    likes.forEach(like => {\n      if (like.authorId === isAuthUser.id && like.type === -1) {\n        status = \"Disliked\";\n      }\n    });\n    return status;\n  };\n\n  const [user, setUser] = useState([]);\n  const isAuth = useSelector(state => state.status);\n  const isAuthUser = useSelector(state => state.user);\n  const [fetchUser] = useFetching(async () => {\n    const response = await UserSevice.getUserById(comment.authorId);\n    const User = response.data.user[0];\n    setUser(User);\n  });\n  useEffect(() => {\n    fetchUser();\n  }, []);\n\n  const sendReq = (e, commentId) => {\n    setCommentId(commentId);\n    setModal(true);\n    setbuttonText(\"Add\");\n  };\n\n  const isYourOwn = () => {\n    if (isAuthUser.id === comment.authorId) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.comment,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), comment.commentId !== 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"replied to \", comments.map((el, index) => {\n            if (el.id === comment.commentId) {\n              return comments.indexOf(el) + 1;\n            }\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/user/\" + comment.authorId,\n          children: user.login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), isAuth && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment__btns\",\n        children: [/*#__PURE__*/_jsxDEV(MyButton, {\n          onClick: e => sendReq(e, comment.id),\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n          onClick: () => {\n            likeAction(likes, 1);\n          },\n          children: likeStatus(likes)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n          onClick: () => {\n            likeAction(likes, -1);\n          },\n          children: dislikeStatus(likes)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this), isYourOwn() && /*#__PURE__*/_jsxDEV(MyButton, {\n        onClick: () => {\n          deleteComment();\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CommentItem, \"WHhGoM9qE/ZwZMaaq4DfAXaEWPg=\", false, function () {\n  return [useParams, useFetching, useFetching, useFetching, useSelector, useSelector, useFetching];\n});\n\n_c = CommentItem;\nexport default CommentItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentItem\");","map":{"version":3,"names":["React","useEffect","useState","MyButton","classes","useFetching","UserSevice","Link","useParams","useSelector","LikeSevice","CommentSevice","CommentItem","comment","index","comments","setModal","setCommentId","setbuttonText","likes","fetchLikes","fetchComments","params","createLike","body","response","createCommentLike","id","data","resp","alert","err","deleteLike","deleteComment","console","log","likeAction","action","i","length","authorId","isAuthUser","type","destinationId","likeStatus","status","forEach","like","dislikeStatus","user","setUser","isAuth","state","fetchUser","getUserById","User","sendReq","e","commentId","isYourOwn","map","el","indexOf","login","content"],"sources":["/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/components/CommItem.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport MyButton from './UI/button/MyButton';\nimport classes from './css/comment.module.css'\nimport { useFetching } from '../hooks/useFetching';\nimport UserSevice from '../API/UserService';\nimport { Link, useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport LikeSevice from '../API/LikeService';\nimport CommentSevice from '../API/CommentService';\n\nconst CommentItem = ({comment, index, comments, setModal, setCommentId, setbuttonText, likes, fetchLikes, fetchComments}) => {\n    const params = useParams();\n\n    const [createLike] = useFetching(async (body) => {\n        try{\n            const response = await LikeSevice.createCommentLike(params.id, body);\n            if(response.data.resp === \"Created\" || response.data.resp === \"Updated\"){\n                fetchLikes();\n            }\n            else {\n                alert(\"Error\")\n            }\n        }\n        catch(err){\n            alert(err)\n        }\n        \n    });\n    const [deleteLike] = useFetching(async (id, body) => {\n        try{\n            const response = await LikeSevice.deleteLike(id, body);\n            if(response.data.resp === \"Deleted\" || response.data.resp === \"Updated\"){\n                fetchLikes();\n            }\n            else {\n                alert(\"Error\")\n            }\n        }\n        catch(err){\n            alert(err)\n        }\n        \n    });\n    const [deleteComment] = useFetching(async (id) => {\n        console.log(\"comment deleting\")\n        try{\n            const response = await CommentSevice.deleteComment(id);\n            if(response.data.resp === \"Deleted\"){\n                fetchComments();\n            }\n            else {\n                alert(\"Error\")\n            }\n        }\n        catch(err){\n            alert(err)\n        }\n        \n    });\n\n    const likeAction = (likes, action) =>{\n        for(let i =0; i < likes.length; i++){\n            if(likes[i].authorId === isAuthUser.id && likes[i].type === action){\n                deleteLike(likes[i].id, {destinationId: comment.authorId});\n                return;\n                \n            }\n        }\n        createLike({\n            \"commentId\": comment.id,\n            \"authorId\": isAuthUser.id,\n            \"type\": action,\n            \"destinationId\": comment.authorId\n        })\n        return;\n    }\n    const likeStatus = (likes) => {\n        let status = \"Like\"\n        likes.forEach(like => {\n            if(like.authorId === isAuthUser.id && like.type === 1){\n                status = \"Liked\"\n            }\n        })\n        return status\n    }\n    const dislikeStatus = (likes) => {\n        let status = \"Dislike\"\n        likes.forEach(like => {\n            if(like.authorId === isAuthUser.id && like.type === -1){\n                status = \"Disliked\"\n            }\n        })\n        return status\n    }\n    const [user, setUser] = useState([]);\n    const isAuth = useSelector(state => state.status);\n    const isAuthUser = useSelector(state => state.user);\n    const [fetchUser] = useFetching(async () => {\n        const response = await UserSevice.getUserById(comment.authorId);\n        const User = response.data.user[0];\n        setUser(User);\n    });\n    useEffect(() => {\n        fetchUser();\n    }, []);\n    const sendReq = (e, commentId) =>{\n        setCommentId(commentId);\n        setModal(true);\n        setbuttonText(\"Add\");\n    }\n    const isYourOwn = () => {\n        if(isAuthUser.id === comment.authorId){\n            return true;\n        }\n        return false\n    }\n    return (\n        <div className={classes.comment}>\n            <div className=\"comment__content\">\n                <div>\n                    <p>{index + 1}</p>\n                    {comment.commentId !==0 &&\n                        <p>\n                            replied to {comments.map((el, index) => {\n                                if(el.id === comment.commentId){\n                                    return comments.indexOf(el) + 1;\n                                }\n                            })}\n                        </p>\n                    }\n                    <Link to={\"/user/\" + comment.authorId}>{user.login}</Link>\n                    <p>{comment.content}</p>\n                </div>\n                {isAuth &&\n                    <div className=\"comment__btns\">\n                        <MyButton onClick={e => sendReq(e, comment.id)}>Reply</MyButton>\n                        <MyButton onClick={() =>{likeAction(likes, 1)}}>{likeStatus(likes)}</MyButton>\n                        <MyButton onClick={() =>{likeAction(likes, -1)}}>{dislikeStatus(likes)}</MyButton>\n                    </div>\n                }\n                {isYourOwn() &&\n                    <MyButton onClick={() => {deleteComment()}}>Delete</MyButton>\n                }\n\n            </div>\n        </div>\n    )\n}\n\nexport default CommentItem;"],"mappings":"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"},"metadata":{},"sourceType":"module"}