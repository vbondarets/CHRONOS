{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useMemo } from 'react';\nexport const useSortedPosts = (posts, sort) => {\n  _s();\n\n  const sortedPosts = useMemo(() => {\n    if (sort) {\n      return [...posts].sort((a, b) => a[sort].localeCompare(b[sort]));\n    }\n\n    return posts;\n  }, [sort, posts]);\n  return sortedPosts;\n};\n\n_s(useSortedPosts, \"JCOM6shKwCo6CttVuNVxaNMnTKM=\");\n\nexport const usePosts = (posts, sort, query) => {\n  _s2();\n\n  const sortedPosts = useSortedPosts(posts, sort);\n  const sortedAndSearchedPosts = useMemo(() => {\n    sortedPosts.forEach((element, index) => {\n      if (element === undefined) {\n        console.log(\"dell\");\n        sortedPosts.slice(index, 1);\n      }\n    });\n    console.log(sortedPosts);\n    return sortedPosts.filter(post => post.title.toLowerCase().includes(query));\n  }, [query, sortedPosts]);\n  return sortedAndSearchedPosts;\n};\n\n_s2(usePosts, \"1Y9f2rPptY4OI22k1qpnp57b6n0=\", false, function () {\n  return [useSortedPosts];\n});","map":{"version":3,"names":["useMemo","useSortedPosts","posts","sort","sortedPosts","a","b","localeCompare","usePosts","query","sortedAndSearchedPosts","forEach","element","index","undefined","console","log","slice","filter","post","title","toLowerCase","includes"],"sources":["/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/hooks/usePost.js"],"sourcesContent":["import { useMemo } from 'react';\n\nexport const useSortedPosts = (posts, sort) => {\n    const sortedPosts = useMemo(() => {\n        if (sort) {\n            return [...posts].sort((a, b) => a[sort].localeCompare(b[sort]));\n        }\n        return posts;\n    }, [sort, posts]);\n\n    return sortedPosts;\n}\n\nexport const usePosts = (posts, sort, query) => {\n    const sortedPosts = useSortedPosts(posts, sort)\n    const sortedAndSearchedPosts = useMemo(() => {\n        sortedPosts.forEach((element, index) => {\n            if(element === undefined){\n                console.log(\"dell\")\n                sortedPosts.slice(index, 1);\n            }\n        });\n        console.log(sortedPosts);\n        return sortedPosts.filter(post => post.title.toLowerCase().includes(query));\n    }, [query, sortedPosts]);\n    \n    return sortedAndSearchedPosts;\n}"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,OAAxB;AAEA,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;EAAA;;EAC3C,MAAMC,WAAW,GAAGJ,OAAO,CAAC,MAAM;IAC9B,IAAIG,IAAJ,EAAU;MACN,OAAO,CAAC,GAAGD,KAAJ,EAAWC,IAAX,CAAgB,CAACE,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACF,IAAD,CAAD,CAAQI,aAAR,CAAsBD,CAAC,CAACH,IAAD,CAAvB,CAA1B,CAAP;IACH;;IACD,OAAOD,KAAP;EACH,CAL0B,EAKxB,CAACC,IAAD,EAAOD,KAAP,CALwB,CAA3B;EAOA,OAAOE,WAAP;AACH,CATM;;GAAMH,c;;AAWb,OAAO,MAAMO,QAAQ,GAAG,CAACN,KAAD,EAAQC,IAAR,EAAcM,KAAd,KAAwB;EAAA;;EAC5C,MAAML,WAAW,GAAGH,cAAc,CAACC,KAAD,EAAQC,IAAR,CAAlC;EACA,MAAMO,sBAAsB,GAAGV,OAAO,CAAC,MAAM;IACzCI,WAAW,CAACO,OAAZ,CAAoB,CAACC,OAAD,EAAUC,KAAV,KAAoB;MACpC,IAAGD,OAAO,KAAKE,SAAf,EAAyB;QACrBC,OAAO,CAACC,GAAR,CAAY,MAAZ;QACAZ,WAAW,CAACa,KAAZ,CAAkBJ,KAAlB,EAAyB,CAAzB;MACH;IACJ,CALD;IAMAE,OAAO,CAACC,GAAR,CAAYZ,WAAZ;IACA,OAAOA,WAAW,CAACc,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACC,KAAL,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCb,KAAlC,CAA3B,CAAP;EACH,CATqC,EASnC,CAACA,KAAD,EAAQL,WAAR,CATmC,CAAtC;EAWA,OAAOM,sBAAP;AACH,CAdM;;IAAMF,Q;UACWP,c"},"metadata":{},"sourceType":"module"}