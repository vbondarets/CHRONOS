{"ast":null,"code":"var _jsxFileName = \"/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PostSevice from './API/PostService';\nimport PostFilter from './components/PostFilter';\nimport PostForm from './components/PostForm';\nimport PostList from './components/PostList';\nimport MyButton from './components/UI/button/MyButton';\nimport MyModal from './components/UI/MyModal/MyModal';\nimport { usePosts } from './hooks/usePost';\nimport './styles/app.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [posts, setPosts] = useState([]); // const [posts, setPosts] = useState([\n  //   { id: 1, title: 'Javascript', description: 'About JS' },\n  //   { id: 2, title: 'C++', description: 'About C++' },\n  //   { id: 3, title: 'Java', description: 'About Java' }\n  // ]);\n\n  const [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  const [modal, setModal] = useState(false);\n  const [isPostLoading, setIsPostLoading] = useState('false');\n\n  const createPost = newPost => {\n    setPosts([newPost, ...posts]);\n    setModal(false);\n  };\n\n  const removePost = id => {\n    setPosts(posts.filter(p => p.id !== id));\n  };\n\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n\n  async function fetchPosts() {\n    let posts = await PostSevice.getAll();\n    console.log(posts);\n    posts.forEach(el => {\n      let string = el.publishDate;\n      let stringArr = string.split(\"T\");\n      stringArr = stringArr[0].split(\"-\");\n      el.publishDate = stringArr.join(\" \");\n    });\n    setPosts(posts);\n  }\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: () => setModal(true),\n      children: \"Create post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        create: createPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: '15px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: sortedAndSearchedPosts,\n      title: \"Post list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"EcxUtJzL9BPKqiU2YlOyZYzIyeQ=\", false, function () {\n  return [usePosts];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","PostSevice","PostFilter","PostForm","PostList","MyButton","MyModal","usePosts","App","posts","setPosts","filter","setFilter","sort","query","modal","setModal","isPostLoading","setIsPostLoading","createPost","newPost","removePost","id","p","sortedAndSearchedPosts","fetchPosts","getAll","console","log","forEach","el","string","publishDate","stringArr","split","join","margin"],"sources":["/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PostSevice from './API/PostService';\nimport PostFilter from './components/PostFilter';\nimport PostForm from './components/PostForm';\nimport PostList from './components/PostList';\nimport MyButton from './components/UI/button/MyButton';\nimport MyModal from './components/UI/MyModal/MyModal';\nimport { usePosts } from './hooks/usePost';\nimport './styles/app.css'\n\nfunction App() {\n\n  const [posts, setPosts] = useState([]);\n  // const [posts, setPosts] = useState([\n  //   { id: 1, title: 'Javascript', description: 'About JS' },\n  //   { id: 2, title: 'C++', description: 'About C++' },\n  //   { id: 3, title: 'Java', description: 'About Java' }\n  // ]);\n  const [filter, setFilter] = useState({sort: '', query: ''});\n  const [modal, setModal] = useState(false);\n  const [isPostLoading, setIsPostLoading] = useState('false');\n\n  const createPost = (newPost) =>{\n    setPosts([newPost, ...posts]);\n    setModal(false);   \n  } \n  const removePost = (id) => {\n    setPosts(posts.filter(p => p.id !== id))\n    \n  }\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n\n  async function fetchPosts(){\n    let posts = await PostSevice.getAll();\n    console.log(posts);\n    posts.forEach(el => {\n      let string = el.publishDate;\n      let stringArr = string.split(\"T\");\n      stringArr = stringArr[0].split(\"-\");\n      el.publishDate = stringArr.join(\" \");\n    });\n    setPosts(posts);\n  }\n\n  useEffect( () => {\n    fetchPosts();\n  }, [])\n\n  return (\n    <div className=\"App\">\n      {/* <MyButton onClick={fetchPosts}>Get Posts</MyButton> */}\n      <MyButton onClick={() => setModal(true)}>\n        Create post\n      </MyButton>\n      <MyModal visible={modal} setVisible={setModal}>\n        <PostForm create={createPost}/>\n      </MyModal>\n      <hr style={{margin: '15px'}}/>\n\n      <PostFilter \n        filter={filter} \n        setFilter={setFilter}\n      />\n      <PostList remove={removePost} posts={sortedAndSearchedPosts} title={\"Post list\"}/>\n\n    </div>\n    \n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}