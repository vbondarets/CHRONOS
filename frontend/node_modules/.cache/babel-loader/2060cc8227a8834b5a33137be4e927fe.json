{"ast":null,"code":"var _jsxFileName = \"/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/components/CommItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MyButton from './UI/button/MyButton';\nimport classes from './css/comment.module.css';\nimport { useFetching } from '../hooks/useFetching';\nimport UserSevice from '../API/UserService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentItem = _ref => {\n  _s();\n\n  let {\n    comment,\n    index,\n    comments\n  } = _ref;\n  const [fetchUser] = useFetching(async id => {\n    console.log(\"id:\" + id);\n    const response = await UserSevice.getUserById(id);\n    return response.data;\n  });\n\n  const getUserName = id => {\n    const resp = fetchUser(id);\n    console.log(resp);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.comment,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment__content\",\n      children: [console.log(comment, comments), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), comment.commentId !== 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"replied to \", comments.map((el, index) => {\n            if (el.id === comment.commentId) {\n              return comments.indexOf(el) + 1;\n            }\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.authorId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment__btns\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CommentItem, \"fyeCQntjV5Imj8hEfb53+6aEkb0=\", false, function () {\n  return [useFetching];\n});\n\n_c = CommentItem;\nexport default CommentItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentItem\");","map":{"version":3,"names":["React","MyButton","classes","useFetching","UserSevice","CommentItem","comment","index","comments","fetchUser","id","console","log","response","getUserById","data","getUserName","resp","commentId","map","el","indexOf","authorId","content"],"sources":["/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/components/CommItem.jsx"],"sourcesContent":["import React from 'react';\nimport MyButton from './UI/button/MyButton';\nimport classes from './css/comment.module.css'\nimport { useFetching } from '../hooks/useFetching';\nimport UserSevice from '../API/UserService';\n\nconst CommentItem = ({comment, index, comments}) => {\n    const [fetchUser] = useFetching(async (id) => {\n        console.log(\"id:\" + id);\n        const response = await UserSevice.getUserById(id);\n        return response.data;\n    });\n    const getUserName = (id) =>{\n        const resp = fetchUser(id);\n        console.log(resp);\n    }\n    return (\n        <div className={classes.comment}>\n            <div className=\"comment__content\">\n                {console.log(comment, comments)}\n\n                <div>\n                    <p>{index + 1}</p>\n                    {comment.commentId !==0 &&\n                        <p>\n                            replied to {comments.map((el, index) => {\n                                if(el.id === comment.commentId){\n                                    return comments.indexOf(el) + 1;\n                                }\n                            })}\n                        </p>\n                    }\n                    <p>{comment.authorId}</p>\n                    <p>{comment.content}</p>\n                </div>\n                <div className=\"comment__btns\">\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CommentItem;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,UAAP,MAAuB,oBAAvB;;;AAEA,MAAMC,WAAW,GAAG,QAAgC;EAAA;;EAAA,IAA/B;IAACC,OAAD;IAAUC,KAAV;IAAiBC;EAAjB,CAA+B;EAChD,MAAM,CAACC,SAAD,IAAcN,WAAW,CAAC,MAAOO,EAAP,IAAc;IAC1CC,OAAO,CAACC,GAAR,CAAY,QAAQF,EAApB;IACA,MAAMG,QAAQ,GAAG,MAAMT,UAAU,CAACU,WAAX,CAAuBJ,EAAvB,CAAvB;IACA,OAAOG,QAAQ,CAACE,IAAhB;EACH,CAJ8B,CAA/B;;EAKA,MAAMC,WAAW,GAAIN,EAAD,IAAO;IACvB,MAAMO,IAAI,GAAGR,SAAS,CAACC,EAAD,CAAtB;IACAC,OAAO,CAACC,GAAR,CAAYK,IAAZ;EACH,CAHD;;EAIA,oBACI;IAAK,SAAS,EAAEf,OAAO,CAACI,OAAxB;IAAA,uBACI;MAAK,SAAS,EAAC,kBAAf;MAAA,WACKK,OAAO,CAACC,GAAR,CAAYN,OAAZ,EAAqBE,QAArB,CADL,eAGI;QAAA,wBACI;UAAA,UAAID,KAAK,GAAG;QAAZ;UAAA;UAAA;UAAA;QAAA,QADJ,EAEKD,OAAO,CAACY,SAAR,KAAqB,CAArB,iBACG;UAAA,0BACgBV,QAAQ,CAACW,GAAT,CAAa,CAACC,EAAD,EAAKb,KAAL,KAAe;YACpC,IAAGa,EAAE,CAACV,EAAH,KAAUJ,OAAO,CAACY,SAArB,EAA+B;cAC3B,OAAOV,QAAQ,CAACa,OAAT,CAAiBD,EAAjB,IAAuB,CAA9B;YACH;UACJ,CAJW,CADhB;QAAA;UAAA;UAAA;UAAA;QAAA,QAHR,eAWI;UAAA,UAAId,OAAO,CAACgB;QAAZ;UAAA;UAAA;UAAA;QAAA,QAXJ,eAYI;UAAA,UAAIhB,OAAO,CAACiB;QAAZ;UAAA;UAAA;UAAA;QAAA,QAZJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ,eAiBI;QAAK,SAAS,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA,QAjBJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAwBH,CAlCD;;GAAMlB,W;UACkBF,W;;;KADlBE,W;AAoCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}