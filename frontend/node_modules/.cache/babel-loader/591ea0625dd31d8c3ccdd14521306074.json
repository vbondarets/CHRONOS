{"ast":null,"code":"var _jsxFileName = \"/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/pages/PostIdPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport LikeSevice from '../API/LikeService';\nimport PostSevice from '../API/PostService';\nimport UserSevice from '../API/UserService';\nimport CommentForm from '../components/CommentForm';\nimport CommentList from '../components/CommentList';\nimport Loader from '../components/UI/Loader/Loader';\nimport MyModal from '../components/UI/MyModal/MyModal';\nimport { useFetching } from '../hooks/useFetching';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostIdPage = () => {\n  _s();\n\n  const params = useParams();\n  const router = useHistory();\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState([]);\n  const [user, setUser] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [commentFormText, setCommentFormText] = useState(\"Add\");\n  const [commentId, setCommentId] = useState(0);\n  const [postLikes, setPostLikes] = useState([]);\n  const [commentLikes, setCommentLikes] = useState([]);\n  const [fetchPostLikes] = useFetching(async () => {\n    try {\n      const response = await LikeSevice.getAll(params.id); // console.log(response.data.likes);\n\n      let likesArr = response.data.likes;\n      let commentArr = [];\n      let postArr = [];\n      likesArr.forEach(like => {\n        if (like.commentId === 0) {\n          postArr.push(like);\n        } else {\n          commentArr.push(like);\n        }\n      }); // console.log(commentArr)\n      // console.log(postArr)\n    } catch (err) {\n      console.log(err);\n    }\n  });\n  const [fetchPostById, isLoading, error] = useFetching(async () => {\n    try {\n      const response = await PostSevice.getById(params.id);\n      fetchPostLikes();\n      setPost(response.data.post[0]);\n      fetchComments();\n      fetchUser(response.data.post[0].author_id);\n    } catch (err) {\n      router.push(\"/error\");\n    }\n  });\n  const [fetchComments, isCommLoading, CommError] = useFetching(async () => {\n    await fetchPostLikes();\n    const response = await PostSevice.getPostComments(params.id);\n    setComments(response.data.comments); // console.log(likes);\n  });\n  const [fetchCreateComments, isCreateCommLoading, CreateCommError] = useFetching(async (id, comment, setMessage, setContent) => {\n    try {\n      const response = await PostSevice.createPostComment(params.id, comment);\n      console.log(response.data.resp);\n\n      if (response.data.resp === \"Created\") {\n        setMessage(response.data.resp);\n        setTimeout(() => {\n          setContent('');\n          fetchComments();\n          setMessage('');\n          setModal(false);\n        }, 500);\n      } // fetchComments();\n\n    } catch (err) {\n      console.log(err.response.data);\n    }\n  });\n  const [fetchUser] = useFetching(async id => {\n    const response = await UserSevice.getUserById(id);\n    const User = response.data.user[0];\n    setUser(User);\n  });\n  useEffect(() => {\n    fetchPostById();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(CommentForm, {\n        buttonText: commentFormText,\n        postId: params.id,\n        commentId: commentId,\n        setButtonText: setCommentFormText,\n        fetchFunc: fetchCreateComments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [user.login && /*#__PURE__*/_jsxDEV(\"h4\", {\n        onClick: () => {\n          router.push(\"/user/\" + user.id);\n        },\n        children: [\"Author: \", user.login]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }, this), isCommLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(CommentList, {\n      comments: comments,\n      setModal: setModal,\n      setCommentId: setCommentId,\n      setbuttonText: setCommentFormText,\n      fetchFunc: fetchCreateComments,\n      likes: commentLikes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostIdPage, \"dwN+rOn0vAA/7BhJflTHa8xxe38=\", false, function () {\n  return [useParams, useHistory, useFetching, useFetching, useFetching, useFetching, useFetching];\n});\n\n_c = PostIdPage;\nexport default PostIdPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostIdPage\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","Link","useHistory","useParams","LikeSevice","PostSevice","UserSevice","CommentForm","CommentList","Loader","MyModal","useFetching","PostIdPage","params","router","post","setPost","comments","setComments","user","setUser","modal","setModal","commentFormText","setCommentFormText","commentId","setCommentId","postLikes","setPostLikes","commentLikes","setCommentLikes","fetchPostLikes","response","getAll","id","likesArr","data","likes","commentArr","postArr","forEach","like","push","err","console","log","fetchPostById","isLoading","error","getById","fetchComments","fetchUser","author_id","isCommLoading","CommError","getPostComments","fetchCreateComments","isCreateCommLoading","CreateCommError","comment","setMessage","setContent","createPostComment","resp","setTimeout","getUserById","User","login","title","content"],"sources":["/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/pages/PostIdPage.jsx"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link, useHistory, useParams } from 'react-router-dom'\nimport LikeSevice from '../API/LikeService';\nimport PostSevice from '../API/PostService';\nimport UserSevice from '../API/UserService';\nimport CommentForm from '../components/CommentForm';\nimport CommentList from '../components/CommentList';\nimport Loader from '../components/UI/Loader/Loader';\nimport MyModal from '../components/UI/MyModal/MyModal';\nimport { useFetching } from '../hooks/useFetching';\n\nconst PostIdPage = () => {\n    const params = useParams();\n    const router = useHistory();\n    const [post, setPost] = useState({})\n    const [comments, setComments] = useState([]);\n    const [user, setUser] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [commentFormText, setCommentFormText] = useState(\"Add\");\n    const [commentId, setCommentId] = useState(0);\n    const [postLikes, setPostLikes] = useState([]);\n    const [commentLikes, setCommentLikes] = useState([]);\n\n    const [fetchPostLikes] = useFetching(async () => {\n        try {\n            const response = await LikeSevice.getAll(params.id);\n            // console.log(response.data.likes);\n            let likesArr = response.data.likes;\n            let commentArr = [];\n            let postArr = [];\n            likesArr.forEach(like => {\n                if(like.commentId === 0){\n                    postArr.push(like);\n                }\n                else {\n                    commentArr.push(like);\n                }\n            })\n            // console.log(commentArr)\n            // console.log(postArr)\n        }\n        catch (err) {\n            console.log(err)\n        }\n    });\n\n    const [fetchPostById, isLoading, error] = useFetching(async () => {\n        try {\n            const response = await PostSevice.getById(params.id);\n            fetchPostLikes();\n            setPost(response.data.post[0]);\n            fetchComments()\n            fetchUser(response.data.post[0].author_id);\n        }\n        catch (err) {\n            router.push(\"/error\")\n        }\n    });\n    const [fetchComments, isCommLoading, CommError] = useFetching(async () => {\n        await fetchPostLikes();\n        const response = await PostSevice.getPostComments(params.id);\n        setComments(response.data.comments);\n        // console.log(likes);\n    });\n    const [fetchCreateComments, isCreateCommLoading, CreateCommError] = useFetching(async (id, comment, setMessage, setContent) => {\n        try {\n            const response = await PostSevice.createPostComment(params.id, comment)\n            console.log(response.data.resp);\n            if (response.data.resp === \"Created\") {\n                setMessage(response.data.resp)\n                setTimeout(() => {\n                    setContent('');\n                    fetchComments();\n                    setMessage('');\n                    setModal(false);\n                }, 500);\n            }\n            // fetchComments();\n        }\n        catch (err) {\n            console.log(err.response.data)\n        }\n\n    });\n    const [fetchUser] = useFetching(async (id) => {\n        const response = await UserSevice.getUserById(id);\n        const User = response.data.user[0];\n        setUser(User);\n    });\n\n    useEffect(() => {\n        fetchPostById()\n    }, []);\n\n    return (\n        <div>\n            <MyModal visible={modal} setVisible={setModal}>\n                <CommentForm buttonText={commentFormText} postId={params.id} commentId={commentId} setButtonText={setCommentFormText} fetchFunc={fetchCreateComments} />\n            </MyModal>\n            {isLoading\n                ? <Loader />\n                : <div>\n                    {user.login &&\n                        <h4 onClick={() => { router.push(\"/user/\" + user.id) }}>Author: {user.login}</h4>\n                    }\n                    <h2>{post.title}</h2>\n                    <h3>{post.content}</h3>\n                </div>\n            }\n            {isCommLoading\n                ? <Loader />\n                : <CommentList comments={comments} setModal={setModal} setCommentId={setCommentId} setbuttonText={setCommentFormText} fetchFunc={fetchCreateComments} likes={commentLikes}/>\n            }\n        </div>\n    )\n}\n\nexport default PostIdPage"],"mappings":"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"},"metadata":{},"sourceType":"module"}