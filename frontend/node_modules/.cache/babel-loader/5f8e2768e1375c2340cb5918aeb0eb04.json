{"ast":null,"code":"var _jsxFileName = \"/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/pages/UserId.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PostSevice from '../API/PostService';\nimport UserSevice from '../API/UserService';\nimport { useFetching } from '../hooks/useFetching';\nimport classes from './css/User.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserId = () => {\n  _s();\n\n  const params = useParams();\n  const [user, setUser] = useState({});\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  const [modal, setModal] = useState(false);\n  const [fetchPosts, isPostLoading, postError] = useFetching(async id => {\n    let response = await PostSevice.getAll();\n    const arr = response.data.posts;\n    console.log(user);\n    let authorPosts = [];\n    arr.forEach((el, index) => {\n      if (el.author_id === id) {\n        let string = el.publishDate;\n        let stringArr = string.split(\"T\");\n        stringArr = stringArr[0].split(\"-\");\n        el.publishDate = stringArr.join(\" \");\n        authorPosts.push(el);\n      }\n    });\n    setPosts(authorPosts);\n  });\n  const [fetchUser, isUserLoading, userError] = useFetching(async id => {\n    let response = await UserSevice.getUserById(id);\n    setUser(response.data.user[0]);\n  });\n  useEffect(() => {\n    fetchUser(params.id);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"user:\", console.log(user), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 200,\n        height: 200\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"avatar\",\n        src: \"http://localhost:5000/\" + user.profileImg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"Fullname: \", user.fullName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"login: \", user.login]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"role: \", user.role]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserId, \"yGBqcIilXx9y6ly6JQvhFhfgyfs=\", false, function () {\n  return [useParams, useFetching, useFetching];\n});\n\n_c = UserId;\nexport default UserId;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserId\");","map":{"version":3,"names":["React","useEffect","useState","useParams","PostSevice","UserSevice","useFetching","classes","UserId","params","user","setUser","posts","setPosts","filter","setFilter","sort","query","modal","setModal","fetchPosts","isPostLoading","postError","id","response","getAll","arr","data","console","log","authorPosts","forEach","el","index","author_id","string","publishDate","stringArr","split","join","push","fetchUser","isUserLoading","userError","getUserById","width","height","profileImg","fullName","login","role"],"sources":["/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/pages/UserId.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PostSevice from '../API/PostService';\nimport UserSevice from '../API/UserService';\nimport { useFetching } from '../hooks/useFetching';\nimport classes from './css/User.module.css'\n\nconst UserId = () => {\n    const params = useParams();\n    const [user, setUser] = useState({});\n    const [posts, setPosts] = useState([]);\n    const [filter, setFilter] = useState({ sort: '', query: '' });\n    const [modal, setModal] = useState(false);\n\n    const [fetchPosts, isPostLoading, postError] = useFetching(async (id) => {\n        let response = await PostSevice.getAll();\n        const arr = response.data.posts;\n        console.log(user);\n        let authorPosts = [];\n        arr.forEach((el, index) => {\n          if (el.author_id === id) {\n            let string = el.publishDate;\n            let stringArr = string.split(\"T\");\n            stringArr = stringArr[0].split(\"-\");\n            el.publishDate = stringArr.join(\" \");\n            authorPosts.push(el);\n          }\n        });\n        setPosts(authorPosts);\n    });\n\n    const [fetchUser, isUserLoading, userError] = useFetching(async (id) => {\n        let response = await UserSevice.getUserById(id);\n        setUser(response.data.user[0]);\n    });\n    useEffect(() => {\n        fetchUser(params.id);\n    }, []);\n  return (\n    <div>user:\n        {console.log(user)}\n        <div style={{width:200, height: 200}}>\n            <img alt={\"avatar\"} src={\"http://localhost:5000/\" + user.profileImg}/>\n        </div>\n        <h5>Fullname: {user.fullName}</h5>\n        <h5>login: {user.login}</h5>\n        {/* <h5>email: {user.email}</h5> */}\n        <h5>role: {user.role}</h5>\n    </div>\n  )\n}\n\nexport default UserId"],"mappings":"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"},"metadata":{},"sourceType":"module"}