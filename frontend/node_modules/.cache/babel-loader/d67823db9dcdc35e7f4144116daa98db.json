{"ast":null,"code":"var _jsxFileName = \"/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/components/PostEditingForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport CategoriesSevice from '../API/CategoriesService';\nimport PostSevice from '../API/PostService';\nimport { useFetching } from '../hooks/useFetching';\nimport MyButton from './UI/button/MyButton';\nimport MyInput from './UI/input/MyInput';\nimport MySelect from './UI/select/MySelect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostEditingForm = _ref => {\n  _s();\n\n  let {\n    title,\n    content,\n    publishDate,\n    category_id,\n    author_id,\n    fetchPost,\n    postId\n  } = _ref;\n  const [postTitle, setTitle] = useState(title);\n  const [postContent, setContent] = useState(content);\n  const [postCategories, setCatigories] = useState([]);\n  const [postCategory, setCategory] = useState(category_id);\n  const [fetchCategories] = useFetching(async () => {\n    const response = await CategoriesSevice.getAll();\n    const categories = response.data.categories;\n    setCatigories(categories); // console.log(categories)\n  });\n  const user = useSelector(state => state.user);\n  const [fetchEditPost] = useFetching(async (id, body) => {\n    try {\n      const response = await PostSevice.editPost(id, body);\n\n      if (response.data.resp === \"Changed\") {\n        fetchPost();\n      }\n    } catch (err) {\n      console.log(err);\n    }\n\n    console.log(\"post editing\");\n  });\n  useEffect(() => {\n    fetchCategories();\n    setTitle(title);\n    setContent(content);\n    setCategory(category_id);\n  }, [author_id]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(MyInput, {\n      value: postTitle,\n      onChange: e => setTitle(e.target.value),\n      type: \"text\",\n      placeholder: \"Post's title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n      value: postCategory,\n      defaultValue: \"Choose category\",\n      options: postCategories.map(el => {\n        return {\n          value: el.id,\n          name: el.title\n        };\n      }),\n      onChange: selectedCategory => setCategory(selectedCategory)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n      value: postContent,\n      onChange: e => setContent(e.target.value),\n      type: \"text\",\n      placeholder: \"Post's content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: () => {\n        fetchEditPost(postId, {\n          author_id: author_id,\n          title: postTitle,\n          publishDate: publishDate,\n          content: postContent,\n          category_id: parseInt(postCategory)\n        });\n      },\n      children: \"Edit post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostEditingForm, \"m9ia8eV6hcQCofhzs9AhJTvVTg0=\", false, function () {\n  return [useFetching, useSelector, useFetching];\n});\n\n_c = PostEditingForm;\nexport default PostEditingForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostEditingForm\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","CategoriesSevice","PostSevice","useFetching","MyButton","MyInput","MySelect","PostEditingForm","title","content","publishDate","category_id","author_id","fetchPost","postId","postTitle","setTitle","postContent","setContent","postCategories","setCatigories","postCategory","setCategory","fetchCategories","response","getAll","categories","data","user","state","fetchEditPost","id","body","editPost","resp","err","console","log","e","target","value","map","el","name","selectedCategory","parseInt"],"sources":["/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/components/PostEditingForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport CategoriesSevice from '../API/CategoriesService';\nimport PostSevice from '../API/PostService';\nimport { useFetching } from '../hooks/useFetching';\nimport MyButton from './UI/button/MyButton';\nimport MyInput from './UI/input/MyInput';\nimport MySelect from './UI/select/MySelect';\n\n\nconst PostEditingForm = ({title, content, publishDate, category_id, author_id, fetchPost, postId}) => {\n    const [postTitle, setTitle] = useState(title);\n    const [postContent, setContent] = useState(content);\n    const [postCategories, setCatigories] = useState([]);\n    const [postCategory, setCategory] = useState(category_id)\n\n    const [fetchCategories] = useFetching(async () => {\n        const response = await CategoriesSevice.getAll();\n        const categories = response.data.categories;\n        setCatigories(categories);\n        // console.log(categories)\n    });\n    const user = useSelector(state => state.user);\n\n    const [fetchEditPost] = useFetching(async (id, body) => {\n        try{\n            const response = await PostSevice.editPost(id, body);\n            if(response.data.resp === \"Changed\"){\n                fetchPost();\n            }\n        }\n        catch(err){\n            console.log(err)\n        }\n        console.log(\"post editing\")\n    });\n\n\n    useEffect(() => {\n        fetchCategories();\n        setTitle(title);\n        setContent(content);\n        setCategory(category_id);\n    }, [author_id]);\n\n    return (\n        <form>\n            <MyInput\n                value={postTitle}\n                onChange={e => setTitle(e.target.value)}\n                type=\"text\"\n                placeholder=\"Post's title\"\n            />\n            <MySelect\n                value={postCategory}\n                defaultValue={\"Choose category\"}\n                options={postCategories.map(el =>{\n                    return {value: el.id, name: el.title}\n                })}\n                onChange={selectedCategory => setCategory(selectedCategory)}\n            />\n            <MyInput\n                value={postContent}\n                onChange={e => setContent(e.target.value)}\n                type=\"text\"\n                placeholder=\"Post's content\"\n            />\n            <MyButton \n                onClick={() => {\n                    fetchEditPost(\n                        postId,\n                        {\n                            author_id: author_id,\n                            title: postTitle,\n                            publishDate: publishDate,\n                            content: postContent,\n                            category_id: parseInt(postCategory)\n                        }\n                    )\n                }}>Edit post\n            </MyButton>\n        </form>\n    )\n}\n\nexport default PostEditingForm"],"mappings":"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"},"metadata":{},"sourceType":"module"}