{"ast":null,"code":"var _jsxFileName = \"/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/pages/PostIdPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport PostSevice from '../API/PostService';\nimport UserSevice from '../API/UserService';\nimport CommentList from '../components/CommentList';\nimport Loader from '../components/UI/Loader/Loader';\nimport { useFetching } from '../hooks/useFetching';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostIdPage = () => {\n  _s();\n\n  const params = useParams();\n  const router = useHistory();\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState([]);\n  const [user, setUser] = useState([]);\n  const [fetchPostById, isLoading, error] = useFetching(async () => {\n    const response = await PostSevice.getById(params.id);\n    setPost(response.data.post[0]);\n    fetchComments();\n    fetchUser(response.data.post[0].author_id);\n  });\n  const [fetchComments, isCommLoading, CommError] = useFetching(async () => {\n    const response = await PostSevice.getPostComments(params.id);\n    setComments(response.data.comments);\n  });\n  const [fetchUser] = useFetching(async id => {\n    const response = await UserSevice.getUserById(id);\n    const User = response.data.user[0];\n    setUser(User);\n  });\n  useEffect(() => {\n    fetchPostById();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [user.login && /*#__PURE__*/_jsxDEV(\"h4\", {\n        onClick: () => {\n          router.push(\"/user/\" + user.id);\n        },\n        children: [\"Author: \", user.login]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [post.id, \". \", post.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }, this), isCommLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(CommentList, {\n      comments: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostIdPage, \"CdBe7xEPTohnrlOm2BINYp+AxfY=\", false, function () {\n  return [useParams, useHistory, useFetching, useFetching, useFetching];\n});\n\n_c = PostIdPage;\nexport default PostIdPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostIdPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","useHistory","useParams","PostSevice","UserSevice","CommentList","Loader","useFetching","PostIdPage","params","router","post","setPost","comments","setComments","user","setUser","fetchPostById","isLoading","error","response","getById","id","data","fetchComments","fetchUser","author_id","isCommLoading","CommError","getPostComments","getUserById","User","login","push","title","content"],"sources":["/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/pages/PostIdPage.jsx"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom'\nimport PostSevice from '../API/PostService';\nimport UserSevice from '../API/UserService';\nimport CommentList from '../components/CommentList';\nimport Loader from '../components/UI/Loader/Loader';\nimport { useFetching } from '../hooks/useFetching';\n\nconst PostIdPage = () => {\n    const params = useParams();\n    const router = useHistory();\n    const [post, setPost] = useState({})\n    const [comments, setComments] =useState ([]);\n    const [user, setUser] = useState([]);\n    \n    const [fetchPostById, isLoading, error] = useFetching(async () => {\n        const response = await PostSevice.getById(params.id);\n        setPost(response.data.post[0]);\n        fetchComments()\n        fetchUser(response.data.post[0].author_id);\n    });\n    const [fetchComments, isCommLoading, CommError] = useFetching(async () => {\n        const response = await PostSevice.getPostComments(params.id);\n        setComments(response.data.comments);\n    });\n    const [fetchUser] = useFetching(async (id) => {\n        const response = await UserSevice.getUserById(id);\n        const User = response.data.user[0];\n        setUser(User);\n    });\n    \n    useEffect(() => {\n        fetchPostById()\n    }, []);\n    \n    return (\n        <div>\n            {isLoading\n                ? <Loader />\n                : <div>\n                        {user.login &&\n                            <h4 onClick={()=>{router.push(\"/user/\"+ user.id)}}>Author: {user.login}</h4>\n                        }\n                        <h2>{post.id}. {post.title}</h2>\n                        <h2>{post.content}</h2>\n                    </div>\n            }\n            {isCommLoading\n                ? <Loader />\n                : <CommentList comments={comments}/>\n            }\n\n        </div>\n    )\n}\n\nexport default PostIdPage"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,SAA3B,QAA4C,kBAA5C;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,WAAT,QAA4B,sBAA5B;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACrB,MAAMC,MAAM,GAAGP,SAAS,EAAxB;EACA,MAAMQ,MAAM,GAAGT,UAAU,EAAzB;EACA,MAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACe,QAAD,EAAWC,WAAX,IAAyBhB,QAAQ,CAAE,EAAF,CAAvC;EACA,MAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,EAAD,CAAhC;EAEA,MAAM,CAACmB,aAAD,EAAgBC,SAAhB,EAA2BC,KAA3B,IAAoCZ,WAAW,CAAC,YAAY;IAC9D,MAAMa,QAAQ,GAAG,MAAMjB,UAAU,CAACkB,OAAX,CAAmBZ,MAAM,CAACa,EAA1B,CAAvB;IACAV,OAAO,CAACQ,QAAQ,CAACG,IAAT,CAAcZ,IAAd,CAAmB,CAAnB,CAAD,CAAP;IACAa,aAAa;IACbC,SAAS,CAACL,QAAQ,CAACG,IAAT,CAAcZ,IAAd,CAAmB,CAAnB,EAAsBe,SAAvB,CAAT;EACH,CALoD,CAArD;EAMA,MAAM,CAACF,aAAD,EAAgBG,aAAhB,EAA+BC,SAA/B,IAA4CrB,WAAW,CAAC,YAAY;IACtE,MAAMa,QAAQ,GAAG,MAAMjB,UAAU,CAAC0B,eAAX,CAA2BpB,MAAM,CAACa,EAAlC,CAAvB;IACAR,WAAW,CAACM,QAAQ,CAACG,IAAT,CAAcV,QAAf,CAAX;EACH,CAH4D,CAA7D;EAIA,MAAM,CAACY,SAAD,IAAclB,WAAW,CAAC,MAAOe,EAAP,IAAc;IAC1C,MAAMF,QAAQ,GAAG,MAAMhB,UAAU,CAAC0B,WAAX,CAAuBR,EAAvB,CAAvB;IACA,MAAMS,IAAI,GAAGX,QAAQ,CAACG,IAAT,CAAcR,IAAd,CAAmB,CAAnB,CAAb;IACAC,OAAO,CAACe,IAAD,CAAP;EACH,CAJ8B,CAA/B;EAMAhC,SAAS,CAAC,MAAM;IACZkB,aAAa;EAChB,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACI;IAAA,WACKC,SAAS,gBACJ,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADI,gBAEJ;MAAA,WACOH,IAAI,CAACiB,KAAL,iBACG;QAAI,OAAO,EAAE,MAAI;UAACtB,MAAM,CAACuB,IAAP,CAAY,WAAUlB,IAAI,CAACO,EAA3B;QAA+B,CAAjD;QAAA,uBAA4DP,IAAI,CAACiB,KAAjE;MAAA;QAAA;QAAA;QAAA;MAAA,QAFV,eAIM;QAAA,WAAKrB,IAAI,CAACW,EAAV,QAAgBX,IAAI,CAACuB,KAArB;MAAA;QAAA;QAAA;QAAA;MAAA,QAJN,eAKM;QAAA,UAAKvB,IAAI,CAACwB;MAAV;QAAA;QAAA;QAAA;MAAA,QALN;IAAA;MAAA;MAAA;MAAA;IAAA,QAHV,EAWKR,aAAa,gBACR,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADQ,gBAER,QAAC,WAAD;MAAa,QAAQ,EAAEd;IAAvB;MAAA;MAAA;MAAA;IAAA,QAbV;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAmBH,CA9CD;;GAAML,U;UACaN,S,EACAD,U,EAK2BM,W,EAMQA,W,EAI9BA,W;;;KAjBlBC,U;AAgDN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}