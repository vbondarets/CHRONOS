{"ast":null,"code":"var _jsxFileName = \"/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/components/AppRouter.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // import { useContext } from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { publicRoutes, privateRoutes, adminRoutes } from '../router'; // import { AuthContext } from './context';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = () => {\n  _s();\n\n  const isAuth = useSelector(state => state.status);\n  const role = useSelector(state => state.user.role);\n  return isAuth ? /*#__PURE__*/_jsxDEV(Switch, {\n    children: [privateRoutes.map(route => /*#__PURE__*/_jsxDEV(Route, {\n      component: route.component,\n      path: route.path,\n      exact: route.exact\n    }, route.path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }, this)), \"if (\", role, \" === \", \"ADMIN\", \") \", adminRoutes.map(route => /*#__PURE__*/_jsxDEV(Route, {\n      component: route.component,\n      path: route.path,\n      exact: route.exact\n    }, route.path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }, this)), /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(Switch, {\n    children: [publicRoutes.map(route => /*#__PURE__*/_jsxDEV(Route, {\n      component: route.component,\n      path: route.path,\n      exact: route.exact\n    }, route.path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 13\n  }, this);\n};\n\n_s(AppRouter, \"DNeVqYvlCudGFM2FSplGeKegEOM=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"names":["React","useSelector","Redirect","Route","Switch","publicRoutes","privateRoutes","adminRoutes","AppRouter","isAuth","state","status","role","user","map","route","component","path","exact"],"sources":["/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/components/AppRouter.jsx"],"sourcesContent":["import React from 'react';\n// import { useContext } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { publicRoutes, privateRoutes, adminRoutes } from '../router';\n// import { AuthContext } from './context';\n\nconst AppRouter = () => {\n    const isAuth = useSelector(state => state.status);\n    const role = useSelector(state => state.user.role);\n    return (\n        isAuth\n            ?\n            <Switch>\n                {privateRoutes.map(route =>\n                    <Route\n                        key={route.path}\n                        component={route.component}\n                        path={route.path}\n                        exact={route.exact}\n                    />\n                )}\n                if ({role} === {\"ADMIN\"}) {\n                    adminRoutes.map(route =>\n                        <Route\n                            key={route.path}\n                            component={route.component}\n                            path={route.path}\n                            exact={route.exact}\n                        />\n                    )\n                }\n\n                <Redirect to='/posts' />\n            </Switch>\n            :\n            <Switch>\n                {publicRoutes.map(route =>\n                    <Route\n                        key={route.path}\n                        component={route.component}\n                        path={route.path}\n                        exact={route.exact}\n                    />\n                )}\n                <Redirect to='/login' />\n            </Switch>\n\n\n    )\n}\n\nexport default AppRouter"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,MAA1B,QAAwC,kBAAxC;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,WAAtC,QAAyD,WAAzD,C,CACA;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACpB,MAAMC,MAAM,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,MAAhB,CAA1B;EACA,MAAMC,IAAI,GAAGX,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACG,IAAN,CAAWD,IAArB,CAAxB;EACA,OACIH,MAAM,gBAEF,QAAC,MAAD;IAAA,WACKH,aAAa,CAACQ,GAAd,CAAkBC,KAAK,iBACpB,QAAC,KAAD;MAEI,SAAS,EAAEA,KAAK,CAACC,SAFrB;MAGI,IAAI,EAAED,KAAK,CAACE,IAHhB;MAII,KAAK,EAAEF,KAAK,CAACG;IAJjB,GACSH,KAAK,CAACE,IADf;MAAA;MAAA;MAAA;IAAA,QADH,CADL,UASSL,IATT,WASoB,OATpB,QAUQL,WAAW,CAACO,GAAZ,CAAgBC,KAAK,iBACjB,QAAC,KAAD;MAEI,SAAS,EAAEA,KAAK,CAACC,SAFrB;MAGI,IAAI,EAAED,KAAK,CAACE,IAHhB;MAII,KAAK,EAAEF,KAAK,CAACG;IAJjB,GACSH,KAAK,CAACE,IADf;MAAA;MAAA;MAAA;IAAA,QADJ,CAVR,eAoBI,QAAC,QAAD;MAAU,EAAE,EAAC;IAAb;MAAA;MAAA;MAAA;IAAA,QApBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QAFE,gBAyBF,QAAC,MAAD;IAAA,WACKZ,YAAY,CAACS,GAAb,CAAiBC,KAAK,iBACnB,QAAC,KAAD;MAEI,SAAS,EAAEA,KAAK,CAACC,SAFrB;MAGI,IAAI,EAAED,KAAK,CAACE,IAHhB;MAII,KAAK,EAAEF,KAAK,CAACG;IAJjB,GACSH,KAAK,CAACE,IADf;MAAA;MAAA;MAAA;IAAA,QADH,CADL,eASI,QAAC,QAAD;MAAU,EAAE,EAAC;IAAb;MAAA;MAAA;MAAA;IAAA,QATJ;EAAA;IAAA;IAAA;IAAA;EAAA,QA1BR;AAwCH,CA3CD;;GAAMT,S;UACaP,W,EACFA,W;;;KAFXO,S;AA6CN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}