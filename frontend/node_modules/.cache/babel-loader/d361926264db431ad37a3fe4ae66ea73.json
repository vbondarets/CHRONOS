{"ast":null,"code":"var _jsxFileName = \"/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/components/PostEditingForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport CategoriesSevice from '../API/CategoriesService';\nimport { useFetching } from '../hooks/useFetching';\nimport MyButton from './UI/button/MyButton';\nimport MyInput from './UI/input/MyInput';\nimport MySelect from './UI/select/MySelect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostEditingForm = _ref => {\n  _s();\n\n  let {\n    title,\n    content,\n    publishDate,\n    category_id,\n    author_id\n  } = _ref;\n  const [postTitle, setTitle] = useState(title);\n  const [postContent, setContent] = useState(content);\n  const [postCategories, setCatigories] = useState([]);\n  const [postCategory, setCategory] = useState(category_id);\n  const [fetchCategories] = useFetching(async () => {\n    const response = await CategoriesSevice.getAll();\n    const categories = response.data.categories;\n    setCatigories(categories); // console.log(categories)\n  });\n  const user = useSelector(state => state.user);\n  const [fetchEditPost] = useFetching(async () => {\n    // const response = await CategoriesSevice.getAll();\n    // const categories = response.data.categories;\n    // setCatigories(categories);\n    // // console.log(categories)\n    console.log(\"post editing\");\n  });\n  useEffect(() => {\n    fetchCategories(); // setTitle(title);\n    // setContent(content);\n    // setCategory(category_id)\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(MyInput, {\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      type: \"text\",\n      placeholder: \"Post's title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n      value: postCategory,\n      defaultValue: postCategory,\n      options: postCategories.map(el => {\n        return {\n          value: el.id,\n          name: el.title\n        };\n      }),\n      onChange: selectedCategory => setCategory(selectedCategory)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n      value: content,\n      onChange: e => setContent(e.target.value),\n      type: \"text\",\n      placeholder: \"Post's content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: () => {\n        fetchEditPost();\n      },\n      children: \"Edit post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostEditingForm, \"m9ia8eV6hcQCofhzs9AhJTvVTg0=\", false, function () {\n  return [useFetching, useSelector, useFetching];\n});\n\n_c = PostEditingForm;\nexport default PostEditingForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostEditingForm\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","CategoriesSevice","useFetching","MyButton","MyInput","MySelect","PostEditingForm","title","content","publishDate","category_id","author_id","postTitle","setTitle","postContent","setContent","postCategories","setCatigories","postCategory","setCategory","fetchCategories","response","getAll","categories","data","user","state","fetchEditPost","console","log","e","target","value","map","el","id","name","selectedCategory"],"sources":["/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/components/PostEditingForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport CategoriesSevice from '../API/CategoriesService';\nimport { useFetching } from '../hooks/useFetching';\nimport MyButton from './UI/button/MyButton';\nimport MyInput from './UI/input/MyInput';\nimport MySelect from './UI/select/MySelect';\n\n\nconst PostEditingForm = ({title, content, publishDate, category_id, author_id}) => {\n    const [postTitle, setTitle] = useState(title);\n    const [postContent, setContent] = useState(content);\n    const [postCategories, setCatigories] = useState([]);\n    const [postCategory, setCategory] = useState(category_id)\n    \n\n    const [fetchCategories] = useFetching(async () => {\n        const response = await CategoriesSevice.getAll();\n        const categories = response.data.categories;\n        setCatigories(categories);\n        // console.log(categories)\n    });\n    const user = useSelector(state => state.user);\n\n    const [fetchEditPost] = useFetching(async () => {\n        // const response = await CategoriesSevice.getAll();\n        // const categories = response.data.categories;\n        // setCatigories(categories);\n        // // console.log(categories)\n        console.log(\"post editing\")\n    });\n\n\n    useEffect(() => {\n        fetchCategories();\n        // setTitle(title);\n        // setContent(content);\n        // setCategory(category_id)\n    }, []);\n\n    return (\n        <form>\n            <MyInput\n                value={title}\n                onChange={e => setTitle(e.target.value)}\n                type=\"text\"\n                placeholder=\"Post's title\"\n            />\n            <MySelect\n                value={postCategory}\n                defaultValue={postCategory}\n                options={postCategories.map(el =>{\n                    return {value: el.id, name: el.title}\n                })}\n                onChange={selectedCategory => setCategory(selectedCategory)}\n            />\n            <MyInput\n                value={content}\n                onChange={e => setContent(e.target.value)}\n                type=\"text\"\n                placeholder=\"Post's content\"\n            />\n            <MyButton onClick={() => {fetchEditPost()}}>Edit post</MyButton>\n        </form>\n    )\n}\n\nexport default PostEditingForm"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,gBAAP,MAA6B,0BAA7B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;;AAGA,MAAMC,eAAe,GAAG,QAA2D;EAAA;;EAAA,IAA1D;IAACC,KAAD;IAAQC,OAAR;IAAiBC,WAAjB;IAA8BC,WAA9B;IAA2CC;EAA3C,CAA0D;EAC/E,MAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBd,QAAQ,CAACQ,KAAD,CAAtC;EACA,MAAM,CAACO,WAAD,EAAcC,UAAd,IAA4BhB,QAAQ,CAACS,OAAD,CAA1C;EACA,MAAM,CAACQ,cAAD,EAAiBC,aAAjB,IAAkClB,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACmB,YAAD,EAAeC,WAAf,IAA8BpB,QAAQ,CAACW,WAAD,CAA5C;EAGA,MAAM,CAACU,eAAD,IAAoBlB,WAAW,CAAC,YAAY;IAC9C,MAAMmB,QAAQ,GAAG,MAAMpB,gBAAgB,CAACqB,MAAjB,EAAvB;IACA,MAAMC,UAAU,GAAGF,QAAQ,CAACG,IAAT,CAAcD,UAAjC;IACAN,aAAa,CAACM,UAAD,CAAb,CAH8C,CAI9C;EACH,CALoC,CAArC;EAMA,MAAME,IAAI,GAAGzB,WAAW,CAAC0B,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;EAEA,MAAM,CAACE,aAAD,IAAkBzB,WAAW,CAAC,YAAY;IAC5C;IACA;IACA;IACA;IACA0B,OAAO,CAACC,GAAR,CAAY,cAAZ;EACH,CANkC,CAAnC;EASA/B,SAAS,CAAC,MAAM;IACZsB,eAAe,GADH,CAEZ;IACA;IACA;EACH,CALQ,EAKN,EALM,CAAT;EAOA,oBACI;IAAA,wBACI,QAAC,OAAD;MACI,KAAK,EAAEb,KADX;MAEI,QAAQ,EAAEuB,CAAC,IAAIjB,QAAQ,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAF3B;MAGI,IAAI,EAAC,MAHT;MAII,WAAW,EAAC;IAJhB;MAAA;MAAA;MAAA;IAAA,QADJ,eAOI,QAAC,QAAD;MACI,KAAK,EAAEd,YADX;MAEI,YAAY,EAAEA,YAFlB;MAGI,OAAO,EAAEF,cAAc,CAACiB,GAAf,CAAmBC,EAAE,IAAG;QAC7B,OAAO;UAACF,KAAK,EAAEE,EAAE,CAACC,EAAX;UAAeC,IAAI,EAAEF,EAAE,CAAC3B;QAAxB,CAAP;MACH,CAFQ,CAHb;MAMI,QAAQ,EAAE8B,gBAAgB,IAAIlB,WAAW,CAACkB,gBAAD;IAN7C;MAAA;MAAA;MAAA;IAAA,QAPJ,eAeI,QAAC,OAAD;MACI,KAAK,EAAE7B,OADX;MAEI,QAAQ,EAAEsB,CAAC,IAAIf,UAAU,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAF7B;MAGI,IAAI,EAAC,MAHT;MAII,WAAW,EAAC;IAJhB;MAAA;MAAA;MAAA;IAAA,QAfJ,eAqBI,QAAC,QAAD;MAAU,OAAO,EAAE,MAAM;QAACL,aAAa;MAAG,CAA1C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QArBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAyBH,CAxDD;;GAAMrB,e;UAOwBJ,W,EAMbF,W,EAEWE,W;;;KAftBI,e;AA0DN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}