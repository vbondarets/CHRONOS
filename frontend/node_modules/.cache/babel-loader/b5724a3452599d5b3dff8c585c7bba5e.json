{"ast":null,"code":"var _jsxFileName = \"/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/components/PostItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useFetching } from '../hooks/useFetching';\nimport MyButton from './UI/button/MyButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction setPostStatus(status) {\n  if (status === 1) {\n    return \"Opened\";\n  } else {\n    return \"Closed\";\n  }\n}\n\nconst PostItem = props => {\n  _s();\n\n  const [user, setUser] = useState([]);\n  const [fetchUser] = useFetching(async () => {\n    const response = await UserSevice.getUserById(comment.authorId);\n    const User = response.data.user[0];\n    setUser(User);\n  });\n  useEffect(() => {\n    fetchUser();\n  }, []);\n  const router = useHistory();\n\n  const goTo = id => {\n    router.push('/posts/' + id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    onClick: () => goTo(props.post.id),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", setPostStatus(props.post.status)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.post.publishDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [props.post.id, \" \", props.post.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: props.post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostItem, \"ZbuKcwX56mdZHR1XEwKpbUat2vk=\", false, function () {\n  return [useFetching, useHistory];\n});\n\n_c = PostItem;\nexport default PostItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"names":["React","useEffect","useState","useHistory","useFetching","MyButton","setPostStatus","status","PostItem","props","user","setUser","fetchUser","response","UserSevice","getUserById","comment","authorId","User","data","router","goTo","id","push","post","publishDate","title","content","body"],"sources":["/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/components/PostItem.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useFetching } from '../hooks/useFetching';\nimport MyButton from './UI/button/MyButton';\n\nfunction setPostStatus( status ){\n    if(status === 1){\n        return \"Opened\";\n    }\n    else {\n        return \"Closed\";\n    }\n}\n\nconst PostItem = (props) => {\n    const [user, setUser] = useState([]);\n    const [fetchUser] = useFetching(async () => {\n        const response = await UserSevice.getUserById(comment.authorId);\n        const User = response.data.user[0];\n        setUser(User);\n    });\n    useEffect(() => {\n        fetchUser();\n    }, []);\n    const router = useHistory();\n    const goTo = (id) => {\n        router.push('/posts/'+ id);\n    }\n    return (\n        <div className=\"post\" onClick={() => goTo(props.post.id)}>\n            <div className=\"post__content\">\n                <p>Status: {setPostStatus(props.post.status)}</p>\n                <p>{props.post.publishDate}</p>\n                <strong>{props.post.id} {props.post.title}</strong>\n                <p>{props.post.content}</p>\n                <div>\n                    {props.post.body}\n                </div>\n                {/* <div className=\"post__btns\">\n                    <MyButton onClick={()=> router.push('/posts/'+ props.post.id)}>Open</MyButton>\n                    <MyButton onClick={()=> props.remove(props.post.id)}>Delete</MyButton>\n                </div> */}\n            </div>\n        </div>\n    )\n}\n\nexport default PostItem;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,QAAP,MAAqB,sBAArB;;;AAEA,SAASC,aAAT,CAAwBC,MAAxB,EAAgC;EAC5B,IAAGA,MAAM,KAAK,CAAd,EAAgB;IACZ,OAAO,QAAP;EACH,CAFD,MAGK;IACD,OAAO,QAAP;EACH;AACJ;;AAED,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EACxB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACU,SAAD,IAAcR,WAAW,CAAC,YAAY;IACxC,MAAMS,QAAQ,GAAG,MAAMC,UAAU,CAACC,WAAX,CAAuBC,OAAO,CAACC,QAA/B,CAAvB;IACA,MAAMC,IAAI,GAAGL,QAAQ,CAACM,IAAT,CAAcT,IAAd,CAAmB,CAAnB,CAAb;IACAC,OAAO,CAACO,IAAD,CAAP;EACH,CAJ8B,CAA/B;EAKAjB,SAAS,CAAC,MAAM;IACZW,SAAS;EACZ,CAFQ,EAEN,EAFM,CAAT;EAGA,MAAMQ,MAAM,GAAGjB,UAAU,EAAzB;;EACA,MAAMkB,IAAI,GAAIC,EAAD,IAAQ;IACjBF,MAAM,CAACG,IAAP,CAAY,YAAWD,EAAvB;EACH,CAFD;;EAGA,oBACI;IAAK,SAAS,EAAC,MAAf;IAAsB,OAAO,EAAE,MAAMD,IAAI,CAACZ,KAAK,CAACe,IAAN,CAAWF,EAAZ,CAAzC;IAAA,uBACI;MAAK,SAAS,EAAC,eAAf;MAAA,wBACI;QAAA,uBAAYhB,aAAa,CAACG,KAAK,CAACe,IAAN,CAAWjB,MAAZ,CAAzB;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,UAAIE,KAAK,CAACe,IAAN,CAAWC;MAAf;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAA,WAAShB,KAAK,CAACe,IAAN,CAAWF,EAApB,OAAyBb,KAAK,CAACe,IAAN,CAAWE,KAApC;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ,eAII;QAAA,UAAIjB,KAAK,CAACe,IAAN,CAAWG;MAAf;QAAA;QAAA;QAAA;MAAA,QAJJ,eAKI;QAAA,UACKlB,KAAK,CAACe,IAAN,CAAWI;MADhB;QAAA;QAAA;QAAA;MAAA,QALJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAiBH,CA/BD;;GAAMpB,Q;UAEkBJ,W,EAQLD,U;;;KAVbK,Q;AAiCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}