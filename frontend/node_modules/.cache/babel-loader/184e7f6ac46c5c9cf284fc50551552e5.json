{"ast":null,"code":"var _jsxFileName = \"/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/components/PostEditingForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport CategoriesSevice from '../API/CategoriesService';\nimport { useFetching } from '../hooks/useFetching';\nimport MyButton from './UI/button/MyButton';\nimport MyInput from './UI/input/MyInput';\nimport MySelect from './UI/select/MySelect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostEditingForm = _ref => {\n  _s();\n\n  let {\n    title,\n    content,\n    category,\n    publishDate,\n    category_id,\n    author_id\n  } = _ref;\n  const [postTitle, setTitle] = useState('');\n  const [postContent, setContent] = useState('');\n  const [postCategories, setCatigories] = useState([]);\n  const [postCategory, setCatigory] = useState('');\n  const [fetchCategories] = useFetching(async () => {\n    const response = await CategoriesSevice.getAll();\n    const categories = response.data.categories;\n    setCatigories(categories); // console.log(categories)\n  });\n  const user = useSelector(state => state.user);\n  const [fetchEditPost] = useFetching(async () => {\n    const response = await CategoriesSevice.getAll();\n    const categories = response.data.categories;\n    setCatigories(categories); // console.log(categories)\n  });\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(MyInput, {\n      value: postTitle,\n      onChange: e => setTitle(e.target.value),\n      type: \"text\",\n      placeholder: \"Post's title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n      value: postCategory,\n      defaultValue: \"Choose category\",\n      options: postCategories.map(el => {\n        return {\n          value: el.id,\n          name: el.title\n        };\n      }),\n      onChange: selectedCategory => setCatigory(selectedCategory)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n      value: postContent,\n      onChange: e => setContent(e.target.value),\n      type: \"text\",\n      placeholder: \"Post's content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: () => {\n        fetchEditPost();\n      },\n      children: \"Create post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostEditingForm, \"q8YdhHtCFv8M+iH7x/fHB+9Wacc=\", false, function () {\n  return [useFetching, useSelector, useFetching];\n});\n\n_c = PostEditingForm;\nexport default PostEditingForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostEditingForm\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","CategoriesSevice","useFetching","MyButton","MyInput","MySelect","PostEditingForm","title","content","category","publishDate","category_id","author_id","postTitle","setTitle","postContent","setContent","postCategories","setCatigories","postCategory","setCatigory","fetchCategories","response","getAll","categories","data","user","state","fetchEditPost","e","target","value","map","el","id","name","selectedCategory"],"sources":["/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/components/PostEditingForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport CategoriesSevice from '../API/CategoriesService';\nimport { useFetching } from '../hooks/useFetching';\nimport MyButton from './UI/button/MyButton';\nimport MyInput from './UI/input/MyInput';\nimport MySelect from './UI/select/MySelect';\n\n\nconst PostEditingForm = ({title, content, category, publishDate, category_id, author_id}) => {\n    const [postTitle, setTitle] = useState('');\n    const [postContent, setContent] = useState('');\n    const [postCategories, setCatigories] = useState([]);\n    const [postCategory, setCatigory] = useState('');\n    \n\n    const [fetchCategories] = useFetching(async () => {\n        const response = await CategoriesSevice.getAll();\n        const categories = response.data.categories;\n        setCatigories(categories);\n        // console.log(categories)\n    });\n    const user = useSelector(state => state.user);\n\n    const [fetchEditPost] = useFetching(async () => {\n        const response = await CategoriesSevice.getAll();\n        const categories = response.data.categories;\n        setCatigories(categories);\n        // console.log(categories)\n    });\n\n\n    useEffect(() => {\n        fetchCategories();\n    }, []);\n\n    return (\n        <form>\n            <MyInput\n                value={postTitle}\n                onChange={e => setTitle(e.target.value)}\n                type=\"text\"\n                placeholder=\"Post's title\"\n            />\n            <MySelect\n                value={postCategory}\n                defaultValue={\"Choose category\"}\n                options={postCategories.map(el =>{\n                    return {value: el.id, name: el.title}\n                })}\n                onChange={selectedCategory => setCatigory(selectedCategory)}\n            />\n            <MyInput\n                value={postContent}\n                onChange={e => setContent(e.target.value)}\n                type=\"text\"\n                placeholder=\"Post's content\"\n            />\n            <MyButton onClick={() => {fetchEditPost()}}>Create post</MyButton>\n        </form>\n    )\n}\n\nexport default PostEditingForm"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,gBAAP,MAA6B,0BAA7B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;;AAGA,MAAMC,eAAe,GAAG,QAAqE;EAAA;;EAAA,IAApE;IAACC,KAAD;IAAQC,OAAR;IAAiBC,QAAjB;IAA2BC,WAA3B;IAAwCC,WAAxC;IAAqDC;EAArD,CAAoE;EACzF,MAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACgB,WAAD,EAAcC,UAAd,IAA4BjB,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACkB,cAAD,EAAiBC,aAAjB,IAAkCnB,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACoB,YAAD,EAAeC,WAAf,IAA8BrB,QAAQ,CAAC,EAAD,CAA5C;EAGA,MAAM,CAACsB,eAAD,IAAoBnB,WAAW,CAAC,YAAY;IAC9C,MAAMoB,QAAQ,GAAG,MAAMrB,gBAAgB,CAACsB,MAAjB,EAAvB;IACA,MAAMC,UAAU,GAAGF,QAAQ,CAACG,IAAT,CAAcD,UAAjC;IACAN,aAAa,CAACM,UAAD,CAAb,CAH8C,CAI9C;EACH,CALoC,CAArC;EAMA,MAAME,IAAI,GAAG1B,WAAW,CAAC2B,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;EAEA,MAAM,CAACE,aAAD,IAAkB1B,WAAW,CAAC,YAAY;IAC5C,MAAMoB,QAAQ,GAAG,MAAMrB,gBAAgB,CAACsB,MAAjB,EAAvB;IACA,MAAMC,UAAU,GAAGF,QAAQ,CAACG,IAAT,CAAcD,UAAjC;IACAN,aAAa,CAACM,UAAD,CAAb,CAH4C,CAI5C;EACH,CALkC,CAAnC;EAQA1B,SAAS,CAAC,MAAM;IACZuB,eAAe;EAClB,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACI;IAAA,wBACI,QAAC,OAAD;MACI,KAAK,EAAER,SADX;MAEI,QAAQ,EAAEgB,CAAC,IAAIf,QAAQ,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAF3B;MAGI,IAAI,EAAC,MAHT;MAII,WAAW,EAAC;IAJhB;MAAA;MAAA;MAAA;IAAA,QADJ,eAOI,QAAC,QAAD;MACI,KAAK,EAAEZ,YADX;MAEI,YAAY,EAAE,iBAFlB;MAGI,OAAO,EAAEF,cAAc,CAACe,GAAf,CAAmBC,EAAE,IAAG;QAC7B,OAAO;UAACF,KAAK,EAAEE,EAAE,CAACC,EAAX;UAAeC,IAAI,EAAEF,EAAE,CAAC1B;QAAxB,CAAP;MACH,CAFQ,CAHb;MAMI,QAAQ,EAAE6B,gBAAgB,IAAIhB,WAAW,CAACgB,gBAAD;IAN7C;MAAA;MAAA;MAAA;IAAA,QAPJ,eAeI,QAAC,OAAD;MACI,KAAK,EAAErB,WADX;MAEI,QAAQ,EAAEc,CAAC,IAAIb,UAAU,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAF7B;MAGI,IAAI,EAAC,MAHT;MAII,WAAW,EAAC;IAJhB;MAAA;MAAA;MAAA;IAAA,QAfJ,eAqBI,QAAC,QAAD;MAAU,OAAO,EAAE,MAAM;QAACH,aAAa;MAAG,CAA1C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QArBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAyBH,CApDD;;GAAMtB,e;UAOwBJ,W,EAMbF,W,EAEWE,W;;;KAftBI,e;AAsDN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}