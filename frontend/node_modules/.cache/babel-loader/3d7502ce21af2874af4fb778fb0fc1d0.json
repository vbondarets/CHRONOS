{"ast":null,"code":"var _jsxFileName = \"/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/components/PostForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CategoriesSevice from '../API/CategoriesService';\nimport { useFetching } from '../hooks/useFetching';\nimport MyButton from './UI/button/MyButton';\nimport MyInput from './UI/input/MyInput';\nimport MySelect from './UI/select/MySelect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostForm = () => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [categories, setCatigories] = useState([]);\n  const [category, setCatigory] = useState('');\n  const [fetchCategories, isCategoriesLoading, CategoriesError] = useFetching(async () => {\n    const response = await CategoriesSevice.getAll();\n    const categories = response.data.categories;\n    setCatigories(categories);\n    console.log(categories);\n  });\n\n  function addNewPost(e) {\n    e.preventDefault();\n    const newPost = {\n      title: title,\n      content: content,\n      category_id: category\n    };\n\n    if (!title || !content) {\n      return;\n    }\n\n    setTitle('');\n    setContent('');\n    console.log(newPost); // setPosts([...posts, newPost]);\n  }\n\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(MyInput, {\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      type: \"text\",\n      placeholder: \"Post's title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n      value: category,\n      defaultValue: \"Choose category\",\n      options: categories.map(el => {\n        return {\n          value: el.id,\n          name: el.title\n        };\n      }),\n      onChange: selectedCategory => setCatigory(selectedCategory)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n      value: content,\n      onChange: e => setContent(e.target.value),\n      type: \"text\",\n      placeholder: \"Post's content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: addNewPost,\n      children: \"Create post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostForm, \"vhy3x/H1sToJRH6MiN2fXdQgdnI=\", false, function () {\n  return [useFetching];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useEffect","useState","CategoriesSevice","useFetching","MyButton","MyInput","MySelect","PostForm","title","setTitle","content","setContent","categories","setCatigories","category","setCatigory","fetchCategories","isCategoriesLoading","CategoriesError","response","getAll","data","console","log","addNewPost","e","preventDefault","newPost","category_id","target","value","map","el","id","name","selectedCategory"],"sources":["/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/components/PostForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport CategoriesSevice from '../API/CategoriesService';\nimport { useFetching } from '../hooks/useFetching';\nimport MyButton from './UI/button/MyButton';\nimport MyInput from './UI/input/MyInput';\nimport MySelect from './UI/select/MySelect';\n\nconst PostForm = () => {\n    const [title, setTitle] = useState('');\n    const [content, setContent] = useState('');\n    const [categories, setCatigories] = useState([]);\n    const [category, setCatigory] = useState('');\n    \n\n    const [fetchCategories, isCategoriesLoading, CategoriesError] = useFetching(async () => {\n        const response = await CategoriesSevice.getAll();\n        const categories = response.data.categories;\n        setCatigories(categories);\n        console.log(categories)\n    });\n\n    function addNewPost (e) {\n        e.preventDefault();\n        const newPost ={\n          title: title,\n          content: content,\n          category_id: category\n        }\n        if(!title || !content){\n            return;\n        }\n        \n        setTitle('');\n        setContent('');\n        console.log(newPost);\n        // setPosts([...posts, newPost]);\n    }\n    useEffect(() => {\n        fetchCategories();\n    }, []);\n\n    return (\n        <form>\n            <MyInput\n                value={title}\n                onChange={e => setTitle(e.target.value)}\n                type=\"text\"\n                placeholder=\"Post's title\"\n            />\n            <MySelect\n                value={category}\n                defaultValue={\"Choose category\"}\n                options={categories.map(el =>{\n                    return {value: el.id, name: el.title}\n                })}\n                onChange={selectedCategory => setCatigory(selectedCategory)}\n            />\n            <MyInput\n                value={content}\n                onChange={e => setContent(e.target.value)}\n                type=\"text\"\n                placeholder=\"Post's content\"\n            />\n            <MyButton onClick={addNewPost}>Create post</MyButton>\n        </form>\n    )\n}\n\nexport default PostForm"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,0BAA7B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;EAGA,MAAM,CAACe,eAAD,EAAkBC,mBAAlB,EAAuCC,eAAvC,IAA0Df,WAAW,CAAC,YAAY;IACpF,MAAMgB,QAAQ,GAAG,MAAMjB,gBAAgB,CAACkB,MAAjB,EAAvB;IACA,MAAMR,UAAU,GAAGO,QAAQ,CAACE,IAAT,CAAcT,UAAjC;IACAC,aAAa,CAACD,UAAD,CAAb;IACAU,OAAO,CAACC,GAAR,CAAYX,UAAZ;EACH,CAL0E,CAA3E;;EAOA,SAASY,UAAT,CAAqBC,CAArB,EAAwB;IACpBA,CAAC,CAACC,cAAF;IACA,MAAMC,OAAO,GAAE;MACbnB,KAAK,EAAEA,KADM;MAEbE,OAAO,EAAEA,OAFI;MAGbkB,WAAW,EAAEd;IAHA,CAAf;;IAKA,IAAG,CAACN,KAAD,IAAU,CAACE,OAAd,EAAsB;MAClB;IACH;;IAEDD,QAAQ,CAAC,EAAD,CAAR;IACAE,UAAU,CAAC,EAAD,CAAV;IACAW,OAAO,CAACC,GAAR,CAAYI,OAAZ,EAboB,CAcpB;EACH;;EACD3B,SAAS,CAAC,MAAM;IACZgB,eAAe;EAClB,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACI;IAAA,wBACI,QAAC,OAAD;MACI,KAAK,EAAER,KADX;MAEI,QAAQ,EAAEiB,CAAC,IAAIhB,QAAQ,CAACgB,CAAC,CAACI,MAAF,CAASC,KAAV,CAF3B;MAGI,IAAI,EAAC,MAHT;MAII,WAAW,EAAC;IAJhB;MAAA;MAAA;MAAA;IAAA,QADJ,eAOI,QAAC,QAAD;MACI,KAAK,EAAEhB,QADX;MAEI,YAAY,EAAE,iBAFlB;MAGI,OAAO,EAAEF,UAAU,CAACmB,GAAX,CAAeC,EAAE,IAAG;QACzB,OAAO;UAACF,KAAK,EAAEE,EAAE,CAACC,EAAX;UAAeC,IAAI,EAAEF,EAAE,CAACxB;QAAxB,CAAP;MACH,CAFQ,CAHb;MAMI,QAAQ,EAAE2B,gBAAgB,IAAIpB,WAAW,CAACoB,gBAAD;IAN7C;MAAA;MAAA;MAAA;IAAA,QAPJ,eAeI,QAAC,OAAD;MACI,KAAK,EAAEzB,OADX;MAEI,QAAQ,EAAEe,CAAC,IAAId,UAAU,CAACc,CAAC,CAACI,MAAF,CAASC,KAAV,CAF7B;MAGI,IAAI,EAAC,MAHT;MAII,WAAW,EAAC;IAJhB;MAAA;MAAA;MAAA;IAAA,QAfJ,eAqBI,QAAC,QAAD;MAAU,OAAO,EAAEN,UAAnB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QArBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAyBH,CA3DD;;GAAMjB,Q;UAO8DJ,W;;;KAP9DI,Q;AA6DN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}