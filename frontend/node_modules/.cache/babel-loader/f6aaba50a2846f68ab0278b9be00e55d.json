{"ast":null,"code":"var _jsxFileName = \"/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/components/PostForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport CategoriesSevice from '../API/CategoriesService';\nimport { useFetching } from '../hooks/useFetching';\nimport MyButton from './UI/button/MyButton';\nimport MyInput from './UI/input/MyInput';\nimport MySelect from './UI/select/MySelect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostForm = _ref => {\n  _s();\n\n  let {\n    create\n  } = _ref;\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [categories, setCatigories] = useState([]);\n  const [category, setCatigory] = useState('');\n  const [fetchCategories, isCategoriesLoading, CategoriesError] = useFetching(async () => {\n    const response = await CategoriesSevice.getAll();\n    const categories = response.data.categories;\n    setCatigories(categories); // console.log(categories)\n  });\n  const user = useSelector(state => state.user);\n\n  function addNewPost(e) {\n    e.preventDefault();\n    const newPost = {\n      title: title,\n      content: content,\n      category_id: parseInt(category),\n      author_id: user.id\n    };\n\n    if (!title || !content) {\n      return;\n    }\n\n    create(newPost);\n    setTitle('');\n    setContent(''); // console.log(newPost);\n    // setPosts([...posts, newPost]);\n  }\n\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(MyInput, {\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      type: \"text\",\n      placeholder: \"Post's title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n      value: category,\n      defaultValue: \"Choose category\",\n      options: categories.map(el => {\n        return {\n          value: el.id,\n          name: el.title\n        };\n      }),\n      onChange: selectedCategory => setCatigory(selectedCategory)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n      value: content,\n      onChange: e => setContent(e.target.value),\n      type: \"text\",\n      placeholder: \"Post's content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: addNewPost,\n      children: \"Create post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostForm, \"qhh+2O+GufaFkExr7nCHkN7d59g=\", false, function () {\n  return [useFetching, useSelector];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","CategoriesSevice","useFetching","MyButton","MyInput","MySelect","PostForm","create","title","setTitle","content","setContent","categories","setCatigories","category","setCatigory","fetchCategories","isCategoriesLoading","CategoriesError","response","getAll","data","user","state","addNewPost","e","preventDefault","newPost","category_id","parseInt","author_id","id","target","value","map","el","name","selectedCategory"],"sources":["/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/components/PostForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport CategoriesSevice from '../API/CategoriesService';\nimport { useFetching } from '../hooks/useFetching';\nimport MyButton from './UI/button/MyButton';\nimport MyInput from './UI/input/MyInput';\nimport MySelect from './UI/select/MySelect';\n\nconst PostForm = ({create}) => {\n    const [title, setTitle] = useState('');\n    const [content, setContent] = useState('');\n    const [categories, setCatigories] = useState([]);\n    const [category, setCatigory] = useState('');\n    \n\n    const [fetchCategories, isCategoriesLoading, CategoriesError] = useFetching(async () => {\n        const response = await CategoriesSevice.getAll();\n        const categories = response.data.categories;\n        setCatigories(categories);\n        // console.log(categories)\n    });\n    const user = useSelector(state => state.user);\n\n    function addNewPost (e) {\n        e.preventDefault();\n        const newPost ={\n          title: title,\n          content: content,\n          category_id: parseInt(category),\n          author_id: user.id\n        }\n        if(!title || !content){\n            return;\n        }\n        create(newPost);\n        setTitle('');\n        setContent('');\n        // console.log(newPost);\n        // setPosts([...posts, newPost]);\n    }\n    useEffect(() => {\n        fetchCategories();\n    }, []);\n\n    return (\n        <form>\n            <MyInput\n                value={title}\n                onChange={e => setTitle(e.target.value)}\n                type=\"text\"\n                placeholder=\"Post's title\"\n            />\n            <MySelect\n                value={category}\n                defaultValue={\"Choose category\"}\n                options={categories.map(el =>{\n                    return {value: el.id, name: el.title}\n                })}\n                onChange={selectedCategory => setCatigory(selectedCategory)}\n            />\n            <MyInput\n                value={content}\n                onChange={e => setContent(e.target.value)}\n                type=\"text\"\n                placeholder=\"Post's content\"\n            />\n            <MyButton onClick={addNewPost}>Create post</MyButton>\n        </form>\n    )\n}\n\nexport default PostForm"],"mappings":"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"},"metadata":{},"sourceType":"module"}