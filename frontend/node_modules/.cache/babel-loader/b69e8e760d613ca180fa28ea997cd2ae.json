{"ast":null,"code":"var _jsxFileName = \"/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/pages/PostIdPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport PostSevice from '../API/PostService';\nimport UserSevice from '../API/UserService';\nimport CommentForm from '../components/CommentForm';\nimport CommentList from '../components/CommentList';\nimport Loader from '../components/UI/Loader/Loader';\nimport MyModal from '../components/UI/MyModal/MyModal';\nimport { useFetching } from '../hooks/useFetching';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostIdPage = () => {\n  _s();\n\n  const params = useParams();\n  const router = useHistory();\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState([]);\n  const [user, setUser] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [commentFormText, setcommentFormText] = useState(\"Add\");\n  const [fetchPostById, isLoading, error] = useFetching(async () => {\n    try {\n      const response = await PostSevice.getById(params.id);\n      setPost(response.data.post[0]);\n      fetchComments();\n      fetchUser(response.data.post[0].author_id);\n    } catch (err) {\n      router.push(\"/error\");\n    }\n  });\n  const [fetchComments, isCommLoading, CommError] = useFetching(async () => {\n    const response = await PostSevice.getPostComments(params.id);\n    setComments(response.data.comments);\n  });\n  const [fetchUser] = useFetching(async id => {\n    const response = await UserSevice.getUserById(id);\n    const User = response.data.user[0];\n    setUser(User);\n  });\n  useEffect(() => {\n    fetchPostById();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(CommentForm, {\n        buttonText: commentFormText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [user.login && /*#__PURE__*/_jsxDEV(\"h4\", {\n        onClick: () => {\n          router.push(\"/user/\" + user.id);\n        },\n        children: [\"Author: \", user.login]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }, this), isCommLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(CommentList, {\n      comments: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostIdPage, \"PE6Waj6l178cyO68tq3aeOXXULo=\", false, function () {\n  return [useParams, useHistory, useFetching, useFetching, useFetching];\n});\n\n_c = PostIdPage;\nexport default PostIdPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostIdPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","useHistory","useParams","PostSevice","UserSevice","CommentForm","CommentList","Loader","MyModal","useFetching","PostIdPage","params","router","post","setPost","comments","setComments","user","setUser","modal","setModal","commentFormText","setcommentFormText","fetchPostById","isLoading","error","response","getById","id","data","fetchComments","fetchUser","author_id","err","push","isCommLoading","CommError","getPostComments","getUserById","User","login","title","content"],"sources":["/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/pages/PostIdPage.jsx"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom'\nimport PostSevice from '../API/PostService';\nimport UserSevice from '../API/UserService';\nimport CommentForm from '../components/CommentForm';\nimport CommentList from '../components/CommentList';\nimport Loader from '../components/UI/Loader/Loader';\nimport MyModal from '../components/UI/MyModal/MyModal';\nimport { useFetching } from '../hooks/useFetching';\n\nconst PostIdPage = () => {\n    const params = useParams();\n    const router = useHistory();\n    const [post, setPost] = useState({})\n    const [comments, setComments] =useState ([]);\n    const [user, setUser] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [commentFormText, setcommentFormText] = useState(\"Add\");\n    \n    \n    const [fetchPostById, isLoading, error] = useFetching(async () => {\n       try{const response = await PostSevice.getById(params.id);\n        setPost(response.data.post[0]);\n        fetchComments()\n        fetchUser(response.data.post[0].author_id);}\n        catch(err){\n            router.push(\"/error\")\n        }\n    });\n    const [fetchComments, isCommLoading, CommError] = useFetching(async () => {\n        const response = await PostSevice.getPostComments(params.id);\n        setComments(response.data.comments);\n    });\n    const [fetchUser] = useFetching(async (id) => {\n        const response = await UserSevice.getUserById(id);\n        const User = response.data.user[0];\n        setUser(User);\n    });\n    \n    useEffect(() => {\n        fetchPostById()\n    }, []);\n    \n    return (\n        <div>\n            <MyModal visible={modal} setVisible={setModal}>\n                <CommentForm buttonText={commentFormText}/>\n            </MyModal>\n            {isLoading\n                ? <Loader />\n                : <div>\n                        {user.login &&\n                            <h4 onClick={()=>{router.push(\"/user/\"+ user.id)}}>Author: {user.login}</h4>\n                        }\n                        <h2>{post.title}</h2>\n                        <h3>{post.content}</h3>\n                    </div>\n            }\n            {isCommLoading\n                ? <Loader />\n                : <CommentList comments={comments}/>\n            }\n        </div>\n    )\n}\n\nexport default PostIdPage"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,SAA3B,QAA4C,kBAA5C;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,SAASC,WAAT,QAA4B,sBAA5B;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACrB,MAAMC,MAAM,GAAGT,SAAS,EAAxB;EACA,MAAMU,MAAM,GAAGX,UAAU,EAAzB;EACA,MAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACiB,QAAD,EAAWC,WAAX,IAAyBlB,QAAQ,CAAE,EAAF,CAAvC;EACA,MAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACqB,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAM,CAACuB,eAAD,EAAkBC,kBAAlB,IAAwCxB,QAAQ,CAAC,KAAD,CAAtD;EAGA,MAAM,CAACyB,aAAD,EAAgBC,SAAhB,EAA2BC,KAA3B,IAAoChB,WAAW,CAAC,YAAY;IAC/D,IAAG;MAAC,MAAMiB,QAAQ,GAAG,MAAMvB,UAAU,CAACwB,OAAX,CAAmBhB,MAAM,CAACiB,EAA1B,CAAvB;MACHd,OAAO,CAACY,QAAQ,CAACG,IAAT,CAAchB,IAAd,CAAmB,CAAnB,CAAD,CAAP;MACAiB,aAAa;MACbC,SAAS,CAACL,QAAQ,CAACG,IAAT,CAAchB,IAAd,CAAmB,CAAnB,EAAsBmB,SAAvB,CAAT;IAA4C,CAH7C,CAIC,OAAMC,GAAN,EAAU;MACNrB,MAAM,CAACsB,IAAP,CAAY,QAAZ;IACH;EACJ,CARoD,CAArD;EASA,MAAM,CAACJ,aAAD,EAAgBK,aAAhB,EAA+BC,SAA/B,IAA4C3B,WAAW,CAAC,YAAY;IACtE,MAAMiB,QAAQ,GAAG,MAAMvB,UAAU,CAACkC,eAAX,CAA2B1B,MAAM,CAACiB,EAAlC,CAAvB;IACAZ,WAAW,CAACU,QAAQ,CAACG,IAAT,CAAcd,QAAf,CAAX;EACH,CAH4D,CAA7D;EAIA,MAAM,CAACgB,SAAD,IAActB,WAAW,CAAC,MAAOmB,EAAP,IAAc;IAC1C,MAAMF,QAAQ,GAAG,MAAMtB,UAAU,CAACkC,WAAX,CAAuBV,EAAvB,CAAvB;IACA,MAAMW,IAAI,GAAGb,QAAQ,CAACG,IAAT,CAAcZ,IAAd,CAAmB,CAAnB,CAAb;IACAC,OAAO,CAACqB,IAAD,CAAP;EACH,CAJ8B,CAA/B;EAMAxC,SAAS,CAAC,MAAM;IACZwB,aAAa;EAChB,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACI;IAAA,wBACI,QAAC,OAAD;MAAS,OAAO,EAAEJ,KAAlB;MAAyB,UAAU,EAAEC,QAArC;MAAA,uBACI,QAAC,WAAD;QAAa,UAAU,EAAEC;MAAzB;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,EAIKG,SAAS,gBACJ,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADI,gBAEJ;MAAA,WACOP,IAAI,CAACuB,KAAL,iBACG;QAAI,OAAO,EAAE,MAAI;UAAC5B,MAAM,CAACsB,IAAP,CAAY,WAAUjB,IAAI,CAACW,EAA3B;QAA+B,CAAjD;QAAA,uBAA4DX,IAAI,CAACuB,KAAjE;MAAA;QAAA;QAAA;QAAA;MAAA,QAFV,eAIM;QAAA,UAAK3B,IAAI,CAAC4B;MAAV;QAAA;QAAA;QAAA;MAAA,QAJN,eAKM;QAAA,UAAK5B,IAAI,CAAC6B;MAAV;QAAA;QAAA;QAAA;MAAA,QALN;IAAA;MAAA;MAAA;MAAA;IAAA,QANV,EAcKP,aAAa,gBACR,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADQ,gBAER,QAAC,WAAD;MAAa,QAAQ,EAAEpB;IAAvB;MAAA;MAAA;MAAA;IAAA,QAhBV;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAqBH,CAtDD;;GAAML,U;UACaR,S,EACAD,U,EAQ2BQ,W,EASQA,W,EAI9BA,W;;;KAvBlBC,U;AAwDN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}