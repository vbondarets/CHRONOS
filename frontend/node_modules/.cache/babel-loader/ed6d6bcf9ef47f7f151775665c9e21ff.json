{"ast":null,"code":"var _jsxFileName = \"/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/pages/PostIdPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport LikeSevice from '../API/LikeService';\nimport PostSevice from '../API/PostService';\nimport UserSevice from '../API/UserService';\nimport CommentForm from '../components/CommentForm';\nimport CommentList from '../components/CommentList';\nimport MyButton from '../components/UI/button/MyButton';\nimport Loader from '../components/UI/Loader/Loader';\nimport MyModal from '../components/UI/MyModal/MyModal';\nimport { useFetching } from '../hooks/useFetching';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostIdPage = () => {\n  _s();\n\n  const params = useParams();\n  const router = useHistory();\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState([]);\n  const [user, setUser] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [commentFormText, setCommentFormText] = useState(\"Add\");\n  const [commentId, setCommentId] = useState(0);\n  const [likes, setLikes] = useState([]);\n  const [postLikes, setPostLikes] = useState([]);\n  const [commentLikes, setCommentLikes] = useState([]);\n  const isAuth = useSelector(state => state.status);\n  const isAuthUser = useSelector(state => state.user);\n\n  const returnPostLikes = likes => {\n    let commentArr = [];\n    likes.forEach(like => {\n      if (like.commentId !== 0) {\n        commentArr.push(like);\n      }\n    });\n    return commentArr;\n  };\n\n  const [fetchPostLikes] = useFetching(async () => {\n    try {\n      const response = await LikeSevice.getAll(params.id);\n      setLikes(response.data.likes);\n      console.log(response.data.likes);\n      let postArr = [];\n      response.data.likes.forEach(like => {\n        if (like.postId !== 0 && like.commentId === 0) {\n          postArr.push(like);\n        }\n      });\n      setPostLikes(postArr);\n    } catch (err) {\n      setPostLikes([]);\n      console.log(err);\n    }\n  });\n  const [fetchPostById, isLoading, error] = useFetching(async () => {\n    try {\n      const response = await PostSevice.getById(params.id);\n      fetchPostLikes();\n      setPost(response.data.post[0]);\n      fetchComments();\n      fetchUser(response.data.post[0].author_id);\n    } catch (err) {\n      router.push(\"/error\");\n    }\n  });\n  const [fetchComments, isCommLoading, CommError] = useFetching(async () => {\n    await fetchPostLikes();\n    const response = await PostSevice.getPostComments(params.id);\n    setComments(response.data.comments); // console.log(likes);\n  });\n  const [fetchCreateComments, isCreateCommLoading, CreateCommError] = useFetching(async (id, comment, setMessage, setContent) => {\n    try {\n      const response = await PostSevice.createPostComment(params.id, comment);\n      console.log(response.data.resp);\n\n      if (response.data.resp === \"Created\") {\n        setMessage(response.data.resp);\n        setTimeout(() => {\n          setContent('');\n          fetchComments();\n          setMessage('');\n          setModal(false);\n        }, 500);\n      } // fetchComments();\n\n    } catch (err) {\n      console.log(err.response.data);\n    }\n  });\n  const [fetchUser] = useFetching(async id => {\n    const response = await UserSevice.getUserById(id);\n    const User = response.data.user[0];\n    setUser(User);\n  });\n\n  const likeStatus = likes => {\n    let status = \"Like\";\n    likes.forEach(like => {\n      if (like.authorId === isAuthUser.id && like.type === 1) {\n        status = \"Liked\";\n      }\n    });\n    return status;\n  };\n\n  const dislikeStatus = likes => {\n    let status = \"Dislike\";\n    likes.forEach(like => {\n      if (like.authorId === isAuthUser.id && like.type === -1) {\n        status = \"Disliked\";\n      }\n    });\n    return status;\n  };\n\n  useEffect(() => {\n    fetchPostById();\n  }, []);\n  const [createLike] = useFetching(async body => {\n    try {\n      const response = await LikeSevice.createPostLike(params.id, body);\n\n      if (response.data.resp === \"Created\" || response.data.resp === \"Updated\") {\n        fetchPostLikes();\n      } else {\n        alert(\"Error\");\n      }\n    } catch (err) {\n      alert(err);\n    }\n  });\n  const [deleteLike] = useFetching(async (id, body) => {\n    try {\n      const response = await LikeSevice.deleteLike(id, body);\n\n      if (response.data.resp === \"Deleted\" || response.data.resp === \"Updated\") {\n        fetchPostLikes();\n      } else {\n        alert(\"Error\");\n      }\n    } catch (err) {\n      alert(err);\n    }\n  });\n\n  const likeAction = (likes, action) => {\n    for (let i = 0; i < likes.length; i++) {\n      if (likes[i].authorId === isAuthUser.id && likes[i].type === action) {\n        deleteLike(likes[i].id, {\n          destinationId: post.author_id\n        });\n        return;\n      }\n    }\n\n    createLike({\n      \"authorId\": isAuthUser.id,\n      \"type\": action,\n      \"destinationId\": post.author_id\n    });\n    return;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(CommentForm, {\n        buttonText: commentFormText,\n        postId: params.id,\n        commentId: commentId,\n        setButtonText: setCommentFormText,\n        fetchFunc: fetchCreateComments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [user.login && /*#__PURE__*/_jsxDEV(\"h4\", {\n        onClick: () => {\n          router.push(\"/user/\" + user.id);\n        },\n        children: [\"Author: \", user.login]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 19\n    }, this), isAuth && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MyButton, {\n        onClick: () => {\n          likeAction(postLikes, 1);\n        },\n        children: likeStatus(postLikes)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n        onClick: () => {\n          likeAction(postLikes, -1);\n        },\n        children: dislikeStatus(postLikes)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }, this), isCommLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(CommentList, {\n      comments: comments,\n      setModal: setModal,\n      setCommentId: setCommentId,\n      setbuttonText: setCommentFormText,\n      fetchFunc: fetchCreateComments,\n      likes: returnPostLikes(likes),\n      fetchLikes: fetchPostLikes,\n      fetchComments: fetchComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostIdPage, \"5iaU1up0G0XOygJ/D8Or3+wILYs=\", false, function () {\n  return [useParams, useHistory, useSelector, useSelector, useFetching, useFetching, useFetching, useFetching, useFetching, useFetching, useFetching];\n});\n\n_c = PostIdPage;\nexport default PostIdPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostIdPage\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","Link","useHistory","useParams","LikeSevice","PostSevice","UserSevice","CommentForm","CommentList","MyButton","Loader","MyModal","useFetching","PostIdPage","params","router","post","setPost","comments","setComments","user","setUser","modal","setModal","commentFormText","setCommentFormText","commentId","setCommentId","likes","setLikes","postLikes","setPostLikes","commentLikes","setCommentLikes","isAuth","state","status","isAuthUser","returnPostLikes","commentArr","forEach","like","push","fetchPostLikes","response","getAll","id","data","console","log","postArr","postId","err","fetchPostById","isLoading","error","getById","fetchComments","fetchUser","author_id","isCommLoading","CommError","getPostComments","fetchCreateComments","isCreateCommLoading","CreateCommError","comment","setMessage","setContent","createPostComment","resp","setTimeout","getUserById","User","likeStatus","authorId","type","dislikeStatus","createLike","body","createPostLike","alert","deleteLike","likeAction","action","i","length","destinationId","login","title","content"],"sources":["/Users/vbondarets/Desktop/usof_ucode/usof_frontend/vbondarets/usof-client/src/pages/PostIdPage.jsx"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link, useHistory, useParams } from 'react-router-dom'\nimport LikeSevice from '../API/LikeService';\nimport PostSevice from '../API/PostService';\nimport UserSevice from '../API/UserService';\nimport CommentForm from '../components/CommentForm';\nimport CommentList from '../components/CommentList';\nimport MyButton from '../components/UI/button/MyButton';\nimport Loader from '../components/UI/Loader/Loader';\nimport MyModal from '../components/UI/MyModal/MyModal';\nimport { useFetching } from '../hooks/useFetching';\n\nconst PostIdPage = () => {\n    const params = useParams();\n    const router = useHistory();\n    const [post, setPost] = useState({})\n    const [comments, setComments] = useState([]);\n    const [user, setUser] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [commentFormText, setCommentFormText] = useState(\"Add\");\n    const [commentId, setCommentId] = useState(0);\n    const [likes, setLikes] = useState([]);\n    const [postLikes, setPostLikes] = useState([]);\n    const [commentLikes, setCommentLikes] = useState([]);\n    const isAuth = useSelector(state => state.status);\n    const isAuthUser = useSelector(state => state.user);\n\n\n    const returnPostLikes = (likes) => {\n        let commentArr = [];\n        likes.forEach(like => {\n            if (like.commentId !== 0) {\n                commentArr.push(like);\n            }\n        });\n        return commentArr;\n    }\n\n    const [fetchPostLikes] = useFetching(async () => {\n        try {\n            const response = await LikeSevice.getAll(params.id);\n            setLikes(response.data.likes);\n            console.log(response.data.likes);\n            let postArr = [];\n            response.data.likes.forEach(like => {\n                if(like.postId !== 0 && like.commentId === 0){\n                    postArr.push(like);\n                }\n            })\n            setPostLikes(postArr);\n        }\n        catch (err) {\n            setPostLikes([])\n            console.log(err)\n        }\n    });\n\n    const [fetchPostById, isLoading, error] = useFetching(async () => {\n        try {\n            const response = await PostSevice.getById(params.id);\n            fetchPostLikes();\n            setPost(response.data.post[0]);\n            fetchComments()\n            fetchUser(response.data.post[0].author_id);\n        }\n        catch (err) {\n            router.push(\"/error\")\n        }\n    });\n    const [fetchComments, isCommLoading, CommError] = useFetching(async () => {\n        await fetchPostLikes();\n        const response = await PostSevice.getPostComments(params.id);\n        setComments(response.data.comments);\n        // console.log(likes);\n    });\n    const [fetchCreateComments, isCreateCommLoading, CreateCommError] = useFetching(async (id, comment, setMessage, setContent) => {\n        try {\n            const response = await PostSevice.createPostComment(params.id, comment)\n            console.log(response.data.resp);\n            if (response.data.resp === \"Created\") {\n                setMessage(response.data.resp)\n                setTimeout(() => {\n                    setContent('');\n                    fetchComments();\n                    setMessage('');\n                    setModal(false);\n                }, 500);\n            }\n            // fetchComments();\n        }\n        catch (err) {\n            console.log(err.response.data)\n        }\n\n    });\n    const [fetchUser] = useFetching(async (id) => {\n        const response = await UserSevice.getUserById(id);\n        const User = response.data.user[0];\n        setUser(User);\n    });\n    const likeStatus = (likes) => {\n        let status = \"Like\"\n        likes.forEach(like => {\n            if (like.authorId === isAuthUser.id && like.type === 1) {\n                status = \"Liked\"\n            }\n        })\n        return status\n    }\n    const dislikeStatus = (likes) => {\n        let status = \"Dislike\"\n        likes.forEach(like => {\n            if (like.authorId === isAuthUser.id && like.type === -1) {\n                status = \"Disliked\"\n            }\n        })\n        return status\n    }\n\n    useEffect(() => {\n        fetchPostById()\n    }, []);\n\n    const [createLike] = useFetching(async (body) => {\n        try{\n            const response = await LikeSevice.createPostLike(params.id, body);\n            if(response.data.resp === \"Created\" || response.data.resp === \"Updated\"){\n                fetchPostLikes();\n            }\n            else {\n                alert(\"Error\")\n            }\n        }\n        catch(err){\n            alert(err)\n        }\n        \n    });\n    const [deleteLike] = useFetching(async (id, body) => {\n        try{\n            const response = await LikeSevice.deleteLike(id, body);\n            if(response.data.resp === \"Deleted\" || response.data.resp === \"Updated\"){\n                fetchPostLikes();\n            }\n            else {\n                alert(\"Error\")\n            }\n        }\n        catch(err){\n            alert(err)\n        }\n        \n    });\n\n    const likeAction = (likes , action) =>{\n        for(let i =0; i < likes.length; i++){\n            if(likes[i].authorId === isAuthUser.id && likes[i].type === action){\n                deleteLike(likes[i].id, {destinationId: post.author_id});\n                return;\n                \n            }\n        }\n        createLike({\n            \"authorId\": isAuthUser.id,\n            \"type\": action,\n            \"destinationId\": post.author_id\n        })\n        return;\n    }\n\n    return (\n        <div>\n            <MyModal visible={modal} setVisible={setModal}>\n                <CommentForm buttonText={commentFormText} postId={params.id} commentId={commentId} setButtonText={setCommentFormText} fetchFunc={fetchCreateComments} />\n            </MyModal>\n            {isLoading\n                ? <Loader />\n                : <div>\n                    {user.login &&\n                        <h4 onClick={() => { router.push(\"/user/\" + user.id) }}>Author: {user.login}</h4>\n                    }\n                    <h2>{post.title}</h2>\n                    <h3>{post.content}</h3>\n                </div>\n            }\n            {isAuth &&\n                <div>\n                    <MyButton onClick={() => { likeAction(postLikes, 1) }}>{likeStatus(postLikes)}</MyButton>\n                    <MyButton onClick={() => { likeAction(postLikes, -1) }}>{dislikeStatus(postLikes)}</MyButton>\n                </div>\n\n            }\n            {/* {console.log(post)} */}\n            {isCommLoading\n                ? <Loader />\n                : <CommentList\n                    comments={comments}\n                    setModal={setModal}\n                    setCommentId={setCommentId}\n                    setbuttonText={setCommentFormText}\n                    fetchFunc={fetchCreateComments}\n                    likes={returnPostLikes(likes)}\n                    fetchLikes={fetchPostLikes}\n                    fetchComments={fetchComments}\n                />\n            }\n            {/* {console.log(commentLikes)} */}\n        </div>\n    )\n}\n\nexport default PostIdPage"],"mappings":"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"},"metadata":{},"sourceType":"module"}