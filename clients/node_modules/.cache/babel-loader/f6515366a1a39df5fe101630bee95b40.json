{"ast":null,"code":"import { deleteComment, PatchComment } from \"../api/CommentsApi\";\nimport { createCommentsOnPost, createlike, deletelike, getCommentsOnPost, getLikesFromPost, getPost, PostByid, PostDelete } from \"../api/PostApi\";\nexport const getPosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await getPost;\n    return dispatch({\n      type: 'getposts',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const GetLikes = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await getLikesFromPost(id);\n    return dispatch({\n      type: 'getlikes',\n      payload: data.result\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostById = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await PostByid(id);\n    return dispatch({\n      type: \"getpostbyid\",\n      payload: data.result\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getComments = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await getCommentsOnPost(id);\n    return dispatch({\n      type: 'getCommentsOnPost',\n      payload: data.result\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createComment = (id, comment) => async dispatch => {\n  try {\n    const {\n      data\n    } = await createCommentsOnPost(id, comment);\n    console.log(data);\n    const Data = await getCommentsOnPost(id);\n    let comments; //vse kommentu\n\n    if (data.result.affectedRows > 0) {\n      comments = Data.data.result;\n      let comment = comments[comments.length - 1];\n      console.log(comment);\n      return dispatch({\n        type: 'createcommentforpost',\n        payload: comment\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await createlike(id);\n    const Data = await getLikesFromPost(id);\n    let likes;\n\n    if (data.result.affectedRows > 0) {\n      likes = Data.data.result;\n      let like = likes[likes.length - 1];\n      dispatch({\n        type: \"likepost\",\n        payload: like\n      });\n    }\n  } catch (error) {\n    alert('You already paste like');\n  }\n};\nexport const DeletComment = (id, post_id) => async dispatch => {\n  try {\n    const {\n      data\n    } = await deleteComment(id);\n\n    if (data.result.affectedRows > 0) {\n      const Data = await getCommentsOnPost(post_id);\n      return dispatch({\n        type: 'deletecomment',\n        payload: Data.data.result\n      });\n    }\n  } catch (error) {\n    alert(\"It`s not your comment\");\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await PostDelete(id);\n\n    if (data.message.affectedRows > 0) {\n      const Data = await getPost;\n      return dispatch({\n        type: 'deletepost'\n      });\n    }\n  } catch (error) {}\n};\nexport const UpdateComment = (id, post_id, content) => async dispatch => {\n  try {\n    const {\n      data\n    } = await PatchComment(id, content);\n\n    if (data.result.affectedRows > 0) {\n      const Data = await getCommentsOnPost(post_id);\n      return dispatch({\n        type: 'updatecomment',\n        payload: Data.data.result\n      });\n    }\n  } catch (error) {\n    alert(\"It`s not your comment\");\n  }\n};\nexport const deleteLikeFromPost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await deletelike(id);\n    const Data = await getLikesFromPost(id);\n\n    if (data.result.affectedRows > 0) {\n      let likes = Data.data.result;\n      let like = [];\n\n      for (let index = 0; index < likes.length; index++) {\n        if (data.user === likes[index].user_id) {\n          index = index + 1;\n        }\n\n        like[index] = likes[index];\n      }\n\n      dispatch({\n        type: 'deletelike',\n        payload: like\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["deleteComment","PatchComment","createCommentsOnPost","createlike","deletelike","getCommentsOnPost","getLikesFromPost","getPost","PostByid","PostDelete","getPosts","dispatch","data","type","payload","error","console","log","GetLikes","id","result","getPostById","getComments","createComment","comment","Data","comments","affectedRows","length","likePost","likes","like","alert","DeletComment","post_id","deletePost","message","UpdateComment","content","deleteLikeFromPost","index","user","user_id"],"sources":["/home/firemort/Рабочий стол/Fullstack/back-front/idashchenk/clients/src/action/PostAction.js"],"sourcesContent":["import { deleteComment, PatchComment } from \"../api/CommentsApi\";\nimport { createCommentsOnPost, createlike, deletelike, getCommentsOnPost, getLikesFromPost, getPost, PostByid, PostDelete } from \"../api/PostApi\"\n\n\nexport const getPosts = () => async(dispatch) => {\n    try {\n        const {data}= await getPost\n        return dispatch({type:'getposts', payload:data})\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const GetLikes = (id) => async(dispatch) => {\n    try {\n        const {data} = await getLikesFromPost(id)\n        return dispatch({type:'getlikes', payload:data.result})\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const getPostById = (id) => async(dispatch) => {\n    try {\n        const {data} = await PostByid(id)\n        return dispatch({type:\"getpostbyid\", payload:data.result})\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const getComments = (id) => async(dispatch) => {\n    try {\n        const {data} = await getCommentsOnPost(id)\n        return dispatch({type:'getCommentsOnPost', payload:data.result})\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const createComment = (id, comment) => async(dispatch) => {\n    try {\n        const {data} = await createCommentsOnPost(id,comment)\n        console.log(data);\n        const Data = await getCommentsOnPost(id)\n        let comments //vse kommentu\n        if (data.result.affectedRows > 0) {\n            comments = Data.data.result\n            let comment = comments[comments.length-1]\n            console.log(comment);\n            return dispatch({type:'createcommentforpost', payload:comment})\n        }\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const likePost = (id) => async(dispatch) => {\n    try {\n        const {data} = await createlike(id)\n        const Data = await getLikesFromPost(id)\n        let likes\n        if (data.result.affectedRows > 0) {\n            likes = Data.data.result\n            let like = likes[likes.length-1]\n            dispatch({type:\"likepost\", payload:like})\n        }\n    } catch (error) {\n        alert('You already paste like')\n    }\n}\n\nexport const DeletComment = (id,post_id) => async(dispatch) => {\n    try {\n        const {data} = await deleteComment(id)\n        if (data.result.affectedRows > 0) {\n            const Data = await getCommentsOnPost(post_id)\n            return dispatch({type:'deletecomment',payload:Data.data.result})\n        }   \n    } catch (error) {\n        alert(\"It`s not your comment\")\n    }\n}\n\nexport const deletePost = (id) => async(dispatch) => {\n    try {\n        const {data} = await PostDelete(id) \n        if (data.message.affectedRows > 0) {\n            const Data = await getPost\n            return dispatch({type:'deletepost'})\n        }\n    } catch (error) {\n        \n    }\n}\n\nexport const UpdateComment = (id,post_id,content) => async(dispatch) => {\n    try {\n        const {data} = await PatchComment(id,content)\n        if (data.result.affectedRows > 0) {\n            const Data = await getCommentsOnPost(post_id)\n            return dispatch({type:'updatecomment', payload:Data.data.result})\n        }\n    } catch (error) {\n        alert(\"It`s not your comment\")\n    }\n}\n\nexport const deleteLikeFromPost = (id) => async(dispatch) => {\n    try {\n        const {data} = await deletelike(id)\n        const Data = await getLikesFromPost(id)\n        if (data.result.affectedRows>0) {\n            let likes = Data.data.result\n            let like = []\n            for (let index = 0; index < likes.length; index++) {\n                if (data.user === likes[index].user_id) {\n                    index = index+1\n                }\n                like[index] = likes[index]\n            }\n            dispatch({type:'deletelike', payload:like})\n        }\n    } catch (error) {\n        console.log(error);\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}