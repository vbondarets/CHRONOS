{"ast":null,"code":"var _jsxFileName = \"/home/firemort/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Fullstack/back-front/idashchenk/clients/src/components/pages/PostComponents/GetComment.js\",\n    _s = $RefreshSig$();\n\nimport moment from \"moment\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getComments } from \"../../../action/PostAction\";\nimport style from '../../style/PostPage.module.css';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentsForPost = props => {\n  _s();\n\n  const {\n    post_id,\n    comments\n  } = props;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getComments(post_id));\n  }, [dispatch]);\n\n  if (comments === undefined) {\n    comments = [];\n  }\n\n  if (comments.length === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"No Comments yet\"\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: comments.map(cmnt => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.Comment,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.Commentlogin,\n          children: cmnt.login\n        }, cmnt.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.Commentcontent,\n          children: cmnt.content\n        }, cmnt.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.Commenttime,\n          children: moment(cmnt.time).fromNow()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, cmnt.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this))\n    }, void 0, false);\n  }\n};\n\n_s(CommentsForPost, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CommentsForPost;\nexport default CommentsForPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentsForPost\");","map":{"version":3,"names":["moment","React","useEffect","useDispatch","getComments","style","CommentsForPost","props","post_id","comments","dispatch","undefined","length","map","cmnt","Comment","Commentlogin","login","id","Commentcontent","content","Commenttime","time","fromNow"],"sources":["/home/firemort/Рабочий стол/Fullstack/back-front/idashchenk/clients/src/components/pages/PostComponents/GetComment.js"],"sourcesContent":["import moment from \"moment\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getComments } from \"../../../action/PostAction\";\n\nimport style from '../../style/PostPage.module.css'\n\nconst CommentsForPost = (props) => {\n    const {post_id,comments} = props\n    const dispatch = useDispatch()\n    useEffect ( () => {\n        dispatch(getComments(post_id))\n    }, [dispatch])\n    if (comments === undefined) {\n        comments = []\n    }\n    if (comments.length === 0) {\n        return (\n            <>No Comments yet</>\n        )\n    }\n    else {\n        return (\n            <>\n            {comments.map( (cmnt) => \n                <div key={cmnt.id} className={style.Comment}>\n                    <p className={style.Commentlogin} key={cmnt.id}>{cmnt.login}</p>\n                    <p className={style.Commentcontent} key={cmnt.id}>{cmnt.content}</p>\n                    <p className={style.Commenttime}>{moment(cmnt.time).fromNow()}</p>\n                </div>\n            )}\n            </>\n        )\n    }\n}\n\nexport default  CommentsForPost"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AAEA,OAAOC,KAAP,MAAkB,iCAAlB;;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;EAAA;;EAC/B,MAAM;IAACC,OAAD;IAASC;EAAT,IAAqBF,KAA3B;EACA,MAAMG,QAAQ,GAAGP,WAAW,EAA5B;EACAD,SAAS,CAAG,MAAM;IACdQ,QAAQ,CAACN,WAAW,CAACI,OAAD,CAAZ,CAAR;EACH,CAFQ,EAEN,CAACE,QAAD,CAFM,CAAT;;EAGA,IAAID,QAAQ,KAAKE,SAAjB,EAA4B;IACxBF,QAAQ,GAAG,EAAX;EACH;;EACD,IAAIA,QAAQ,CAACG,MAAT,KAAoB,CAAxB,EAA2B;IACvB,oBACI;MAAA;IAAA,iBADJ;EAGH,CAJD,MAKK;IACD,oBACI;MAAA,UACCH,QAAQ,CAACI,GAAT,CAAeC,IAAD,iBACX;QAAmB,SAAS,EAAET,KAAK,CAACU,OAApC;QAAA,wBACI;UAAG,SAAS,EAAEV,KAAK,CAACW,YAApB;UAAA,UAAiDF,IAAI,CAACG;QAAtD,GAAuCH,IAAI,CAACI,EAA5C;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAG,SAAS,EAAEb,KAAK,CAACc,cAApB;UAAA,UAAmDL,IAAI,CAACM;QAAxD,GAAyCN,IAAI,CAACI,EAA9C;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI;UAAG,SAAS,EAAEb,KAAK,CAACgB,WAApB;UAAA,UAAkCrB,MAAM,CAACc,IAAI,CAACQ,IAAN,CAAN,CAAkBC,OAAlB;QAAlC;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA,GAAUT,IAAI,CAACI,EAAf;QAAA;QAAA;QAAA;MAAA,QADH;IADD,iBADJ;EAWH;AACJ,CA3BD;;GAAMZ,e;UAEeH,W;;;KAFfG,e;AA6BN,eAAgBA,eAAhB"},"metadata":{},"sourceType":"module"}