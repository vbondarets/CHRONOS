{"ast":null,"code":"var _jsxFileName = \"/home/firemort/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Fullstack/back-front/idashchenk/clients/src/components/pages/PostComponents/GetComment.js\",\n    _s = $RefreshSig$();\n\nimport jwt_decode from \"jwt-decode\";\nimport moment from \"moment\";\nimport React, { createElement, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeletComment, getComments, UpdateComment } from \"../../../action/PostAction\";\nimport style from '../../style/PostPage.module.css';\nimport ReplyComment from \"./ReplyOnComment\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentsForPost = props => {\n  _s();\n\n  const history = useHistory();\n  let [comment, setComment] = useState('');\n  let [index, setIndex] = useState(0);\n  const auth = useSelector(state => state.Auth);\n  const token = auth.token;\n  const decode = jwt_decode(token);\n  const user_id = decode.id;\n  const role = decode.role;\n  const {\n    post_id,\n    comments\n  } = props;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getComments(post_id));\n  }, [dispatch]);\n  console.log(comments);\n\n  if (comments === undefined) {\n    comments = [];\n  }\n\n  if (comments.length === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"No Comments yet\"\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: role === 'admin' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: comments.map(cmnt => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.Comment,\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            className: style.loginHome,\n            onClick: () => {\n              history.push(`/user/${cmnt.user_id}`);\n            },\n            children: cmnt.login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.Commentcontent,\n            children: cmnt.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), user_id === cmnt.user_id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                if (index === 0) {\n                  setIndex(1);\n                } else if (index === 1) {\n                  setIndex(0);\n                  dispatch(UpdateComment(cmnt.id, post_id, comment));\n                }\n\n                console.log(index);\n              },\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), index === 1 ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"How u wanna edit comment\",\n              value: comment,\n              onChange: e => setComment(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 44\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              dispatch(DeletComment(cmnt.id, post_id));\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.Commenttime,\n            children: moment(cmnt.time).fromNow()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)]\n        }, cmnt.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this))\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: comments.map(cmnt => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.Comment,\n          children: cmnt.cmnt_id === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              className: style.loginHome,\n              onClick: () => {\n                history.push(`/user/${cmnt.user_id}`);\n              },\n              children: cmnt.login\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: style.Commentcontent,\n              children: cmnt.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), user_id === cmnt.user_id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  if (index === 0) {\n                    setIndex(1);\n                  } else if (index === 1) {\n                    setIndex(0);\n                    dispatch(UpdateComment(cmnt.id, post_id, comment));\n                  }\n\n                  console.log(index);\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this), index === 1 ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"How u wanna edit comment\",\n                value: comment,\n                onChange: e => setComment(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 48\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  dispatch(DeletComment(cmnt.id, post_id));\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: style.Commenttime,\n              children: moment(cmnt.time).fromNow()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n        }, cmnt.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this))\n      }, void 0, false)\n    }, void 0, false);\n  }\n};\n\n_s(CommentsForPost, \"kTmTRR2hTjU7cV5WeM2fLcYYQAc=\", false, function () {\n  return [useHistory, useSelector, useDispatch];\n});\n\n_c = CommentsForPost;\nexport default CommentsForPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentsForPost\");","map":{"version":3,"names":["jwt_decode","moment","React","createElement","useEffect","useState","useDispatch","useSelector","useHistory","DeletComment","getComments","UpdateComment","style","ReplyComment","CommentsForPost","props","history","comment","setComment","index","setIndex","auth","state","Auth","token","decode","user_id","id","role","post_id","comments","dispatch","console","log","undefined","length","map","cmnt","Comment","loginHome","push","login","Commentcontent","content","e","target","value","Commenttime","time","fromNow","cmnt_id"],"sources":["/home/firemort/Рабочий стол/Fullstack/back-front/idashchenk/clients/src/components/pages/PostComponents/GetComment.js"],"sourcesContent":["import jwt_decode from \"jwt-decode\";\nimport moment from \"moment\";\nimport React, { createElement, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeletComment, getComments, UpdateComment } from \"../../../action/PostAction\";\n\nimport style from '../../style/PostPage.module.css'\nimport ReplyComment from \"./ReplyOnComment\";\n\nconst CommentsForPost = (props) => {\n    const history = useHistory()\n    let [comment, setComment] = useState('')\n    let [index, setIndex] = useState(0)\n    \n    const auth = useSelector(state=>state.Auth)\n    const token = auth.token\n    const decode = jwt_decode(token)\n    const user_id = decode.id\n    const role = decode.role\n    const {post_id,comments} = props\n\n    const dispatch = useDispatch()\n    useEffect ( () => {\n        dispatch(getComments(post_id))\n    }, [dispatch])\n    console.log(comments);\n    if (comments === undefined) {\n        comments = []\n    }\n    if (comments.length === 0) {\n        return (\n            <>No Comments yet</>\n        )\n    }\n    else {\n        return (\n            <>\n            {role === 'admin' ? \n                <>\n                    {comments.map( (cmnt) => \n                        <div key={cmnt.id} className={style.Comment}>\n                            <a className={style.loginHome} onClick = {() => {history.push(`/user/${cmnt.user_id}`)}}>{cmnt.login}</a>\n                            <p className={style.Commentcontent}>{cmnt.content}</p>\n                            {user_id === cmnt.user_id ?\n                            <>\n                            <button onClick= { () => {\n                                if (index === 0) {\n                                    setIndex(1)\n                                }\n                                else if (index === 1) {\n                                    setIndex(0)\n                                    dispatch(UpdateComment(cmnt.id,post_id, comment))\n                                }\n                                console.log(index);\n                            }}>Edit</button>\n                            {index === 1 ? <input type='text' placeholder=\"How u wanna edit comment\" value={comment} onChange={e=>setComment(e.target.value)}/> :<></>}\n                            </>\n                            :\n                            <></>\n                        }\n                            <button onClick={() => {\n                                    dispatch(DeletComment(cmnt.id,post_id))\n                                }}>Delete</button>\n                            <p className={style.Commenttime}>{moment(cmnt.time).fromNow()}</p>\n                            \n                        </div>\n                    )}\n                </>\n                :\n                <>\n                    {comments.map( (cmnt) => \n                    <div key={cmnt.id} className={style.Comment}>\n                        {cmnt.cmnt_id === 0 ? \n                        <>\n                            <a className={style.loginHome} onClick = {() => {history.push(`/user/${cmnt.user_id}`)}}>{cmnt.login}</a>\n                            <p className={style.Commentcontent}>{cmnt.content}</p>\n                            {user_id === cmnt.user_id ?\n                                <>\n                                <button onClick= { () => {\n                                    if (index === 0) {\n                                        setIndex(1)\n                                    }\n                                    else if (index === 1) {\n                                        setIndex(0)\n                                        dispatch(UpdateComment(cmnt.id,post_id, comment))\n                                    }\n                                    console.log(index);\n                                }}>Edit</button>\n                                {index === 1 ? <input type='text' placeholder=\"How u wanna edit comment\" value={comment} onChange={e=>setComment(e.target.value)}/> :<></>}\n                                <button onClick={() => {\n                                    dispatch(DeletComment(cmnt.id,post_id))\n                                }}>Delete</button>\n                                </>\n                                :\n                                <></>\n                            }\n                            <p className={style.Commenttime}>{moment(cmnt.time).fromNow()}</p>\n                        </> \n                        : \n                        <></>}\n                    </div>\n                    )}\n                </>\n            }\n            </>\n        )\n    }\n}\n\nexport default  CommentsForPost"],"mappings":"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"},"metadata":{},"sourceType":"module"}