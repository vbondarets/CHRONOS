{"ast":null,"code":"var _jsxFileName = \"/home/firemort/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Fullstack/CHRONOS/Chronos2/CHRONOS/clients/src/components/pages/CalendarComponents/CreateEventComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ChromePicker } from \"react-color\";\nimport { useDispatch } from \"react-redux\";\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\nimport TextField from '@mui/material/TextField';\nimport dayjs, { Dayjs } from 'dayjs';\nimport moment from \"moment\";\nimport { TimePicker } from \"@mui/x-date-pickers/TimePicker\";\nimport { CreateEvent } from \"../../../action/EventAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Create_Page = () => {\n  _s();\n\n  const [title, setTitle] = useState();\n  const [color, setColor] = useState();\n  const [description, setDescription] = useState();\n  const [type, setType] = useState();\n  const [time, setTime] = useState();\n  const [date, setDate] = useState();\n  console.log(date);\n  console.log(time);\n\n  const handleChangeComplete = (color, event) => {\n    setColor(color.hex);\n  };\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Enter title of event\",\n      name: \"title\",\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Enter description of event\",\n      name: \"description\",\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: type,\n      onChange: e => setType(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        disabled: true,\n        value: \"\",\n        children: \"Choose type of event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"arrangement\",\n        children: \"Arrangement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"task\",\n        children: \"Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"reminder\",\n        children: \"Reminder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChromePicker, {\n      color: color,\n      onChangeComplete: handleChangeComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n      dateAdapter: AdapterDayjs,\n      children: [/*#__PURE__*/_jsxDEV(DesktopDatePicker, {\n        label: \"Select date\",\n        inputFormat: \"YYYY-MM-DD\",\n        value: date,\n        onChange: setDate,\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TimePicker, {\n        label: \"Select time\",\n        ampm: false,\n        minutesStep: 5,\n        value: time,\n        onChange: setTime,\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        const exact_time = `${moment(date).format('YYYY-MM-DD')} ${moment(time).format('HH:mm')}:00`;\n        dispatch(CreateEvent(title, description, type, color));\n      },\n      children: \"Create Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Create_Page, \"KHDTVDaZ1FoR1002vj9tzD2TQ2c=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Create_Page;\nexport default Create_Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create_Page\");","map":{"version":3,"names":["React","useState","ChromePicker","useDispatch","LocalizationProvider","AdapterDayjs","DesktopDatePicker","TextField","dayjs","Dayjs","moment","TimePicker","CreateEvent","Create_Page","title","setTitle","color","setColor","description","setDescription","type","setType","time","setTime","date","setDate","console","log","handleChangeComplete","event","hex","dispatch","e","target","value","params","exact_time","format"],"sources":["/home/firemort/Рабочий стол/Fullstack/CHRONOS/Chronos2/CHRONOS/clients/src/components/pages/CalendarComponents/CreateEventComponent.js"],"sourcesContent":["import React, { useState } from \"react\"\nimport { ChromePicker } from \"react-color\"\nimport { useDispatch } from \"react-redux\"\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\nimport TextField from '@mui/material/TextField';\nimport dayjs, { Dayjs } from 'dayjs';\nimport moment from \"moment\";\nimport { TimePicker } from \"@mui/x-date-pickers/TimePicker\";\nimport { CreateEvent } from \"../../../action/EventAction\";\n\n\nconst Create_Page = () => {\n    const [title, setTitle] = useState()\n    const [color, setColor] = useState()\n    const [description, setDescription] = useState()\n    const [type, setType] = useState()\n    const [time, setTime] = useState()\n    const [date, setDate] = useState()\n    console.log(date);\n    console.log(time);\n    const handleChangeComplete = (color, event) => {\n        setColor(color.hex);\n    };\n\n    const dispatch = useDispatch()\n    return ( \n        <div>\n            <h1>Create Event</h1>\n            <input \n                placeholder=\"Enter title of event\" \n                name='title' type='text' value={title}\n                onChange = { e => setTitle(e.target.value)}    \n            >        \n            </input>\n            <input \n                placeholder=\"Enter description of event\" \n                name='description' type='text' value={title}\n                onChange = { e => setTitle(e.target.value)}    \n            >        \n            </input>\n            <select value = {type} onChange ={ e => setType(e.target.value)}>\n                <option disabled={true} value=''>Choose type of event</option>\n                <option value='arrangement'>Arrangement</option>\n                <option value='task'>Task</option>\n                <option value='reminder'>Reminder</option>\n            </select>\n            <ChromePicker\n                color = {color}\n                onChangeComplete={ handleChangeComplete }\n            />\n            <LocalizationProvider dateAdapter={AdapterDayjs}>\n                <DesktopDatePicker\n                    label=\"Select date\"\n                    inputFormat=\"YYYY-MM-DD\"\n                    value={date}\n                    onChange={setDate}\n                    renderInput={(params) => <TextField {...params} />}\n                />\n                <TimePicker\n                    label= 'Select time'\n                    ampm={false}\n                    minutesStep={5}\n                    value={time}\n                    onChange={setTime}\n                    renderInput={(params) => <TextField {...params} />}\n                />\n            </LocalizationProvider>\n            <button onClick={ () => \n                {const exact_time = `${moment(date).format('YYYY-MM-DD')} ${moment(time).format('HH:mm')}:00`\n                dispatch(CreateEvent(title, description, type, color, ))}\n            }>Create Event</button>\n        </div>\n    )\n}\n\nexport default Create_Page"],"mappings":"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"},"metadata":{},"sourceType":"module"}