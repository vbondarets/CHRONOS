{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization';\nconst nlNLPickers = {\n  // Calendar navigation\n  previousMonth: 'Vorige maand',\n  nextMonth: 'Volgende maand',\n  // View navigation\n  openPreviousView: 'open vorige view',\n  openNextView: 'open volgende view',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'jaarweergave is geopend, schakel over naar kalenderweergave' : 'kalenderweergave is geopend, switch naar jaarweergave',\n  // inputModeToggleButtonAriaLabel: (isKeyboardInputOpen: boolean, viewType: 'calendar' | 'clock') => isKeyboardInputOpen ? `text input view is open, go to ${viewType} view` : `${viewType} view is open, go to text input view`,\n  // DateRange placeholders\n  start: 'Start',\n  end: 'Einde',\n  // Action bar\n  cancelButtonLabel: 'Annuleren',\n  clearButtonLabel: 'Resetten',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Vandaag',\n  // Toolbar titles\n  // datePickerDefaultToolbarTitle: 'Select date',\n  // dateTimePickerDefaultToolbarTitle: 'Select date & time',\n  // timePickerDefaultToolbarTitle: 'Select time',\n  // dateRangePickerDefaultToolbarTitle: 'Select date range',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Selecteer ${view}. ${time === null ? 'Geen tijd geselecteerd' : `Geselecteerde tijd is ${adapter.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} uren`,\n  minutesClockNumberText: minutes => `${minutes} minuten`,\n  secondsClockNumberText: seconds => `${seconds} seconden`,\n  // Open picker labels\n  openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Kies datum, geselecteerde datum is ${utils.format(utils.date(rawValue), 'fullDate')}` : 'Kies datum',\n  openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Kies tijd, geselecteerde tijd is ${utils.format(utils.date(rawValue), 'fullTime')}` : 'Kies tijd',\n  // Table labels\n  timeTableLabel: 'kies tijd',\n  dateTableLabel: 'kies datum'\n};\nexport const nlNL = getPickersLocalization(nlNLPickers);","map":{"version":3,"names":["getPickersLocalization","nlNLPickers","previousMonth","nextMonth","openPreviousView","openNextView","calendarViewSwitchingButtonAriaLabel","view","start","end","cancelButtonLabel","clearButtonLabel","okButtonLabel","todayButtonLabel","clockLabelText","time","adapter","format","hoursClockNumberText","hours","minutesClockNumberText","minutes","secondsClockNumberText","seconds","openDatePickerDialogue","rawValue","utils","isValid","date","openTimePickerDialogue","timeTableLabel","dateTableLabel","nlNL"],"sources":["/Users/vbondarets/Desktop/CHRONOS/clients/node_modules/@mui/x-date-pickers/locales/nlNL.js"],"sourcesContent":["import { getPickersLocalization } from './utils/getPickersLocalization';\nconst nlNLPickers = {\n  // Calendar navigation\n  previousMonth: 'Vorige maand',\n  nextMonth: 'Volgende maand',\n  // View navigation\n  openPreviousView: 'open vorige view',\n  openNextView: 'open volgende view',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'jaarweergave is geopend, schakel over naar kalenderweergave' : 'kalenderweergave is geopend, switch naar jaarweergave',\n  // inputModeToggleButtonAriaLabel: (isKeyboardInputOpen: boolean, viewType: 'calendar' | 'clock') => isKeyboardInputOpen ? `text input view is open, go to ${viewType} view` : `${viewType} view is open, go to text input view`,\n  // DateRange placeholders\n  start: 'Start',\n  end: 'Einde',\n  // Action bar\n  cancelButtonLabel: 'Annuleren',\n  clearButtonLabel: 'Resetten',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Vandaag',\n  // Toolbar titles\n  // datePickerDefaultToolbarTitle: 'Select date',\n  // dateTimePickerDefaultToolbarTitle: 'Select date & time',\n  // timePickerDefaultToolbarTitle: 'Select time',\n  // dateRangePickerDefaultToolbarTitle: 'Select date range',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Selecteer ${view}. ${time === null ? 'Geen tijd geselecteerd' : `Geselecteerde tijd is ${adapter.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} uren`,\n  minutesClockNumberText: minutes => `${minutes} minuten`,\n  secondsClockNumberText: seconds => `${seconds} seconden`,\n  // Open picker labels\n  openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Kies datum, geselecteerde datum is ${utils.format(utils.date(rawValue), 'fullDate')}` : 'Kies datum',\n  openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Kies tijd, geselecteerde tijd is ${utils.format(utils.date(rawValue), 'fullTime')}` : 'Kies tijd',\n  // Table labels\n  timeTableLabel: 'kies tijd',\n  dateTableLabel: 'kies datum'\n};\nexport const nlNL = getPickersLocalization(nlNLPickers);"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,gCAAvC;AACA,MAAMC,WAAW,GAAG;EAClB;EACAC,aAAa,EAAE,cAFG;EAGlBC,SAAS,EAAE,gBAHO;EAIlB;EACAC,gBAAgB,EAAE,kBALA;EAMlBC,YAAY,EAAE,oBANI;EAOlBC,oCAAoC,EAAEC,IAAI,IAAIA,IAAI,KAAK,MAAT,GAAkB,6DAAlB,GAAkF,uDAP9G;EAQlB;EACA;EACAC,KAAK,EAAE,OAVW;EAWlBC,GAAG,EAAE,OAXa;EAYlB;EACAC,iBAAiB,EAAE,WAbD;EAclBC,gBAAgB,EAAE,UAdA;EAelBC,aAAa,EAAE,IAfG;EAgBlBC,gBAAgB,EAAE,SAhBA;EAiBlB;EACA;EACA;EACA;EACA;EACA;EACAC,cAAc,EAAE,CAACP,IAAD,EAAOQ,IAAP,EAAaC,OAAb,KAA0B,aAAYT,IAAK,KAAIQ,IAAI,KAAK,IAAT,GAAgB,wBAAhB,GAA4C,yBAAwBC,OAAO,CAACC,MAAR,CAAeF,IAAf,EAAqB,UAArB,CAAiC,EAAE,EAvBpJ;EAwBlBG,oBAAoB,EAAEC,KAAK,IAAK,GAAEA,KAAM,OAxBtB;EAyBlBC,sBAAsB,EAAEC,OAAO,IAAK,GAAEA,OAAQ,UAzB5B;EA0BlBC,sBAAsB,EAAEC,OAAO,IAAK,GAAEA,OAAQ,WA1B5B;EA2BlB;EACAC,sBAAsB,EAAE,CAACC,QAAD,EAAWC,KAAX,KAAqBD,QAAQ,IAAIC,KAAK,CAACC,OAAN,CAAcD,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAd,CAAZ,GAAmD,sCAAqCC,KAAK,CAACT,MAAN,CAAaS,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAb,EAAmC,UAAnC,CAA+C,EAAvI,GAA2I,YA5BtK;EA6BlBI,sBAAsB,EAAE,CAACJ,QAAD,EAAWC,KAAX,KAAqBD,QAAQ,IAAIC,KAAK,CAACC,OAAN,CAAcD,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAd,CAAZ,GAAmD,oCAAmCC,KAAK,CAACT,MAAN,CAAaS,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAb,EAAmC,UAAnC,CAA+C,EAArI,GAAyI,WA7BpK;EA8BlB;EACAK,cAAc,EAAE,WA/BE;EAgClBC,cAAc,EAAE;AAhCE,CAApB;AAkCA,OAAO,MAAMC,IAAI,GAAGhC,sBAAsB,CAACC,WAAD,CAAnC"},"metadata":{},"sourceType":"module"}