{"ast":null,"code":"import { createevent, getEventId, getEvents, getLatestEvents } from \"../api/EventApi\";\nexport const getAllEventByCalendar = calendar_id => async dispatch => {\n  try {\n    const {\n      data\n    } = await getEvents(calendar_id);\n    console.log(data);\n    return dispatch({\n      type: 'getEvets',\n      payload: data.result\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getEventById = event_id => async dispatch => {\n  try {\n    const {\n      data\n    } = await getEventId(event_id);\n    console.log(data);\n    return dispatch({\n      type: 'getEventById',\n      payload: data.result\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getNewestEventsByUser_id = user_id => async dispatch => {\n  try {\n    const {\n      data\n    } = await getLatestEvents(user_id);\n    return dispatch({\n      type: 'getLatestEvents',\n      payload: data.result\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const CreateEvent = (title, description, type, color, start_at, end_at, calendar_id) => async dispatch => {\n  try {\n    const {\n      data\n    } = await createevent(title, description, type, color, start_at, end_at, calendar_id);\n\n    if (data.result.affectedRows > 0) {\n      const Data = await getEvents(calendar_id);\n      return dispatch({\n        type: 'createEvent',\n        payload: Data.data.result\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const SortByType = (calendar_id, category) => async dispatch => {\n  try {\n    const {\n      data\n    } = await getEvents(calendar_id);\n    console.log(calendar_id);\n    console.log(category);\n    const sorted = [];\n    const events = data.result;\n\n    if (category === 'all') {\n      return dispatch({\n        type: 'sortbyType',\n        payload: events\n      });\n    } else {\n      events.map((ev, indx) => {\n        if (ev.type === category) {\n          sorted.push(events[indx]);\n        }\n      });\n      console.log(sorted);\n      return dispatch({\n        type: 'sortbyType',\n        payload: sorted\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const ShareEvent = (event_id, user_id) => async dispatch => {\n  try {} catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["createevent","getEventId","getEvents","getLatestEvents","getAllEventByCalendar","calendar_id","dispatch","data","console","log","type","payload","result","error","getEventById","event_id","getNewestEventsByUser_id","user_id","CreateEvent","title","description","color","start_at","end_at","affectedRows","Data","SortByType","category","sorted","events","map","ev","indx","push","ShareEvent"],"sources":["/home/firemort/Рабочий стол/Fullstack/CHRONOS/Chronos2/CHRONOS/clients/src/action/EventAction.js"],"sourcesContent":["import { createevent, getEventId, getEvents, getLatestEvents } from \"../api/EventApi\";\n\nexport const getAllEventByCalendar = (calendar_id) => async(dispatch) => {\n    try {\n        const {data} = await getEvents(calendar_id)\n        console.log(data);\n        return dispatch({type:'getEvets', payload:data.result})\n    } catch (error) {\n        console.log(error);\n    }\n}\nexport const getEventById = (event_id) => async(dispatch) => {\n    try {\n       const {data} = await getEventId(event_id)\n       console.log(data);\n       return dispatch({type:'getEventById', payload: data.result}) \n    } catch (error) {\n        console.log(error);\n    }\n}\nexport const getNewestEventsByUser_id = (user_id) => async(dispatch)=> {\n    try {\n        const {data} = await getLatestEvents(user_id)\n        return dispatch({type:'getLatestEvents', payload:data.result})\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const CreateEvent = (title, description, type, color, start_at, end_at, calendar_id) => async(dispatch) => {\n    try {\n        const {data} = await createevent(title, description, type, color, start_at, end_at, calendar_id)\n        if (data.result.affectedRows > 0) {\n            const Data = await getEvents(calendar_id)\n            return dispatch({type:'createEvent', payload: Data.data.result})\n        }\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const SortByType = (calendar_id, category) => async(dispatch) => {\n    try {\n        const {data} = await getEvents(calendar_id)\n        console.log(calendar_id);\n        console.log(category);\n        const sorted = []\n        const events = data.result\n        if (category === 'all') {\n            return dispatch({type:'sortbyType', payload:events})    \n        }\n        else {\n            events.map ((ev, indx) => {\n                if (ev.type === category) {\n                    sorted.push(events[indx])\n                }\n            })\n            console.log(sorted);\n            return dispatch({type:'sortbyType', payload:sorted})\n        }\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const ShareEvent = (event_id, user_id) => async(dispatch) => {\n    try {\n        \n    } catch (error) {\n        console.log(error);\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}