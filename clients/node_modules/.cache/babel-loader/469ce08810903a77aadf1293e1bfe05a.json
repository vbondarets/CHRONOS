{"ast":null,"code":"var _jsxFileName = \"/home/firemort/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Fullstack/back-front/idashchenk/clients/src/components/pages/PostComponents/GetComment.js\",\n    _s = $RefreshSig$();\n\nimport jwt_decode from \"jwt-decode\";\nimport moment from \"moment\";\nimport React, { createElement, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeletComment, getComments, UpdateComment } from \"../../../action/PostAction\";\nimport style from '../../style/PostPage.module.css';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentsForPost = props => {\n  _s();\n\n  const history = useHistory();\n  let [comment, setComment] = useState('');\n  let [index, setIndex] = useState(0);\n  const auth = useSelector(state => state.Auth);\n  const token = auth.token;\n  const decode = jwt_decode(token);\n  const user_id = decode.id;\n  const {\n    post_id,\n    comments\n  } = props;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getComments(post_id));\n  }, [dispatch]);\n  console.log(comments);\n\n  if (comments === undefined) {\n    comments = [];\n  }\n\n  if (comments.length === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"No Comments yet\"\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: comments.map(cmnt => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.Comment,\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: style.loginHome,\n          onClick: () => {\n            history.push(`/user/${cmnt.user_id}`);\n          },\n          children: cmnt.login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.Commentcontent,\n          children: cmnt.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), user_id === cmnt.user_id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (index === 0) {\n                setIndex(1);\n              } else if (index === 1) {\n                setIndex(0);\n                dispatch(UpdateComment(cmnt.id, post_id, comment));\n              }\n\n              console.log(index);\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), index === 1 ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"How u wanna edit comment\",\n            value: comment,\n            onChange: e => setComment(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 40\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              dispatch(DeletComment(cmnt.id, post_id));\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.Commenttime,\n          children: moment(cmnt.time).fromNow()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, cmnt.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this))\n    }, void 0, false);\n  }\n};\n\n_s(CommentsForPost, \"kTmTRR2hTjU7cV5WeM2fLcYYQAc=\", false, function () {\n  return [useHistory, useSelector, useDispatch];\n});\n\n_c = CommentsForPost;\nexport default CommentsForPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentsForPost\");","map":{"version":3,"names":["jwt_decode","moment","React","createElement","useEffect","useState","useDispatch","useSelector","useHistory","DeletComment","getComments","UpdateComment","style","CommentsForPost","props","history","comment","setComment","index","setIndex","auth","state","Auth","token","decode","user_id","id","post_id","comments","dispatch","console","log","undefined","length","map","cmnt","Comment","loginHome","push","login","Commentcontent","content","e","target","value","Commenttime","time","fromNow"],"sources":["/home/firemort/Рабочий стол/Fullstack/back-front/idashchenk/clients/src/components/pages/PostComponents/GetComment.js"],"sourcesContent":["import jwt_decode from \"jwt-decode\";\nimport moment from \"moment\";\nimport React, { createElement, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeletComment, getComments, UpdateComment } from \"../../../action/PostAction\";\n\nimport style from '../../style/PostPage.module.css'\n\nconst CommentsForPost = (props) => {\n    const history = useHistory()\n    let [comment, setComment] = useState('')\n    let [index, setIndex] = useState(0)\n    const auth = useSelector(state=>state.Auth)\n    const token = auth.token\n    const decode = jwt_decode(token)\n    const user_id = decode.id\n    const {post_id,comments} = props\n    const dispatch = useDispatch()\n    useEffect ( () => {\n        dispatch(getComments(post_id))\n    }, [dispatch])\n    console.log(comments);\n    if (comments === undefined) {\n        comments = []\n    }\n    if (comments.length === 0) {\n        return (\n            <>No Comments yet</>\n        )\n    }\n    else {\n        return (\n            <>\n            {comments.map( (cmnt) => \n                <div key={cmnt.id} className={style.Comment}>\n                    <a className={style.loginHome} onClick = {() => {history.push(`/user/${cmnt.user_id}`)}}>{cmnt.login}</a>\n                    <p className={style.Commentcontent}>{cmnt.content}</p>\n                    {user_id === cmnt.user_id ?\n                        <>\n                        <button onClick= { () => {\n                            if (index === 0) {\n                                setIndex(1)\n                            }\n                            else if (index === 1) {\n                                setIndex(0)\n                                dispatch(UpdateComment(cmnt.id,post_id, comment))\n                            }\n                            console.log(index);\n                        }}>Edit</button>\n                        {index === 1 ? <input type='text' placeholder=\"How u wanna edit comment\" value={comment} onChange={e=>setComment(e.target.value)}/> :<></>}\n                        <button onClick={() => {\n                            dispatch(DeletComment(cmnt.id,post_id))\n                        }}>Delete</button></>\n                        :\n                        <></>\n                    }\n                    <p className={style.Commenttime}>{moment(cmnt.time).fromNow()}</p>\n                </div>\n                \n            )}\n            </>\n        )\n    }\n}\n\nexport default  CommentsForPost"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,aAApC,QAAyD,4BAAzD;AAEA,OAAOC,KAAP,MAAkB,iCAAlB;;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;EAAA;;EAC/B,MAAMC,OAAO,GAAGP,UAAU,EAA1B;EACA,IAAI,CAACQ,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAApC;EACA,IAAI,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAMe,IAAI,GAAGb,WAAW,CAACc,KAAK,IAAEA,KAAK,CAACC,IAAd,CAAxB;EACA,MAAMC,KAAK,GAAGH,IAAI,CAACG,KAAnB;EACA,MAAMC,MAAM,GAAGxB,UAAU,CAACuB,KAAD,CAAzB;EACA,MAAME,OAAO,GAAGD,MAAM,CAACE,EAAvB;EACA,MAAM;IAACC,OAAD;IAASC;EAAT,IAAqBd,KAA3B;EACA,MAAMe,QAAQ,GAAGvB,WAAW,EAA5B;EACAF,SAAS,CAAG,MAAM;IACdyB,QAAQ,CAACnB,WAAW,CAACiB,OAAD,CAAZ,CAAR;EACH,CAFQ,EAEN,CAACE,QAAD,CAFM,CAAT;EAGAC,OAAO,CAACC,GAAR,CAAYH,QAAZ;;EACA,IAAIA,QAAQ,KAAKI,SAAjB,EAA4B;IACxBJ,QAAQ,GAAG,EAAX;EACH;;EACD,IAAIA,QAAQ,CAACK,MAAT,KAAoB,CAAxB,EAA2B;IACvB,oBACI;MAAA;IAAA,iBADJ;EAGH,CAJD,MAKK;IACD,oBACI;MAAA,UACCL,QAAQ,CAACM,GAAT,CAAeC,IAAD,iBACX;QAAmB,SAAS,EAAEvB,KAAK,CAACwB,OAApC;QAAA,wBACI;UAAG,SAAS,EAAExB,KAAK,CAACyB,SAApB;UAA+B,OAAO,EAAI,MAAM;YAACtB,OAAO,CAACuB,IAAR,CAAc,SAAQH,IAAI,CAACV,OAAQ,EAAnC;UAAsC,CAAvF;UAAA,UAA0FU,IAAI,CAACI;QAA/F;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAG,SAAS,EAAE3B,KAAK,CAAC4B,cAApB;UAAA,UAAqCL,IAAI,CAACM;QAA1C;UAAA;UAAA;UAAA;QAAA,QAFJ,EAGKhB,OAAO,KAAKU,IAAI,CAACV,OAAjB,gBACG;UAAA,wBACA;YAAQ,OAAO,EAAI,MAAM;cACrB,IAAIP,KAAK,KAAK,CAAd,EAAiB;gBACbC,QAAQ,CAAC,CAAD,CAAR;cACH,CAFD,MAGK,IAAID,KAAK,KAAK,CAAd,EAAiB;gBAClBC,QAAQ,CAAC,CAAD,CAAR;gBACAU,QAAQ,CAAClB,aAAa,CAACwB,IAAI,CAACT,EAAN,EAASC,OAAT,EAAkBX,OAAlB,CAAd,CAAR;cACH;;cACDc,OAAO,CAACC,GAAR,CAAYb,KAAZ;YACH,CATD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADA,EAWCA,KAAK,KAAK,CAAV,gBAAc;YAAO,IAAI,EAAC,MAAZ;YAAmB,WAAW,EAAC,0BAA/B;YAA0D,KAAK,EAAEF,OAAjE;YAA0E,QAAQ,EAAE0B,CAAC,IAAEzB,UAAU,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV;UAAjG;YAAA;YAAA;YAAA;UAAA,QAAd,gBAAoI,qCAXrI,eAYA;YAAQ,OAAO,EAAE,MAAM;cACnBf,QAAQ,CAACpB,YAAY,CAAC0B,IAAI,CAACT,EAAN,EAASC,OAAT,CAAb,CAAR;YACH,CAFD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAZA;QAAA,gBADH,gBAiBG,qCApBR,eAsBI;UAAG,SAAS,EAAEf,KAAK,CAACiC,WAApB;UAAA,UAAkC5C,MAAM,CAACkC,IAAI,CAACW,IAAN,CAAN,CAAkBC,OAAlB;QAAlC;UAAA;UAAA;UAAA;QAAA,QAtBJ;MAAA,GAAUZ,IAAI,CAACT,EAAf;QAAA;QAAA;QAAA;MAAA,QADH;IADD,iBADJ;EA+BH;AACJ,CAvDD;;GAAMb,e;UACcL,U,EAGHD,W,EAKID,W;;;KATfO,e;AAyDN,eAAgBA,eAAhB"},"metadata":{},"sourceType":"module"}