{"ast":null,"code":"var _jsxFileName = \"/home/firemort/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Fullstack/back-front/idashchenk/clients/src/components/pages/AllUsers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { deleteUser, getAllUsers } from \"../../action/UserAction\";\nimport jwt_decode from 'jwt-decode';\nimport Pagination from \"./Pagination/Pagination\";\nimport style from '../style/AllUsers.module.css';\nimport { Button } from \"@mui/material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AllUsers = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const usersSelector = useSelector(store => store.User);\n  const auth = useSelector(state => state.Auth);\n  let Users, role;\n  let [currentPage, setCurrentPage] = useState(1);\n  let [postPerPage] = useState(5);\n  const indexOfLastPost = currentPage * postPerPage;\n  const indexOfFirstPost = indexOfLastPost - postPerPage;\n  const token = auth.token;\n  const decode = jwt_decode(token);\n  role = decode.role;\n\n  const pagination = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  useEffect(() => {\n    dispatch(getAllUsers());\n  }, [dispatch]);\n  Users = usersSelector.allUsers;\n\n  if (Users === undefined) {\n    Users = [];\n  } else {\n    const allUsers = Users.slice(indexOfFirstPost, indexOfLastPost);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: role === 'admin' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.allUsersDiv,\n          children: allUsers.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.UserDiv,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                history.push(`/user/${user.id}`);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:3001/avatar/${user.photo}`,\n                alt: \"avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 37\n              }, this)\n            }, user.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Login: \", user.login]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Email: \", user.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Full name: \", user.full_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => dispatch(deleteUser(user.id)),\n              variant: \"outlined\",\n              endIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 116\n              }, this),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          paginate: pagination,\n          postPerPage: postPerPage,\n          totalPost: Users.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.allUsersDiv,\n          children: allUsers.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.UserDiv,\n            onClick: () => {\n              history.push(`/user/${user.id}`);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:3001/avatar/${user.photo}`,\n                alt: \"avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 37\n              }, this)\n            }, user.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Login: \", user.login]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Email: \", user.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Full name: \", user.full_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          paginate: pagination,\n          postPerPage: postPerPage,\n          totalPost: Users.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)\n    }, void 0, false);\n  }\n};\n\n_s(AllUsers, \"dd95PB49zOsuFxZhFUoz4DkfePA=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector];\n});\n\n_c = AllUsers;\nexport default AllUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllUsers\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","useHistory","deleteUser","getAllUsers","jwt_decode","Pagination","style","Button","DeleteIcon","AllUsers","dispatch","history","usersSelector","store","User","auth","state","Auth","Users","role","currentPage","setCurrentPage","postPerPage","indexOfLastPost","indexOfFirstPost","token","decode","pagination","pageNumber","allUsers","undefined","slice","allUsersDiv","map","user","UserDiv","push","id","photo","login","email","full_name","length"],"sources":["/home/firemort/Рабочий стол/Fullstack/back-front/idashchenk/clients/src/components/pages/AllUsers.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport { deleteUser, getAllUsers } from \"../../action/UserAction\"\nimport jwt_decode from 'jwt-decode'\nimport Pagination from \"./Pagination/Pagination\"\nimport style from '../style/AllUsers.module.css'\nimport { Button } from \"@mui/material\"\nimport DeleteIcon from '@mui/icons-material/Delete'\n\nconst AllUsers = () => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const usersSelector = useSelector(store => store.User)\n    const auth = useSelector(state => state.Auth)\n    let Users, role\n    let [currentPage, setCurrentPage] = useState(1)\n    let [postPerPage] = useState(5)\n\n    const indexOfLastPost = currentPage * postPerPage\n    const indexOfFirstPost = indexOfLastPost - postPerPage\n\n    const token = auth.token\n    const decode = jwt_decode(token)\n    role = decode.role\n    const pagination = (pageNumber) => {setCurrentPage(pageNumber)}\n    useEffect ( () => {\n        dispatch(getAllUsers())       \n    }, [dispatch])\n    Users = usersSelector.allUsers\n    if (Users === undefined) {\n        Users = []\n    }\n    else {\n        const allUsers = Users.slice(indexOfFirstPost, indexOfLastPost)\n        return (\n            <>\n                {role === 'admin' ?\n                    <> \n                    <div className={style.allUsersDiv}>\n                    \n                        {allUsers.map( (user) => \n                            <div key={user.id} className={style.UserDiv}>\n                                <div key={user.id} onClick = { () => {history.push(`/user/${user.id}`)}}>\n                                    <img src={`http://localhost:3001/avatar/${user.photo}`} alt='avatar'/>\n                                </div>\n                                <p>Login: {user.login}</p>\n                                <p>Email: {user.email}</p>\n                                <p>Full name: {user.full_name}</p>\n                                <Button onClick={ () => dispatch(deleteUser(user.id))} variant='outlined' endIcon={<DeleteIcon/>}>Delete</Button>\n                            </div>\n                        )}\n                    </div>\n                    <Pagination paginate={pagination} postPerPage={postPerPage} totalPost ={Users.length} />\n                    </>\n                :\n                <>\n                <div className={style.allUsersDiv}>\n                    {allUsers.map( (user) => \n                        <div key={user.id} className={style.UserDiv} onClick = { () => {history.push(`/user/${user.id}`)}}>\n                                <div key={user.id}>\n                                    <img src={`http://localhost:3001/avatar/${user.photo}`} alt='avatar'/>\n                                </div>\n                                <p>Login: {user.login}</p>\n                                <p>Email: {user.email}</p>\n                                <p>Full name: {user.full_name}</p>\n                        </div>\n                    )}\n                </div>\n                <Pagination paginate={pagination} postPerPage={postPerPage} totalPost ={Users.length} />\n                </>\n                }\n            </>\n        )\n    }\n}\n\nexport default AllUsers"],"mappings":"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"},"metadata":{},"sourceType":"module"}