{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useThemeProps } from '@mui/material/styles';\nimport { Clock } from '../internals/components/icons';\nimport { useLocaleText, useUtils } from '../internals/hooks/useUtils';\nimport { parsePickerInputValue } from '../internals/utils/date-utils';\nexport function useTimePickerDefaultizedProps(props, name) {\n  var _themeProps$ampm; // This is technically unsound if the type parameters appear in optional props.\n  // Optional props can be filled by `useThemeProps` with types that don't match the type parameters.\n\n\n  const themeProps = useThemeProps({\n    props,\n    name\n  });\n  const utils = useUtils();\n  const ampm = (_themeProps$ampm = themeProps.ampm) != null ? _themeProps$ampm : utils.is12HourCycleInCurrentLocale();\n  const localeText = useLocaleText();\n  const getOpenDialogAriaText = localeText.openTimePickerDialogue;\n  return _extends({\n    ampm,\n    openTo: 'hours',\n    views: ['hours', 'minutes'],\n    acceptRegex: ampm ? /[\\dapAP]/gi : /\\d/gi,\n    disableMaskedInput: false,\n    getOpenDialogAriaText,\n    inputFormat: ampm ? utils.formats.fullTime12h : utils.formats.fullTime24h\n  }, themeProps, {\n    components: _extends({\n      OpenPickerIcon: Clock\n    }, themeProps.components)\n  });\n}\nexport const timePickerValueManager = {\n  emptyValue: null,\n  parseInput: parsePickerInputValue,\n  getTodayValue: utils => utils.date(),\n  areValuesEqual: (utils, a, b) => utils.isEqual(a, b),\n  valueReducer: (utils, lastValidValue, newValue) => {\n    if (!lastValidValue || !utils.isValid(newValue)) {\n      return newValue;\n    }\n\n    return utils.mergeDateAndTime(lastValidValue, newValue);\n  }\n};","map":{"version":3,"names":["_extends","useThemeProps","Clock","useLocaleText","useUtils","parsePickerInputValue","useTimePickerDefaultizedProps","props","name","_themeProps$ampm","themeProps","utils","ampm","is12HourCycleInCurrentLocale","localeText","getOpenDialogAriaText","openTimePickerDialogue","openTo","views","acceptRegex","disableMaskedInput","inputFormat","formats","fullTime12h","fullTime24h","components","OpenPickerIcon","timePickerValueManager","emptyValue","parseInput","getTodayValue","date","areValuesEqual","a","b","isEqual","valueReducer","lastValidValue","newValue","isValid","mergeDateAndTime"],"sources":["/home/firemort/Рабочий стол/Fullstack/CHRONOS/Chronos2/CHRONOS/clients/node_modules/@mui/x-date-pickers/TimePicker/shared.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useThemeProps } from '@mui/material/styles';\nimport { Clock } from '../internals/components/icons';\nimport { useLocaleText, useUtils } from '../internals/hooks/useUtils';\nimport { parsePickerInputValue } from '../internals/utils/date-utils';\nexport function useTimePickerDefaultizedProps(props, name) {\n  var _themeProps$ampm;\n\n  // This is technically unsound if the type parameters appear in optional props.\n  // Optional props can be filled by `useThemeProps` with types that don't match the type parameters.\n  const themeProps = useThemeProps({\n    props,\n    name\n  });\n  const utils = useUtils();\n  const ampm = (_themeProps$ampm = themeProps.ampm) != null ? _themeProps$ampm : utils.is12HourCycleInCurrentLocale();\n  const localeText = useLocaleText();\n  const getOpenDialogAriaText = localeText.openTimePickerDialogue;\n  return _extends({\n    ampm,\n    openTo: 'hours',\n    views: ['hours', 'minutes'],\n    acceptRegex: ampm ? /[\\dapAP]/gi : /\\d/gi,\n    disableMaskedInput: false,\n    getOpenDialogAriaText,\n    inputFormat: ampm ? utils.formats.fullTime12h : utils.formats.fullTime24h\n  }, themeProps, {\n    components: _extends({\n      OpenPickerIcon: Clock\n    }, themeProps.components)\n  });\n}\nexport const timePickerValueManager = {\n  emptyValue: null,\n  parseInput: parsePickerInputValue,\n  getTodayValue: utils => utils.date(),\n  areValuesEqual: (utils, a, b) => utils.isEqual(a, b),\n  valueReducer: (utils, lastValidValue, newValue) => {\n    if (!lastValidValue || !utils.isValid(newValue)) {\n      return newValue;\n    }\n\n    return utils.mergeDateAndTime(lastValidValue, newValue);\n  }\n};"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,KAAT,QAAsB,+BAAtB;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,6BAAxC;AACA,SAASC,qBAAT,QAAsC,+BAAtC;AACA,OAAO,SAASC,6BAAT,CAAuCC,KAAvC,EAA8CC,IAA9C,EAAoD;EACzD,IAAIC,gBAAJ,CADyD,CAGzD;EACA;;;EACA,MAAMC,UAAU,GAAGT,aAAa,CAAC;IAC/BM,KAD+B;IAE/BC;EAF+B,CAAD,CAAhC;EAIA,MAAMG,KAAK,GAAGP,QAAQ,EAAtB;EACA,MAAMQ,IAAI,GAAG,CAACH,gBAAgB,GAAGC,UAAU,CAACE,IAA/B,KAAwC,IAAxC,GAA+CH,gBAA/C,GAAkEE,KAAK,CAACE,4BAAN,EAA/E;EACA,MAAMC,UAAU,GAAGX,aAAa,EAAhC;EACA,MAAMY,qBAAqB,GAAGD,UAAU,CAACE,sBAAzC;EACA,OAAOhB,QAAQ,CAAC;IACdY,IADc;IAEdK,MAAM,EAAE,OAFM;IAGdC,KAAK,EAAE,CAAC,OAAD,EAAU,SAAV,CAHO;IAIdC,WAAW,EAAEP,IAAI,GAAG,YAAH,GAAkB,MAJrB;IAKdQ,kBAAkB,EAAE,KALN;IAMdL,qBANc;IAOdM,WAAW,EAAET,IAAI,GAAGD,KAAK,CAACW,OAAN,CAAcC,WAAjB,GAA+BZ,KAAK,CAACW,OAAN,CAAcE;EAPhD,CAAD,EAQZd,UARY,EAQA;IACbe,UAAU,EAAEzB,QAAQ,CAAC;MACnB0B,cAAc,EAAExB;IADG,CAAD,EAEjBQ,UAAU,CAACe,UAFM;EADP,CARA,CAAf;AAaD;AACD,OAAO,MAAME,sBAAsB,GAAG;EACpCC,UAAU,EAAE,IADwB;EAEpCC,UAAU,EAAExB,qBAFwB;EAGpCyB,aAAa,EAAEnB,KAAK,IAAIA,KAAK,CAACoB,IAAN,EAHY;EAIpCC,cAAc,EAAE,CAACrB,KAAD,EAAQsB,CAAR,EAAWC,CAAX,KAAiBvB,KAAK,CAACwB,OAAN,CAAcF,CAAd,EAAiBC,CAAjB,CAJG;EAKpCE,YAAY,EAAE,CAACzB,KAAD,EAAQ0B,cAAR,EAAwBC,QAAxB,KAAqC;IACjD,IAAI,CAACD,cAAD,IAAmB,CAAC1B,KAAK,CAAC4B,OAAN,CAAcD,QAAd,CAAxB,EAAiD;MAC/C,OAAOA,QAAP;IACD;;IAED,OAAO3B,KAAK,CAAC6B,gBAAN,CAAuBH,cAAvB,EAAuCC,QAAvC,CAAP;EACD;AAXmC,CAA/B"},"metadata":{},"sourceType":"module"}