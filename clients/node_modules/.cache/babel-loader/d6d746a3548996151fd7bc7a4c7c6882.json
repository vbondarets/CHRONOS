{"ast":null,"code":"import Symbol from './_Symbol.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\n/** Built-in value references. */\n\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\n\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nexport default isFlattenable;","map":{"version":3,"names":["Symbol","isArguments","isArray","spreadableSymbol","isConcatSpreadable","undefined","isFlattenable","value"],"sources":["/home/firemort/Рабочий стол/Fullstack/CHRONOS/clients/node_modules/lodash-es/_isFlattenable.js"],"sourcesContent":["import Symbol from './_Symbol.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nexport default isFlattenable;\n"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,OAAP,MAAoB,cAApB;AAEA;;AACA,IAAIC,gBAAgB,GAAGH,MAAM,GAAGA,MAAM,CAACI,kBAAV,GAA+BC,SAA5D;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAC5B,OAAOL,OAAO,CAACK,KAAD,CAAP,IAAkBN,WAAW,CAACM,KAAD,CAA7B,IACL,CAAC,EAAEJ,gBAAgB,IAAII,KAApB,IAA6BA,KAAK,CAACJ,gBAAD,CAApC,CADH;AAED;;AAED,eAAeG,aAAf"},"metadata":{},"sourceType":"module"}