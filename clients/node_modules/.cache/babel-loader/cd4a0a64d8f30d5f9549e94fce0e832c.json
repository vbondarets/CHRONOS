{"ast":null,"code":"var _jsxFileName = \"/Users/vbondarets/Desktop/CHRONOS/clients/src/components/forms/EventForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport MyButton from '../UI/button/MyButton';\nimport MyInput from '../UI/input/MyInput';\nimport MySelect from '../UI/select/MySelect';\nimport moment from 'moment';\nimport { SketchPicker, ChromePicker } from 'react-color';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EventForm = _ref => {\n  _s();\n\n  let {\n    date\n  } = _ref;\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [color, setColor] = useState('#4169e1');\n  const [time, setTime] = useState('00:00');\n  const [errorMessage, setMessage] = useState('');\n  const [categories, setCatigories] = useState(['arrangement', 'reminder', 'task']);\n  const [category, setCatigory] = useState('');\n\n  const sendReq = e => {\n    e.preventDefault();\n    const body = {\n      title: title,\n      description: description,\n      type: category,\n      // time: moment().format(\"YYYY-MM-DD HH:mm\")\n      time: date + \" \" + time\n    };\n    console.log(body);\n  };\n\n  const handleChangeComplete = (color, event) => {\n    // this.setState({ background: color.hex });\n    setColor(color.hex);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      type: \"text\",\n      placeholder: \"Event title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      type: \"text\",\n      placeholder: \"Event description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n      value: category,\n      defaultValue: \"Choose category\",\n      options: categories.map(el => {\n        return {\n          value: el,\n          name: el\n        };\n      }),\n      onChange: selectedCategory => setCatigory(selectedCategory)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n      value: color,\n      onChange: e => setColor(e.target.value),\n      type: \"text\",\n      placeholder: \"Event color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChromePicker, {\n      color: color,\n      onChangeComplete: handleChangeComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n      value: time,\n      onChange: e => setTime(e.target.value),\n      type: \"text\",\n      placeholder: \"Event time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: e => sendReq(e),\n      children: \"Create Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        color: color\n      },\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EventForm, \"fz5wgvZvnXL42wks8QJfY3L7HIw=\");\n\n_c = EventForm;\nexport default EventForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventForm\");","map":{"version":3,"names":["React","useState","useSelector","MyButton","MyInput","MySelect","moment","SketchPicker","ChromePicker","EventForm","date","title","setTitle","description","setDescription","color","setColor","time","setTime","errorMessage","setMessage","categories","setCatigories","category","setCatigory","sendReq","e","preventDefault","body","type","console","log","handleChangeComplete","event","hex","target","value","map","el","name","selectedCategory"],"sources":["/Users/vbondarets/Desktop/CHRONOS/clients/src/components/forms/EventForm.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { useSelector } from 'react-redux';\nimport MyButton from '../UI/button/MyButton'\nimport MyInput from '../UI/input/MyInput'\nimport MySelect from '../UI/select/MySelect';\nimport moment from 'moment';\nimport { SketchPicker, ChromePicker } from 'react-color';\n\nconst EventForm = ({ date }) => {\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [color, setColor] = useState('#4169e1');\n    const [time, setTime] = useState('00:00');\n    const [errorMessage, setMessage] = useState ('');\n    const [categories, setCatigories] = useState(['arrangement', 'reminder', 'task']);\n    const [category, setCatigory] = useState('');\n\n    const sendReq = (e) => {\n        e.preventDefault();\n        \n        const body = {\n            title: title,\n            description: description,\n            type: category,\n            // time: moment().format(\"YYYY-MM-DD HH:mm\")\n            time: date + \" \" + time\n        }\n        console.log(body);\n    }\n    const handleChangeComplete = (color, event) => {\n        // this.setState({ background: color.hex });\n        setColor(color.hex);\n    };\n    return (\n        <form>\n            <h1>Event</h1>\n            <MyInput\n                value={title}\n                onChange={e => setTitle(e.target.value)}\n                type=\"text\"\n                placeholder=\"Event title\"\n            />\n            <MyInput\n                value={description}\n                onChange={e => setDescription(e.target.value)}\n                type=\"text\"\n                placeholder=\"Event description\"\n            />\n            <MySelect\n                value={category}\n                defaultValue={\"Choose category\"}\n                options={categories.map(el =>{\n                    return {value: el, name: el}\n                })}\n                onChange={selectedCategory => setCatigory(selectedCategory)}\n            />\n            <MyInput\n                value={color}\n                onChange={e => setColor(e.target.value)}\n                type=\"text\"\n                placeholder=\"Event color\"\n            />\n            <ChromePicker\n                color = {color}\n                onChangeComplete={ handleChangeComplete }\n            />\n            <MyInput\n                value={time}\n                onChange={e => setTime(e.target.value)}\n                type=\"text\"\n                placeholder=\"Event time\"\n            />\n            <h2>{errorMessage}</h2>\n            <MyButton onClick={(e) => sendReq(e)}>{\"Create Event\"}</MyButton>\n            <button style={{color: color}}>test</button>\n        </form>\n    )\n}\n\nexport default EventForm;\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}