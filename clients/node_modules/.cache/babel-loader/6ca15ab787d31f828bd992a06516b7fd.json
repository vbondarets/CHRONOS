{"ast":null,"code":"import { configure } from \"mobx\";\nexport function defaultNoopBatch(callback) {\n  callback();\n}\nexport function observerBatching(reactionScheduler) {\n  if (!reactionScheduler) {\n    reactionScheduler = defaultNoopBatch;\n\n    if (\"production\" !== process.env.NODE_ENV) {\n      console.warn(\"[MobX] Failed to get unstable_batched updates from react-dom / react-native\");\n    }\n  }\n\n  configure({\n    reactionScheduler: reactionScheduler\n  });\n}\nexport var isObserverBatched = function () {\n  if (\"production\" !== process.env.NODE_ENV) {\n    console.warn(\"[MobX] Deprecated\");\n  }\n\n  return true;\n};","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,MAA1B;AAEA,OAAM,SAAUC,gBAAV,CAA2BC,QAA3B,EAA+C;EACjDA,QAAQ;AACX;AAED,OAAM,SAAUC,gBAAV,CAA2BC,iBAA3B,EAAiD;EACnD,IAAI,CAACA,iBAAL,EAAwB;IACpBA,iBAAiB,GAAGH,gBAApB;;IACA,IAAI,iBAAiBI,OAAO,CAACC,GAAR,CAAYC,QAAjC,EAA2C;MACvCC,OAAO,CAACC,IAAR,CACI,6EADJ;IAGH;EACJ;;EACDT,SAAS,CAAC;IAAEI,iBAAiB;EAAnB,CAAD,CAAT;AACH;AAED,OAAO,IAAMM,iBAAiB,GAAG;EAC7B,IAAI,iBAAiBL,OAAO,CAACC,GAAR,CAAYC,QAAjC,EAA2C;IACvCC,OAAO,CAACC,IAAR,CAAa,mBAAb;EACH;;EAED,OAAO,IAAP;AACH,CANM","names":["configure","defaultNoopBatch","callback","observerBatching","reactionScheduler","process","env","NODE_ENV","console","warn","isObserverBatched"],"sources":["/home/firemort/Рабочий стол/Fullstack/chronos/idashchenk/clients/node_modules/mobx-react-lite/src/utils/observerBatching.ts"],"sourcesContent":["import { configure } from \"mobx\"\n\nexport function defaultNoopBatch(callback: () => void) {\n    callback()\n}\n\nexport function observerBatching(reactionScheduler: any) {\n    if (!reactionScheduler) {\n        reactionScheduler = defaultNoopBatch\n        if (\"production\" !== process.env.NODE_ENV) {\n            console.warn(\n                \"[MobX] Failed to get unstable_batched updates from react-dom / react-native\"\n            )\n        }\n    }\n    configure({ reactionScheduler })\n}\n\nexport const isObserverBatched = () => {\n    if (\"production\" !== process.env.NODE_ENV) {\n        console.warn(\"[MobX] Deprecated\")\n    }\n\n    return true\n}\n"]},"metadata":{},"sourceType":"module"}