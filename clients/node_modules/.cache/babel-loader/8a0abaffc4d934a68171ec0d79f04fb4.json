{"ast":null,"code":"var _jsxFileName = \"/home/firemort/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Fullstack/back-front/idashchenk/clients/src/components/pages/PostComponents/GetComment.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"@mui/material\";\nimport jwt_decode from \"jwt-decode\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeletComment, getComments, UpdateComment } from \"../../../action/PostAction\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport style from '../../style/PostPage.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CommentsForPost = props => {\n  _s();\n\n  const history = useHistory();\n  let [comment, setComment] = useState('');\n  let [index, setIndex] = useState(0);\n  let [indexforAdmin, setIndexForAdmin] = useState(0);\n  const auth = useSelector(state => state.Auth);\n  const token = auth.token;\n  const decode = jwt_decode(token);\n  const user_id = decode.id;\n  const role = decode.role;\n  const {\n    post_id,\n    comments\n  } = props;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getComments(post_id));\n  }, [dispatch, post_id]);\n\n  if (comments.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Comments yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: role === 'admin' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: comments.map(cmnt => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.Comment,\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            className: style.Commentlogin,\n            onClick: () => {\n              history.push(`/user/${cmnt.user_id}`);\n            },\n            children: cmnt.login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.Commentcontent,\n            children: index === 1 ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              placeholder: \"How u wanna edit comment\",\n              value: comment,\n              onChange: e => setComment(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this) : cmnt.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), user_id === cmnt.user_id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              endIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 65\n              }, this),\n              className: style.EditButtonComment,\n              onClick: () => {\n                if (index === 0) {\n                  setIndex(1);\n                } else if (index === 1) {\n                  setIndex(0);\n                  dispatch(UpdateComment(cmnt.id, post_id, comment));\n                }\n\n                console.log(index);\n              },\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            sx: {\n              float: \"right\",\n              marginRight: \"5%\"\n            },\n            endIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 104\n            }, this),\n            onClick: () => {\n              dispatch(DeletComment(cmnt.id, post_id));\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.Commenttime,\n            children: moment(cmnt.time).fromNow()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)]\n        }, cmnt.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this))\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: comments.map(cmnt => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.Comment,\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            className: style.Commentlogin,\n            onClick: () => {\n              history.push(`/user/${cmnt.user_id}`);\n            },\n            children: cmnt.login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.Commentcontent,\n            children: index === 1 ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              placeholder: \"How u wanna edit comment\",\n              value: comment,\n              onChange: e => setComment(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this) : cmnt.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), user_id === cmnt.user_id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              endIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 65\n              }, this),\n              className: style.EditButtonComment,\n              onClick: () => {\n                if (index === 0) {\n                  setIndex(1);\n                } else if (index === 1) {\n                  setIndex(0);\n                  dispatch(UpdateComment(cmnt.id, post_id, comment));\n                }\n\n                console.log(index);\n              },\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              className: style.DeleteButtonComment,\n              sx: {\n                float: \"right\"\n              },\n              endIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 124\n              }, this),\n              onClick: () => {\n                dispatch(DeletComment(cmnt.id, post_id));\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.Commenttime,\n            children: moment(cmnt.time).fromNow()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, cmnt.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this))\n      }, void 0, false)\n    }, void 0, false);\n  }\n};\n\n_s(CommentsForPost, \"QAr2ZnbtrDogtwoXB20eeNYEcVc=\", false, function () {\n  return [useHistory, useSelector, useDispatch];\n});\n\n_c = CommentsForPost;\nexport default CommentsForPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentsForPost\");","map":{"version":3,"names":["Button","jwt_decode","moment","React","useEffect","useState","useDispatch","useSelector","useHistory","DeletComment","getComments","UpdateComment","EditIcon","DeleteIcon","style","CommentsForPost","props","history","comment","setComment","index","setIndex","indexforAdmin","setIndexForAdmin","auth","state","Auth","token","decode","user_id","id","role","post_id","comments","dispatch","length","map","cmnt","Comment","Commentlogin","push","login","Commentcontent","e","target","value","content","EditButtonComment","console","log","float","marginRight","Commenttime","time","fromNow","DeleteButtonComment"],"sources":["/home/firemort/Рабочий стол/Fullstack/back-front/idashchenk/clients/src/components/pages/PostComponents/GetComment.js"],"sourcesContent":["import { Button } from \"@mui/material\";\nimport jwt_decode from \"jwt-decode\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeletComment, getComments, UpdateComment } from \"../../../action/PostAction\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete'\n\nimport style from '../../style/PostPage.module.css'\n\nconst CommentsForPost = (props) => {\n    const history = useHistory()\n    let [comment, setComment] = useState('')\n    let [index, setIndex] = useState(0)\n    let [indexforAdmin, setIndexForAdmin] = useState(0)\n    const auth = useSelector(state=>state.Auth)\n    const token = auth.token\n    const decode = jwt_decode(token)\n    const user_id = decode.id\n    const role = decode.role\n    const {post_id,comments} = props\n    \n    const dispatch = useDispatch()\n    useEffect ( () => {\n        dispatch(getComments(post_id))\n    }, [dispatch,post_id])\n    if (comments.length === 0) {\n        return (\n            <p>No Comments yet</p>\n        )\n    }\n    else {\n        return (\n            <>\n            {role === 'admin' ? \n                <>\n                    {comments.map( (cmnt) => \n                        <div key={cmnt.id} className={style.Comment}>\n                            <a className={style.Commentlogin} onClick = {() => {history.push(`/user/${cmnt.user_id}`)}}>{cmnt.login}</a>\n                            <p className={style.Commentcontent}>{index === 1 ? \n                            <textarea type='text' placeholder=\"How u wanna edit comment\" value={comment} onChange={e=>setComment(e.target.value)}/> \n                            : \n                            cmnt.content}</p>\n                            {user_id === cmnt.user_id ?\n                            <>\n                            <Button variant=\"outlined\" endIcon={<EditIcon />} className={style.EditButtonComment} onClick= { () => {\n                                if (index === 0) {\n                                    setIndex(1)\n                                }\n                                else if (index === 1) {\n                                    setIndex(0)\n                                    dispatch(UpdateComment(cmnt.id,post_id, comment))\n                                }\n                                console.log(index);\n                            }}>Edit</Button>\n                            </>\n                            :\n                            <></>\n                        }\n                            <Button variant=\"outlined\" sx={{float:\"right\", marginRight:\"5%\"}} endIcon={<DeleteIcon/>} onClick={() => {\n                                dispatch(DeletComment(cmnt.id,post_id))\n                            }}>Delete</Button>\n                            <p className={style.Commenttime}>{moment(cmnt.time).fromNow()}</p>\n                        </div>\n                    )}\n                </>\n                :\n                <>\n                    {comments.map( (cmnt) => \n                    <div key={cmnt.id} className={style.Comment}>\n                        <a className={style.Commentlogin} onClick = {() => {history.push(`/user/${cmnt.user_id}`)}}>{cmnt.login}</a>\n                        <p className={style.Commentcontent}>{index === 1 ? \n                            <textarea type='text' placeholder=\"How u wanna edit comment\" value={comment} onChange={e=>setComment(e.target.value)}/> \n                            : \n                            cmnt.content}</p>\n                        {user_id === cmnt.user_id ?\n                            <>\n                            <Button variant=\"outlined\" endIcon={<EditIcon />} className={style.EditButtonComment} onClick= { () => {\n                                if (index === 0) {\n                                    setIndex(1)\n                                }\n                                else if (index === 1) {\n                                    setIndex(0)\n                                    dispatch(UpdateComment(cmnt.id,post_id, comment))\n                                }\n                                console.log(index);\n                            }}>Edit</Button>\n                            <Button variant=\"outlined\" className={style.DeleteButtonComment} sx={{float:\"right\"}} endIcon={<DeleteIcon/>} onClick={() => {\n                                dispatch(DeletComment(cmnt.id,post_id))\n                            }}>Delete</Button>\n                            </>\n                            :\n                            <></>\n                        }\n                        <p className={style.Commenttime}>{moment(cmnt.time).fromNow()}</p>\n                    </div>\n                    )}\n                </>\n            }\n            </>\n        )\n    }\n}\n\nexport default  CommentsForPost"],"mappings":"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"},"metadata":{},"sourceType":"module"}