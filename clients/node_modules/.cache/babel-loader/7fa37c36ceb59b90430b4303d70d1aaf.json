{"ast":null,"code":"const initialState = {\n  categories: []\n};\nexport const CategoryReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'createCategory':\n      return { ...state,\n        categories: action.payload\n      };\n\n    case 'getCategory':\n      return { ...state,\n        categories: action.payload\n      };\n\n    case 'deleteCategory':\n      return { ...state,\n        categories: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n_c = CategoryReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryReducer\");","map":{"version":3,"names":["initialState","categories","CategoryReducer","state","action","type","payload"],"sources":["/home/firemort/Рабочий стол/Fullstack/back-front/idashchenk/clients/src/reducers/CategoryReducer.js"],"sourcesContent":["const initialState = {\n    categories: []\n}\n\nexport const CategoryReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'createCategory': \n            return {...state, categories: action.payload}\n        case 'getCategory':\n            return {...state, categories: action.payload}\n        case 'deleteCategory':\n            return {...state, categories: action.payload}\n        default:\n            return state;\n    }\n}"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACjBC,UAAU,EAAE;AADK,CAArB;AAIA,OAAO,MAAMC,eAAe,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBH,YAAyB;EAAA,IAAXI,MAAW;;EAC7D,QAAQA,MAAM,CAACC,IAAf;IACI,KAAK,gBAAL;MACI,OAAO,EAAC,GAAGF,KAAJ;QAAWF,UAAU,EAAEG,MAAM,CAACE;MAA9B,CAAP;;IACJ,KAAK,aAAL;MACI,OAAO,EAAC,GAAGH,KAAJ;QAAWF,UAAU,EAAEG,MAAM,CAACE;MAA9B,CAAP;;IACJ,KAAK,gBAAL;MACI,OAAO,EAAC,GAAGH,KAAJ;QAAWF,UAAU,EAAEG,MAAM,CAACE;MAA9B,CAAP;;IACJ;MACI,OAAOH,KAAP;EARR;AAUH,CAXM;KAAMD,e"},"metadata":{},"sourceType":"module"}