{"ast":null,"code":"var _jsxFileName = \"/home/firemort/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Fullstack/back-front/idashchenk/clients/src/components/pages/UserPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { deletePost, getPosts } from \"../../action/PostAction\";\nimport { getUser, UpdateUser } from \"../../action/UserAction\";\nimport jwt_decode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserPage = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  let [login, setLogin] = useState('');\n  let [email, setEmail] = useState('');\n  let [full_name, setFull_name] = useState('');\n  const data = useSelector(state => state.User);\n  const post = useSelector(store => store.Post);\n  const auth = useSelector(state => state.Auth);\n  let [index, setIndex] = useState(0);\n  const token = auth.token;\n  const decode = jwt_decode(token);\n  const user_id = decode.id;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getUser(id));\n    dispatch(getPosts());\n  }, [dispatch]);\n  let user = data.user;\n  let allPost = post.allPost;\n\n  if (allPost === undefined) {\n    allPost = [];\n  }\n\n  if (user.length === 0) {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: user_id === user[0].id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"avatar\",\n            src: \"http://localhost:3001/public/avatar/04086d0e-d7fd-4176-a6be-ef6acbc54fbe.jpg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Full name: \", user[0].full_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Login: \", user[0].login]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Email: \", user[0].email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"User: \", user[0].role]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), index === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter new login\",\n              value: login,\n              onChange: e => setLogin(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: \"Enter new email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter new full name\",\n              value: full_name,\n              onChange: e => setFull_name(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (index === 0) {\n                setIndex(1);\n              }\n\n              if (index === 1) {\n                setIndex(0);\n                dispatch(UpdateUser(id, login, email, full_name));\n              }\n            },\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Posts:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), allPost.map(posts => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: posts.user_id === user[0].id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: posts.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: posts.info\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: posts.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  dispatch(deletePost(posts.id));\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n          }, posts.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Full name: \", user[0].full_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Login: \", user[0].login]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Email: \", user[0].email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"User: \", user[0].role]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Posts:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), allPost.map(posts => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: posts.user_id === user[0].id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: posts.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: posts.info\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: posts.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n          }, posts.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(UserPage, \"ntoXrSbf87TGBTvM8auYRvf8X5Y=\", false, function () {\n  return [useParams, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = UserPage;\nexport default UserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","useParams","deletePost","getPosts","getUser","UpdateUser","jwt_decode","UserPage","id","login","setLogin","email","setEmail","full_name","setFull_name","data","state","User","post","store","Post","auth","Auth","index","setIndex","token","decode","user_id","dispatch","user","allPost","undefined","length","role","e","target","value","map","posts","title","info","time"],"sources":["/home/firemort/Рабочий стол/Fullstack/back-front/idashchenk/clients/src/components/pages/UserPage.js"],"sourcesContent":["import React, { useEffect,useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { deletePost, getPosts } from \"../../action/PostAction\";\nimport { getUser, UpdateUser } from \"../../action/UserAction\";\nimport jwt_decode from 'jwt-decode'\n\n\nconst UserPage = () => {\n    const {id} = useParams()\n    let [login, setLogin] = useState('')\n    let [email, setEmail] = useState('')\n    let [full_name, setFull_name] = useState('')\n    const data = useSelector(state=>state.User)\n    const post = useSelector(store => store.Post)\n    const auth = useSelector(state=>state.Auth)\n    let [index, setIndex] = useState(0)\n\n    const token = auth.token\n    const decode = jwt_decode(token)\n    const user_id = decode.id\n\n    const dispatch = useDispatch()\n    useEffect( () => {\n        dispatch(getUser(id))\n        dispatch(getPosts())\n    }, [dispatch])\n    let user = data.user\n    let allPost = post.allPost \n\n    if (allPost === undefined) {\n        allPost = []\n    }\n    if (user.length === 0) {\n        <div>Loading</div>\n    }\n    else {\n        return (\n            <div>\n                {user_id === user[0].id ? \n                    <>\n                        <div>\n                            <img alt='avatar' src=\"http://localhost:3001/public/avatar/04086d0e-d7fd-4176-a6be-ef6acbc54fbe.jpg\"/>\n                            <p>Full name: {user[0].full_name}</p>\n                            <p>Login: {user[0].login}</p>\n                            <p>Email: {user[0].email}</p>\n                            <p>User: {user[0].role}</p>\n                            {index === 1 ? \n                                <>\n                                    <input type='text' placeholder=\"Enter new login\" value={login} onChange={ e => setLogin(e.target.value)}></input>\n                                    <input type='email' placeholder=\"Enter new email\" value={email} onChange={ e => setEmail(e.target.value)}></input>\n                                    <input type='text' placeholder=\"Enter new full name\" value={full_name} onChange={ e => setFull_name(e.target.value)}></input>\n                                </> \n                                : \n                                <></>}\n                            <button onClick={ () => {\n                                if (index === 0) {\n                                    setIndex(1)\n                                }\n                                if (index === 1) {\n                                    setIndex(0)\n                                    dispatch(UpdateUser(id, login,email,full_name))\n                                }\n                            }}>Update</button>\n                        </div>\n                        <div>\n                            <p>Posts:</p>\n                            {allPost.map( (posts) => \n                                <div key={posts.id}> \n                                    {posts.user_id === user[0].id ?\n                                        <>\n                                            <p>{posts.title}</p>\n                                            <p>{posts.info}</p>\n                                            <p>{posts.time}</p>\n                                            <button onClick={ () => {dispatch(deletePost(posts.id))}}>Delete</button> \n                                        </> \n                                        :\n                                        <></>\n                                    }\n                                </div>\n                            )}\n                        </div>\n                    </>\n                    :\n                    <>\n                        <div>\n                            <p>Full name: {user[0].full_name}</p>\n                            <p>Login: {user[0].login}</p>\n                            <p>Email: {user[0].email}</p>\n                            <p>User: {user[0].role}</p>\n                        </div>\n                        <div>\n                            <p>Posts:</p>\n                            {allPost.map( (posts) => \n                                <div key={posts.id}> \n                                    {posts.user_id === user[0].id ? \n                                        <>\n                                            <p>{posts.title}</p>\n                                            <p>{posts.info}</p>\n                                            <p>{posts.time}</p>\n                                        </>\n                                        :\n                                        <></>\n                                    }\n                                </div>\n                            )}\n                        </div>\n                    </>\n                }\n            </div>\n        )\n    }\n}\n\nexport default UserPage"],"mappings":"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"},"metadata":{},"sourceType":"module"}