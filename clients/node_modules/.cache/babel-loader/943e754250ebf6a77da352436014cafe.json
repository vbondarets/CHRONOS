{"ast":null,"code":"const initialState = {\n  isAuth: false,\n  user: ''\n};\nexport const AuthReducer = function () {\n  let auth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'register':\n      return [...auth, action.payload];\n\n    case 'login':\n      return { ...auth,\n        isAuth: true,\n        user: action.payload\n      };\n\n    default:\n      return auth;\n  }\n};\n_c = AuthReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthReducer\");","map":{"version":3,"names":["initialState","isAuth","user","AuthReducer","auth","action","type","payload"],"sources":["/home/firemort/Рабочий стол/Fullstack/back-front/idashchenk/clients/src/reducers/AuthReducer.js"],"sourcesContent":["const initialState = {\n    isAuth:false,\n    user:''\n}\n\nexport const AuthReducer = (auth= initialState, action) => {\n    switch(action.type) {\n        case 'register':\n            return [...auth,action.payload]\n        case 'login': \n            return {...auth,\n                isAuth:true,\n                user:action.payload}\n        default:\n            return auth\n    }\n}"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACjBC,MAAM,EAAC,KADU;EAEjBC,IAAI,EAAC;AAFY,CAArB;AAKA,OAAO,MAAMC,WAAW,GAAG,YAAgC;EAAA,IAA/BC,IAA+B,uEAAzBJ,YAAyB;EAAA,IAAXK,MAAW;;EACvD,QAAOA,MAAM,CAACC,IAAd;IACI,KAAK,UAAL;MACI,OAAO,CAAC,GAAGF,IAAJ,EAASC,MAAM,CAACE,OAAhB,CAAP;;IACJ,KAAK,OAAL;MACI,OAAO,EAAC,GAAGH,IAAJ;QACHH,MAAM,EAAC,IADJ;QAEHC,IAAI,EAACG,MAAM,CAACE;MAFT,CAAP;;IAGJ;MACI,OAAOH,IAAP;EARR;AAUH,CAXM;KAAMD,W"},"metadata":{},"sourceType":"module"}