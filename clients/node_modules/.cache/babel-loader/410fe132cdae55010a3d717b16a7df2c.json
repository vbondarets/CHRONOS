{"ast":null,"code":"initialState = {\n  isAuth: false,\n  user: null\n};\nexport const AuthReducer = function () {\n  let auth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'register':\n      return [...auth, action.payload];\n\n    case 'login':\n      return { ...auth,\n        user: action.payload,\n        isAuth: true\n      };\n\n    case 'isAuth':\n      return { ...auth,\n        isAuth\n      };\n\n    default:\n      return auth;\n  }\n};\n_c = AuthReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthReducer\");","map":{"version":3,"names":["initialState","isAuth","user","AuthReducer","auth","action","type","payload"],"sources":["/home/firemort/Рабочий стол/Fullstack/back-front/idashchenk/clients/src/reducers/AuthReducer.js"],"sourcesContent":["initialState = {\n    isAuth:false,\n    user: null\n}\n\n\nexport const AuthReducer = (auth = initialState, action) => {\n    switch(action.type) {\n        case 'register':\n            return [...auth,action.payload]\n        case 'login': \n            return {...auth,user:action.payload,isAuth:true}\n        case 'isAuth': \n            return {...auth, isAuth}\n        default:\n            return auth\n    }\n}"],"mappings":"AAAAA,YAAY,GAAG;EACXC,MAAM,EAAC,KADI;EAEXC,IAAI,EAAE;AAFK,CAAf;AAMA,OAAO,MAAMC,WAAW,GAAG,YAAiC;EAAA,IAAhCC,IAAgC,uEAAzBJ,YAAyB;EAAA,IAAXK,MAAW;;EACxD,QAAOA,MAAM,CAACC,IAAd;IACI,KAAK,UAAL;MACI,OAAO,CAAC,GAAGF,IAAJ,EAASC,MAAM,CAACE,OAAhB,CAAP;;IACJ,KAAK,OAAL;MACI,OAAO,EAAC,GAAGH,IAAJ;QAASF,IAAI,EAACG,MAAM,CAACE,OAArB;QAA6BN,MAAM,EAAC;MAApC,CAAP;;IACJ,KAAK,QAAL;MACI,OAAO,EAAC,GAAGG,IAAJ;QAAUH;MAAV,CAAP;;IACJ;MACI,OAAOG,IAAP;EARR;AAUH,CAXM;KAAMD,W"},"metadata":{},"sourceType":"module"}