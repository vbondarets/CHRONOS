{"ast":null,"code":"const initialState = {\n  events: [],\n  latestEvents: []\n};\nexport const EventReducer = function () {\n  let event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'getEvets':\n      return { ...event,\n        events: action.payload\n      };\n\n    case 'getLatestEvents':\n      return { ...event,\n        latestEvents: action.payload\n      };\n\n    case 'createEvent':\n      return { ...event,\n        events: action.payload\n      };\n\n    default:\n      return event;\n  }\n};\n_c = EventReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventReducer\");","map":{"version":3,"names":["initialState","events","latestEvents","EventReducer","event","action","type","payload"],"sources":["/home/firemort/Рабочий стол/Fullstack/CHRONOS/Chronos2/CHRONOS/clients/src/reducers/EventReducer.js"],"sourcesContent":["const initialState ={\n    events:[],\n    latestEvents:[]\n}\n\nexport const EventReducer = (event = initialState, action) => {\n    switch (action.type) {\n        case 'getEvets':\n            return {...event, events:action.payload}\n        case 'getLatestEvents':\n            return {...event, latestEvents:action.payload}\n        case 'createEvent': \n            return {...event, events:action.payload}\n        default:\n            return event\n    }\n}"],"mappings":"AAAA,MAAMA,YAAY,GAAE;EAChBC,MAAM,EAAC,EADS;EAEhBC,YAAY,EAAC;AAFG,CAApB;AAKA,OAAO,MAAMC,YAAY,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBJ,YAAyB;EAAA,IAAXK,MAAW;;EAC1D,QAAQA,MAAM,CAACC,IAAf;IACI,KAAK,UAAL;MACI,OAAO,EAAC,GAAGF,KAAJ;QAAWH,MAAM,EAACI,MAAM,CAACE;MAAzB,CAAP;;IACJ,KAAK,iBAAL;MACI,OAAO,EAAC,GAAGH,KAAJ;QAAWF,YAAY,EAACG,MAAM,CAACE;MAA/B,CAAP;;IACJ,KAAK,aAAL;MACI,OAAO,EAAC,GAAGH,KAAJ;QAAWH,MAAM,EAACI,MAAM,CAACE;MAAzB,CAAP;;IACJ;MACI,OAAOH,KAAP;EARR;AAUH,CAXM;KAAMD,Y"},"metadata":{},"sourceType":"module"}