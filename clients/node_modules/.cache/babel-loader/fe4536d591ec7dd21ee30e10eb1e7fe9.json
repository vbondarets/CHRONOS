{"ast":null,"code":"var _jsxFileName = \"/home/firemort/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Fullstack/CHRONOS/CHRONOS/clients/src/components/pages/Homepage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport dayjs from 'dayjs';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HomePage = () => {\n  _s();\n\n  moment.updateLocale(moment.locale(), {\n    week: {\n      dow: 1\n    }\n  });\n  const [now, setNow] = useState(new Date());\n  const startDay = moment().startOf('month').startOf('week');\n  const lastday = moment().endOf('month').endOf('week');\n  console.log(startDay.format('YYYY-MM-DD'));\n  const [months, setMonths] = useState(now.getMonth());\n  const [lastDayOfMonth, setLastDayOfMonth] = useState(new Date(now.getFullYear(), months + 1, 0).getDate());\n  let days = [];\n\n  for (let index = 1; index <= lastDayOfMonth; index++) {\n    days.push(index);\n  }\n\n  console.log(days);\n  const month = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  console.log(months);\n  console.log(now);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (months === 0) {\n              setNow(new Date(new Date().setFullYear(now.getFullYear() - 1)));\n              setMonths(11);\n            } else {\n              setMonths(months - 1);\n            }\n          },\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 20\n        }, this), month[months] + now.getFullYear(), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (months === 11) {\n              setNow(new Date().setMonth(0).setFullYear(now.getFullYear() + 1));\n              setLastDayOfMonth(new Date(now.getFullYear(), months + 1, 0).getDate());\n              setMonths(0);\n            } else {\n              setNow(new Date(new Date().setMonth(now.getMonth() + 1)));\n              setMonths(months + 1);\n            }\n          },\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(HomePage, \"LiPyEGyYqXPU/GxPmLXv7/m6/xA=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","dayjs","moment","HomePage","updateLocale","locale","week","dow","now","setNow","Date","startDay","startOf","lastday","endOf","console","log","format","months","setMonths","getMonth","lastDayOfMonth","setLastDayOfMonth","getFullYear","getDate","days","index","push","month","setFullYear","setMonth"],"sources":["/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/components/pages/Homepage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport dayjs from 'dayjs';\nimport moment from 'moment'\n\nconst HomePage = () => {\n    moment.updateLocale(moment.locale(),{week:{dow:1}})\n    const [now, setNow] = useState(new Date())\n    const startDay = moment().startOf('month').startOf('week');\n    const lastday = moment().endOf('month').endOf('week');\n    console.log(startDay.format('YYYY-MM-DD'));\n    const [months, setMonths] = useState(now.getMonth())\n    const [lastDayOfMonth, setLastDayOfMonth] = useState((new Date(now.getFullYear(), months + 1, 0)).getDate())\n    let days = []\n    for (let index = 1; index <= lastDayOfMonth; index++) {\n        days.push(index)\n    }\n    console.log(days);\n    const month = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November','December']\n    console.log(months);\n    console.log(now);\n    return (\n        <>\n            <div>\n                <p><button onClick={ () => {\n                    if (months === 0) {\n                        setNow(new Date(new Date().setFullYear(now.getFullYear()-1)))\n                        setMonths(11)\n                    }\n                    else {\n                        setMonths(months-1)\n                    }\n                    }}>\n                    Prev</button>{month[months] + now.getFullYear()} \n                    <button onClick={ () => {\n                    if(months === 11) {\n                        setNow(new Date().setMonth(0).setFullYear(now.getFullYear()+1))\n                        setLastDayOfMonth((new Date(now.getFullYear(), months + 1, 0)).getDate())\n                        setMonths(0)\n                    }\n                    \n                    else {\n                        setNow(new Date(new Date().setMonth(now.getMonth()+1)))\n                        setMonths(months + 1)\n                    }\n                    }}>Next</button> </p>\n                    <ul>\n                        \n                    </ul>\n            </div>  \n        </>\n    )\n}\n\nexport default HomePage;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACnBD,MAAM,CAACE,YAAP,CAAoBF,MAAM,CAACG,MAAP,EAApB,EAAoC;IAACC,IAAI,EAAC;MAACC,GAAG,EAAC;IAAL;EAAN,CAApC;EACA,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,IAAIU,IAAJ,EAAD,CAA9B;EACA,MAAMC,QAAQ,GAAGT,MAAM,GAAGU,OAAT,CAAiB,OAAjB,EAA0BA,OAA1B,CAAkC,MAAlC,CAAjB;EACA,MAAMC,OAAO,GAAGX,MAAM,GAAGY,KAAT,CAAe,OAAf,EAAwBA,KAAxB,CAA8B,MAA9B,CAAhB;EACAC,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACM,MAAT,CAAgB,YAAhB,CAAZ;EACA,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAACQ,GAAG,CAACY,QAAJ,EAAD,CAApC;EACA,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCtB,QAAQ,CAAE,IAAIU,IAAJ,CAASF,GAAG,CAACe,WAAJ,EAAT,EAA4BL,MAAM,GAAG,CAArC,EAAwC,CAAxC,CAAD,CAA6CM,OAA7C,EAAD,CAApD;EACA,IAAIC,IAAI,GAAG,EAAX;;EACA,KAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,IAAIL,cAA7B,EAA6CK,KAAK,EAAlD,EAAsD;IAClDD,IAAI,CAACE,IAAL,CAAUD,KAAV;EACH;;EACDX,OAAO,CAACC,GAAR,CAAYS,IAAZ;EACA,MAAMG,KAAK,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA8G,UAA9G,CAAd;EACAb,OAAO,CAACC,GAAR,CAAYE,MAAZ;EACAH,OAAO,CAACC,GAAR,CAAYR,GAAZ;EACA,oBACI;IAAA,uBACI;MAAA,wBACI;QAAA,wBAAG;UAAQ,OAAO,EAAG,MAAM;YACvB,IAAIU,MAAM,KAAK,CAAf,EAAkB;cACdT,MAAM,CAAC,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWmB,WAAX,CAAuBrB,GAAG,CAACe,WAAJ,KAAkB,CAAzC,CAAT,CAAD,CAAN;cACAJ,SAAS,CAAC,EAAD,CAAT;YACH,CAHD,MAIK;cACDA,SAAS,CAACD,MAAM,GAAC,CAAR,CAAT;YACH;UACA,CARF;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAH,EASkBU,KAAK,CAACV,MAAD,CAAL,GAAgBV,GAAG,CAACe,WAAJ,EATlC,eAUI;UAAQ,OAAO,EAAG,MAAM;YACxB,IAAGL,MAAM,KAAK,EAAd,EAAkB;cACdT,MAAM,CAAC,IAAIC,IAAJ,GAAWoB,QAAX,CAAoB,CAApB,EAAuBD,WAAvB,CAAmCrB,GAAG,CAACe,WAAJ,KAAkB,CAArD,CAAD,CAAN;cACAD,iBAAiB,CAAE,IAAIZ,IAAJ,CAASF,GAAG,CAACe,WAAJ,EAAT,EAA4BL,MAAM,GAAG,CAArC,EAAwC,CAAxC,CAAD,CAA6CM,OAA7C,EAAD,CAAjB;cACAL,SAAS,CAAC,CAAD,CAAT;YACH,CAJD,MAMK;cACDV,MAAM,CAAC,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWoB,QAAX,CAAoBtB,GAAG,CAACY,QAAJ,KAAe,CAAnC,CAAT,CAAD,CAAN;cACAD,SAAS,CAACD,MAAM,GAAG,CAAV,CAAT;YACH;UACA,CAXD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAVJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAuBQ;QAAA;QAAA;QAAA;MAAA,QAvBR;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AA+BH,CA/CD;;GAAMf,Q;;KAAAA,Q;AAiDN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}