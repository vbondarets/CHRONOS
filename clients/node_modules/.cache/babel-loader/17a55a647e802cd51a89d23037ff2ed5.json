{"ast":null,"code":"const IntialState = {\n  user: []\n};\nexport const UserReducer = function () {\n  let user = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : IntialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'getUser':\n      return { ...user,\n        user: action.payload\n      };\n\n    case 'updateUser':\n      return { ...user,\n        user: action.payload\n      };\n\n    case 'updateAvatar':\n      return { ...user,\n        user: action.payload\n      };\n\n    default:\n      return user;\n  }\n};\n_c = UserReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserReducer\");","map":{"version":3,"names":["IntialState","user","UserReducer","action","type","payload"],"sources":["/home/firemort/Рабочий стол/Fullstack/back-front/idashchenk/clients/src/reducers/UserReducer.js"],"sourcesContent":["const IntialState = {\n    user:[],\n}\n\nexport const UserReducer = (user = IntialState, action) => {\n    switch (action.type) {\n        case 'getUser':\n            return {...user, user:action.payload} \n        case 'updateUser':\n            return {...user, user:action.payload}  \n        case 'updateAvatar':\n            return {...user, user:action.payload}\n        default:\n            return user;\n    }\n}"],"mappings":"AAAA,MAAMA,WAAW,GAAG;EAChBC,IAAI,EAAC;AADW,CAApB;AAIA,OAAO,MAAMC,WAAW,GAAG,YAAgC;EAAA,IAA/BD,IAA+B,uEAAxBD,WAAwB;EAAA,IAAXG,MAAW;;EACvD,QAAQA,MAAM,CAACC,IAAf;IACI,KAAK,SAAL;MACI,OAAO,EAAC,GAAGH,IAAJ;QAAUA,IAAI,EAACE,MAAM,CAACE;MAAtB,CAAP;;IACJ,KAAK,YAAL;MACI,OAAO,EAAC,GAAGJ,IAAJ;QAAUA,IAAI,EAACE,MAAM,CAACE;MAAtB,CAAP;;IACJ,KAAK,cAAL;MACI,OAAO,EAAC,GAAGJ,IAAJ;QAAUA,IAAI,EAACE,MAAM,CAACE;MAAtB,CAAP;;IACJ;MACI,OAAOJ,IAAP;EARR;AAUH,CAXM;KAAMC,W"},"metadata":{},"sourceType":"module"}