{"ast":null,"code":"import { deleteComment, likescom, PatchComment } from \"../api/CommentsApi\";\nimport { createCommentsOnPost, createlike, CreatePost, deletelike, GetCategory, getCommentsOnPost, getLikesFromPost, getPost, getPostsbyC, PostByid, PostDelete, updateP } from \"../api/PostApi\";\nexport const getPosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await getPost();\n    return dispatch({\n      type: 'getposts',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsByCategory = id => async dispatch => {\n  try {\n    if (id === 'all') {\n      const Data = await getPost();\n      return dispatch({\n        type: 'getPostsbyCategory',\n        payload: Data.data\n      });\n    } else {\n      const {\n        data\n      } = await getPostsbyC(id);\n\n      if (data.result) {\n        const Data = await getPost();\n        let allPost = [];\n\n        for (let index = 0; index < Data.data.length; index++) {\n          for (let i = 0; i < data.result.length; i++) {\n            if (Data.data[index].id === data.result[i].post_id) {\n              allPost.push(Data.data[index]);\n            }\n          }\n        }\n\n        return dispatch({\n          type: 'getPostsbyCategory',\n          payload: allPost\n        });\n      }\n    }\n  } catch (error) {\n    dispatch({\n      type: 'getPostsbyCategory',\n      payload: []\n    });\n    console.log(error);\n  }\n};\nexport const GetLikes = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await getLikesFromPost(id);\n    return dispatch({\n      type: 'getlikes',\n      payload: data.result\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostById = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await PostByid(id);\n    return dispatch({\n      type: \"getpostbyid\",\n      payload: data.result\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getLikesFromComment = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await likescom(id);\n    return dispatch({\n      type: 'getlikes',\n      payload: data.result\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getComments = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await getCommentsOnPost(id);\n    return dispatch({\n      type: 'getCommentsOnPost',\n      payload: data\n    });\n  } catch (error) {\n    return dispatch({\n      type: 'getCommentsOnPost',\n      payload: []\n    });\n    console.log(error);\n  }\n};\nexport const getCategory = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await GetCategory(id);\n    return dispatch({\n      type: 'getCategory',\n      payload: data.result\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createComment = (id, comment) => async dispatch => {\n  try {\n    const {\n      data\n    } = await createCommentsOnPost(id, comment);\n    console.log(data);\n\n    if (data.result.affectedRows > 0) {\n      const Data = await getCommentsOnPost(id);\n\n      if (Data.data.length === 0) {\n        return dispatch({\n          type: 'createcommentforpost',\n          payload: []\n        });\n      }\n\n      return dispatch({\n        type: 'createcommentforpost',\n        payload: Data.data.result\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = (title, info, category) => async dispatch => {\n  try {\n    const {\n      data\n    } = await CreatePost(title, info, category);\n    const Data = await getPost();\n    console.log(Data);\n    return dispatch({\n      type: 'createpost',\n      payload: Data.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = (id, direction_id) => async dispatch => {\n  try {\n    const {\n      data\n    } = await createlike(id, direction_id);\n\n    if (data.result.affectedRows > 0) {\n      const Data = await getLikesFromPost(id);\n      dispatch({\n        type: \"likepost\",\n        payload: Data.data.result\n      });\n    }\n  } catch (error) {\n    alert('You already paste like');\n  }\n};\nexport const DeletComment = (id, post_id) => async dispatch => {\n  try {\n    const Data = await getCommentsOnPost(post_id);\n\n    if (Data.data.result.length === 1) {\n      const {\n        data\n      } = await deleteComment(id);\n\n      if (data.result.affectedRows > 0) {\n        return dispatch({\n          type: 'deletecomment',\n          payload: []\n        });\n      }\n    } else {\n      const {\n        data\n      } = await deleteComment(id);\n\n      if (data.result.affectedRows > 0) {\n        const Comment = await getCommentsOnPost(post_id);\n        return dispatch({\n          type: 'deletecomment',\n          payload: Comment.data.result\n        });\n      }\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await PostDelete(id);\n\n    if (data.message.affectedRows > 0) {\n      const Data = await getPost();\n      const allPost = Data.data;\n      let i;\n\n      for (let index = 0; index < allPost.length; index++) {\n        if (allPost[index].id === id) {\n          i = index;\n        }\n      }\n\n      if (i > -1) {\n        allPost.splice(i, 1);\n      }\n\n      console.log(allPost);\n      return dispatch({\n        type: 'deletepost',\n        payload: allPost\n      });\n    }\n  } catch (error) {}\n};\nexport const UpdatePost = (post_id, info, title, category) => async dispatch => {\n  try {\n    const {\n      data\n    } = await updateP(post_id, info, title, category);\n    console.log(data);\n\n    if (data.message === 'You update your post') {\n      const Data = await PostByid(post_id);\n      return dispatch({\n        type: 'updatepost',\n        payload: Data.data.result\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const UpdateComment = (id, post_id, content) => async dispatch => {\n  try {\n    const {\n      data\n    } = await PatchComment(id, content);\n\n    if (data.result.affectedRows > 0) {\n      const Data = await getCommentsOnPost(post_id);\n      return dispatch({\n        type: 'updatecomment',\n        payload: Data.data.result\n      });\n    }\n  } catch (error) {\n    alert(\"It`s not your comment\");\n  }\n};\nexport const deleteLikeFromPost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await deletelike(id);\n\n    if (data.result.affectedRows > 0) {\n      const Data = await getLikesFromPost(id);\n      dispatch({\n        type: 'deletelike',\n        payload: Data.data.result\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["deleteComment","likescom","PatchComment","createCommentsOnPost","createlike","CreatePost","deletelike","GetCategory","getCommentsOnPost","getLikesFromPost","getPost","getPostsbyC","PostByid","PostDelete","updateP","getPosts","dispatch","data","type","payload","error","console","log","getPostsByCategory","id","Data","result","allPost","index","length","i","post_id","push","GetLikes","getPostById","getLikesFromComment","getComments","getCategory","createComment","comment","affectedRows","createPost","title","info","category","likePost","direction_id","alert","DeletComment","Comment","deletePost","message","splice","UpdatePost","UpdateComment","content","deleteLikeFromPost"],"sources":["/home/firemort/Рабочий стол/Fullstack/back-front/idashchenk/clients/src/action/PostAction.js"],"sourcesContent":["import { deleteComment, likescom, PatchComment } from \"../api/CommentsApi\";\nimport { createCommentsOnPost, createlike, CreatePost, deletelike, GetCategory, getCommentsOnPost, getLikesFromPost, getPost, getPostsbyC, PostByid, PostDelete, updateP } from \"../api/PostApi\"\n\n\nexport const getPosts = () => async(dispatch) => {\n    try {\n        const {data}= await getPost()\n        return dispatch({type:'getposts', payload:data})\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const getPostsByCategory = (id) => async(dispatch) => {\n    try {\n        if (id === 'all') {\n            const Data = await getPost()\n            return dispatch({type:'getPostsbyCategory', payload: Data.data})\n        }\n        else {\n            const {data} = await getPostsbyC(id)\n            if (data.result) {\n                const Data = await getPost()\n                let allPost = []\n                for (let index = 0; index < Data.data.length; index++) {\n                    for (let i = 0; i < data.result.length; i++) {\n                        if (Data.data[index].id === data.result[i].post_id) {\n                            allPost.push(Data.data[index])\n                        }       \n                    }\n                }\n                return dispatch({type:'getPostsbyCategory', payload: allPost})\n            }\n        }\n    } catch (error) {\n        dispatch({type:'getPostsbyCategory', payload: []})\n        console.log(error);\n    }\n}\n\nexport const GetLikes = (id) => async(dispatch) => {\n    try {\n        const {data} = await getLikesFromPost(id)\n        return dispatch({type:'getlikes', payload:data.result})\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const getPostById = (id) => async(dispatch) => {\n    try {\n        const {data} = await PostByid(id)\n        return dispatch({type:\"getpostbyid\", payload:data.result})\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const getLikesFromComment = (id) => async(dispatch) => {\n    try {\n        const {data} = await likescom(id)\n        return dispatch({type:'getlikes', payload:data.result})\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const getComments = (id) => async(dispatch) => {\n    try {\n        const {data} = await getCommentsOnPost(id)\n        return dispatch({type:'getCommentsOnPost', payload:data})\n    } catch (error) {\n        return dispatch({type:'getCommentsOnPost', payload:[]})\n        console.log(error);\n    }\n}\n\nexport const getCategory = (id) => async(dispatch) => {\n    try {\n        const {data} = await GetCategory(id)\n        return dispatch({type: 'getCategory', payload:data.result})\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const createComment = (id, comment) => async(dispatch) => {\n    try {\n        const {data} = await createCommentsOnPost(id,comment)\n        console.log(data);\n        \n        if (data.result.affectedRows > 0) {\n            const Data = await getCommentsOnPost(id)\n            if (Data.data.length === 0) {\n                return dispatch({type:'createcommentforpost', payload:[]})\n            }\n            return dispatch({type:'createcommentforpost', payload:Data.data.result})\n        }\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const createPost = (title,info,category) => async(dispatch) => {\n    try {\n        const {data} = await CreatePost(title,info,category)\n        const Data = await getPost()\n        console.log(Data);\n        return dispatch({type:'createpost', payload:Data.data})\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const likePost = (id,direction_id) => async(dispatch) => {\n    try {\n        const {data} = await createlike(id,direction_id)\n        if (data.result.affectedRows > 0) {\n            const Data = await getLikesFromPost(id)\n            dispatch({type:\"likepost\", payload:Data.data.result})\n        }\n    } catch (error) {\n        alert('You already paste like')\n    }\n}\n\nexport const DeletComment = (id,post_id) => async(dispatch) => {\n    try {\n        const Data = await getCommentsOnPost(post_id)\n        if (Data.data.result.length === 1) {\n            const {data} = await deleteComment(id)\n            if (data.result.affectedRows > 0) {\n                return dispatch({type:'deletecomment',payload:[]})\n            }   \n        }\n        else {\n            const {data} = await deleteComment(id)\n            if (data.result.affectedRows > 0) {\n                const Comment = await getCommentsOnPost(post_id)\n                return dispatch({type:'deletecomment',payload:Comment.data.result})\n            }   \n        }\n    \n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const deletePost = (id) => async(dispatch) => {\n    try {\n        const {data} = await PostDelete(id) \n        if (data.message.affectedRows > 0) {\n            const Data = await getPost()\n            const allPost = Data.data\n            let i\n            for (let index = 0; index < allPost.length; index++) {\n                if (allPost[index].id === id) {\n                    i = index\n                }\n            }\n            if (i > -1) {\n                allPost.splice(i,1)\n            }\n            console.log(allPost);\n            return dispatch({type:'deletepost', payload:allPost})\n        }\n    } catch (error) {\n        \n    }\n}\n\nexport const UpdatePost = (post_id, info, title, category) => async(dispatch) => {\n    try {\n        const {data} = await updateP(post_id, info, title, category)\n        console.log(data);\n        if (data.message === 'You update your post') {\n            const Data = await PostByid(post_id)\n            return dispatch({type:'updatepost', payload:Data.data.result})\n        }\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const UpdateComment = (id,post_id,content) => async(dispatch) => {\n    try {\n        const {data} = await PatchComment(id,content)\n        if (data.result.affectedRows > 0) {\n            const Data = await getCommentsOnPost(post_id)\n            return dispatch({type:'updatecomment', payload:Data.data.result})\n        }\n    } catch (error) {\n        alert(\"It`s not your comment\")\n    }\n}\n\nexport const deleteLikeFromPost = (id) => async(dispatch) => {\n    try {\n        const {data} = await deletelike(id)\n        if (data.result.affectedRows>0) {\n            const Data = await getLikesFromPost(id)            \n            dispatch({type:'deletelike', payload:Data.data.result})\n        }\n    } catch (error) {\n        console.log(error);\n    }\n}"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,YAAlC,QAAsD,oBAAtD;AACA,SAASC,oBAAT,EAA+BC,UAA/B,EAA2CC,UAA3C,EAAuDC,UAAvD,EAAmEC,WAAnE,EAAgFC,iBAAhF,EAAmGC,gBAAnG,EAAqHC,OAArH,EAA8HC,WAA9H,EAA2IC,QAA3I,EAAqJC,UAArJ,EAAiKC,OAAjK,QAAgL,gBAAhL;AAGA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAmB;EAC7C,IAAI;IACA,MAAM;MAACC;IAAD,IAAQ,MAAMP,OAAO,EAA3B;IACA,OAAOM,QAAQ,CAAC;MAACE,IAAI,EAAC,UAAN;MAAkBC,OAAO,EAACF;IAA1B,CAAD,CAAf;EACH,CAHD,CAGE,OAAOG,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAPM;AASP,OAAO,MAAMG,kBAAkB,GAAIC,EAAD,IAAQ,MAAMR,QAAN,IAAmB;EACzD,IAAI;IACA,IAAIQ,EAAE,KAAK,KAAX,EAAkB;MACd,MAAMC,IAAI,GAAG,MAAMf,OAAO,EAA1B;MACA,OAAOM,QAAQ,CAAC;QAACE,IAAI,EAAC,oBAAN;QAA4BC,OAAO,EAAEM,IAAI,CAACR;MAA1C,CAAD,CAAf;IACH,CAHD,MAIK;MACD,MAAM;QAACA;MAAD,IAAS,MAAMN,WAAW,CAACa,EAAD,CAAhC;;MACA,IAAIP,IAAI,CAACS,MAAT,EAAiB;QACb,MAAMD,IAAI,GAAG,MAAMf,OAAO,EAA1B;QACA,IAAIiB,OAAO,GAAG,EAAd;;QACA,KAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGH,IAAI,CAACR,IAAL,CAAUY,MAAtC,EAA8CD,KAAK,EAAnD,EAAuD;UACnD,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,IAAI,CAACS,MAAL,CAAYG,MAAhC,EAAwCC,CAAC,EAAzC,EAA6C;YACzC,IAAIL,IAAI,CAACR,IAAL,CAAUW,KAAV,EAAiBJ,EAAjB,KAAwBP,IAAI,CAACS,MAAL,CAAYI,CAAZ,EAAeC,OAA3C,EAAoD;cAChDJ,OAAO,CAACK,IAAR,CAAaP,IAAI,CAACR,IAAL,CAAUW,KAAV,CAAb;YACH;UACJ;QACJ;;QACD,OAAOZ,QAAQ,CAAC;UAACE,IAAI,EAAC,oBAAN;UAA4BC,OAAO,EAAEQ;QAArC,CAAD,CAAf;MACH;IACJ;EACJ,CApBD,CAoBE,OAAOP,KAAP,EAAc;IACZJ,QAAQ,CAAC;MAACE,IAAI,EAAC,oBAAN;MAA4BC,OAAO,EAAE;IAArC,CAAD,CAAR;IACAE,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAzBM;AA2BP,OAAO,MAAMa,QAAQ,GAAIT,EAAD,IAAQ,MAAMR,QAAN,IAAmB;EAC/C,IAAI;IACA,MAAM;MAACC;IAAD,IAAS,MAAMR,gBAAgB,CAACe,EAAD,CAArC;IACA,OAAOR,QAAQ,CAAC;MAACE,IAAI,EAAC,UAAN;MAAkBC,OAAO,EAACF,IAAI,CAACS;IAA/B,CAAD,CAAf;EACH,CAHD,CAGE,OAAON,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAPM;AASP,OAAO,MAAMc,WAAW,GAAIV,EAAD,IAAQ,MAAMR,QAAN,IAAmB;EAClD,IAAI;IACA,MAAM;MAACC;IAAD,IAAS,MAAML,QAAQ,CAACY,EAAD,CAA7B;IACA,OAAOR,QAAQ,CAAC;MAACE,IAAI,EAAC,aAAN;MAAqBC,OAAO,EAACF,IAAI,CAACS;IAAlC,CAAD,CAAf;EACH,CAHD,CAGE,OAAON,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAPM;AASP,OAAO,MAAMe,mBAAmB,GAAIX,EAAD,IAAQ,MAAMR,QAAN,IAAmB;EAC1D,IAAI;IACA,MAAM;MAACC;IAAD,IAAS,MAAMhB,QAAQ,CAACuB,EAAD,CAA7B;IACA,OAAOR,QAAQ,CAAC;MAACE,IAAI,EAAC,UAAN;MAAkBC,OAAO,EAACF,IAAI,CAACS;IAA/B,CAAD,CAAf;EACH,CAHD,CAGE,OAAON,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAPM;AASP,OAAO,MAAMgB,WAAW,GAAIZ,EAAD,IAAQ,MAAMR,QAAN,IAAmB;EAClD,IAAI;IACA,MAAM;MAACC;IAAD,IAAS,MAAMT,iBAAiB,CAACgB,EAAD,CAAtC;IACA,OAAOR,QAAQ,CAAC;MAACE,IAAI,EAAC,mBAAN;MAA2BC,OAAO,EAACF;IAAnC,CAAD,CAAf;EACH,CAHD,CAGE,OAAOG,KAAP,EAAc;IACZ,OAAOJ,QAAQ,CAAC;MAACE,IAAI,EAAC,mBAAN;MAA2BC,OAAO,EAAC;IAAnC,CAAD,CAAf;IACAE,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CARM;AAUP,OAAO,MAAMiB,WAAW,GAAIb,EAAD,IAAQ,MAAMR,QAAN,IAAmB;EAClD,IAAI;IACA,MAAM;MAACC;IAAD,IAAS,MAAMV,WAAW,CAACiB,EAAD,CAAhC;IACA,OAAOR,QAAQ,CAAC;MAACE,IAAI,EAAE,aAAP;MAAsBC,OAAO,EAACF,IAAI,CAACS;IAAnC,CAAD,CAAf;EACH,CAHD,CAGE,OAAON,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAPM;AASP,OAAO,MAAMkB,aAAa,GAAG,CAACd,EAAD,EAAKe,OAAL,KAAiB,MAAMvB,QAAN,IAAmB;EAC7D,IAAI;IACA,MAAM;MAACC;IAAD,IAAS,MAAMd,oBAAoB,CAACqB,EAAD,EAAIe,OAAJ,CAAzC;IACAlB,OAAO,CAACC,GAAR,CAAYL,IAAZ;;IAEA,IAAIA,IAAI,CAACS,MAAL,CAAYc,YAAZ,GAA2B,CAA/B,EAAkC;MAC9B,MAAMf,IAAI,GAAG,MAAMjB,iBAAiB,CAACgB,EAAD,CAApC;;MACA,IAAIC,IAAI,CAACR,IAAL,CAAUY,MAAV,KAAqB,CAAzB,EAA4B;QACxB,OAAOb,QAAQ,CAAC;UAACE,IAAI,EAAC,sBAAN;UAA8BC,OAAO,EAAC;QAAtC,CAAD,CAAf;MACH;;MACD,OAAOH,QAAQ,CAAC;QAACE,IAAI,EAAC,sBAAN;QAA8BC,OAAO,EAACM,IAAI,CAACR,IAAL,CAAUS;MAAhD,CAAD,CAAf;IACH;EACJ,CAXD,CAWE,OAAON,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAfM;AAiBP,OAAO,MAAMqB,UAAU,GAAG,CAACC,KAAD,EAAOC,IAAP,EAAYC,QAAZ,KAAyB,MAAM5B,QAAN,IAAmB;EAClE,IAAI;IACA,MAAM;MAACC;IAAD,IAAS,MAAMZ,UAAU,CAACqC,KAAD,EAAOC,IAAP,EAAYC,QAAZ,CAA/B;IACA,MAAMnB,IAAI,GAAG,MAAMf,OAAO,EAA1B;IACAW,OAAO,CAACC,GAAR,CAAYG,IAAZ;IACA,OAAOT,QAAQ,CAAC;MAACE,IAAI,EAAC,YAAN;MAAoBC,OAAO,EAACM,IAAI,CAACR;IAAjC,CAAD,CAAf;EACH,CALD,CAKE,OAAOG,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CATM;AAWP,OAAO,MAAMyB,QAAQ,GAAG,CAACrB,EAAD,EAAIsB,YAAJ,KAAqB,MAAM9B,QAAN,IAAmB;EAC5D,IAAI;IACA,MAAM;MAACC;IAAD,IAAS,MAAMb,UAAU,CAACoB,EAAD,EAAIsB,YAAJ,CAA/B;;IACA,IAAI7B,IAAI,CAACS,MAAL,CAAYc,YAAZ,GAA2B,CAA/B,EAAkC;MAC9B,MAAMf,IAAI,GAAG,MAAMhB,gBAAgB,CAACe,EAAD,CAAnC;MACAR,QAAQ,CAAC;QAACE,IAAI,EAAC,UAAN;QAAkBC,OAAO,EAACM,IAAI,CAACR,IAAL,CAAUS;MAApC,CAAD,CAAR;IACH;EACJ,CAND,CAME,OAAON,KAAP,EAAc;IACZ2B,KAAK,CAAC,wBAAD,CAAL;EACH;AACJ,CAVM;AAYP,OAAO,MAAMC,YAAY,GAAG,CAACxB,EAAD,EAAIO,OAAJ,KAAgB,MAAMf,QAAN,IAAmB;EAC3D,IAAI;IACA,MAAMS,IAAI,GAAG,MAAMjB,iBAAiB,CAACuB,OAAD,CAApC;;IACA,IAAIN,IAAI,CAACR,IAAL,CAAUS,MAAV,CAAiBG,MAAjB,KAA4B,CAAhC,EAAmC;MAC/B,MAAM;QAACZ;MAAD,IAAS,MAAMjB,aAAa,CAACwB,EAAD,CAAlC;;MACA,IAAIP,IAAI,CAACS,MAAL,CAAYc,YAAZ,GAA2B,CAA/B,EAAkC;QAC9B,OAAOxB,QAAQ,CAAC;UAACE,IAAI,EAAC,eAAN;UAAsBC,OAAO,EAAC;QAA9B,CAAD,CAAf;MACH;IACJ,CALD,MAMK;MACD,MAAM;QAACF;MAAD,IAAS,MAAMjB,aAAa,CAACwB,EAAD,CAAlC;;MACA,IAAIP,IAAI,CAACS,MAAL,CAAYc,YAAZ,GAA2B,CAA/B,EAAkC;QAC9B,MAAMS,OAAO,GAAG,MAAMzC,iBAAiB,CAACuB,OAAD,CAAvC;QACA,OAAOf,QAAQ,CAAC;UAACE,IAAI,EAAC,eAAN;UAAsBC,OAAO,EAAC8B,OAAO,CAAChC,IAAR,CAAaS;QAA3C,CAAD,CAAf;MACH;IACJ;EAEJ,CAhBD,CAgBE,OAAON,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CApBM;AAsBP,OAAO,MAAM8B,UAAU,GAAI1B,EAAD,IAAQ,MAAMR,QAAN,IAAmB;EACjD,IAAI;IACA,MAAM;MAACC;IAAD,IAAS,MAAMJ,UAAU,CAACW,EAAD,CAA/B;;IACA,IAAIP,IAAI,CAACkC,OAAL,CAAaX,YAAb,GAA4B,CAAhC,EAAmC;MAC/B,MAAMf,IAAI,GAAG,MAAMf,OAAO,EAA1B;MACA,MAAMiB,OAAO,GAAGF,IAAI,CAACR,IAArB;MACA,IAAIa,CAAJ;;MACA,KAAK,IAAIF,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGD,OAAO,CAACE,MAApC,EAA4CD,KAAK,EAAjD,EAAqD;QACjD,IAAID,OAAO,CAACC,KAAD,CAAP,CAAeJ,EAAf,KAAsBA,EAA1B,EAA8B;UAC1BM,CAAC,GAAGF,KAAJ;QACH;MACJ;;MACD,IAAIE,CAAC,GAAG,CAAC,CAAT,EAAY;QACRH,OAAO,CAACyB,MAAR,CAAetB,CAAf,EAAiB,CAAjB;MACH;;MACDT,OAAO,CAACC,GAAR,CAAYK,OAAZ;MACA,OAAOX,QAAQ,CAAC;QAACE,IAAI,EAAC,YAAN;QAAoBC,OAAO,EAACQ;MAA5B,CAAD,CAAf;IACH;EACJ,CAjBD,CAiBE,OAAOP,KAAP,EAAc,CAEf;AACJ,CArBM;AAuBP,OAAO,MAAMiC,UAAU,GAAG,CAACtB,OAAD,EAAUY,IAAV,EAAgBD,KAAhB,EAAuBE,QAAvB,KAAoC,MAAM5B,QAAN,IAAmB;EAC7E,IAAI;IACA,MAAM;MAACC;IAAD,IAAS,MAAMH,OAAO,CAACiB,OAAD,EAAUY,IAAV,EAAgBD,KAAhB,EAAuBE,QAAvB,CAA5B;IACAvB,OAAO,CAACC,GAAR,CAAYL,IAAZ;;IACA,IAAIA,IAAI,CAACkC,OAAL,KAAiB,sBAArB,EAA6C;MACzC,MAAM1B,IAAI,GAAG,MAAMb,QAAQ,CAACmB,OAAD,CAA3B;MACA,OAAOf,QAAQ,CAAC;QAACE,IAAI,EAAC,YAAN;QAAoBC,OAAO,EAACM,IAAI,CAACR,IAAL,CAAUS;MAAtC,CAAD,CAAf;IACH;EACJ,CAPD,CAOE,OAAON,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAXM;AAaP,OAAO,MAAMkC,aAAa,GAAG,CAAC9B,EAAD,EAAIO,OAAJ,EAAYwB,OAAZ,KAAwB,MAAMvC,QAAN,IAAmB;EACpE,IAAI;IACA,MAAM;MAACC;IAAD,IAAS,MAAMf,YAAY,CAACsB,EAAD,EAAI+B,OAAJ,CAAjC;;IACA,IAAItC,IAAI,CAACS,MAAL,CAAYc,YAAZ,GAA2B,CAA/B,EAAkC;MAC9B,MAAMf,IAAI,GAAG,MAAMjB,iBAAiB,CAACuB,OAAD,CAApC;MACA,OAAOf,QAAQ,CAAC;QAACE,IAAI,EAAC,eAAN;QAAuBC,OAAO,EAACM,IAAI,CAACR,IAAL,CAAUS;MAAzC,CAAD,CAAf;IACH;EACJ,CAND,CAME,OAAON,KAAP,EAAc;IACZ2B,KAAK,CAAC,uBAAD,CAAL;EACH;AACJ,CAVM;AAYP,OAAO,MAAMS,kBAAkB,GAAIhC,EAAD,IAAQ,MAAMR,QAAN,IAAmB;EACzD,IAAI;IACA,MAAM;MAACC;IAAD,IAAS,MAAMX,UAAU,CAACkB,EAAD,CAA/B;;IACA,IAAIP,IAAI,CAACS,MAAL,CAAYc,YAAZ,GAAyB,CAA7B,EAAgC;MAC5B,MAAMf,IAAI,GAAG,MAAMhB,gBAAgB,CAACe,EAAD,CAAnC;MACAR,QAAQ,CAAC;QAACE,IAAI,EAAC,YAAN;QAAoBC,OAAO,EAACM,IAAI,CAACR,IAAL,CAAUS;MAAtC,CAAD,CAAR;IACH;EACJ,CAND,CAME,OAAON,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAVM"},"metadata":{},"sourceType":"module"}