{"ast":null,"code":"var _jsxFileName = \"/home/firemort/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Fullstack/back-front/idashchenk/clients/src/components/pages/Homepage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { createPost, getPosts } from \"../../action/PostAction\";\nimport style from \"../style/Homepage.module.css\";\nimport moment from 'moment';\nimport { getCategories } from \"../../action/CategoryAction\";\nimport Category from \"./PostComponents/GetCategory\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HomePage = () => {\n  _s();\n\n  let posts;\n  const history = useHistory();\n  let [category, setCategory] = useState('');\n  let [title, setTitle] = useState('');\n  let [content, setContent] = useState('');\n  let [currentPage, setCurrentPage] = useState(1);\n  const dispatch = useDispatch();\n  const data = useSelector(state => state.Post);\n  const auth = useSelector(store => store.Auth);\n  const categorySelector = useSelector(store => store.Category);\n  const token = auth.token;\n  useEffect(() => {\n    dispatch(getPosts());\n    dispatch(getCategories());\n  }, [dispatch]);\n  let categorie = categorySelector.categories;\n  posts = data.allPost;\n\n  if (posts === undefined) {\n    posts = [];\n  }\n\n  if (categorie.length === 0) {\n    categorie = [];\n  } else {\n    ppost = posts;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: token === '' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.divAllPosts,\n        children: posts.map(pst => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.divPost,\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            className: style.loginHome,\n            onClick: () => {\n              history.push(`/register`);\n            },\n            children: pst.login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.divHref,\n            onClick: () => {\n              history.push(`/register`);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: style.titlePost,\n              children: [\"Title: \", pst.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: style.contentPost,\n              children: pst.info\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: style.timePost,\n              children: moment(pst.time).fromNow()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this)]\n        }, pst.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.divAllPosts,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => dispatch({\n              type: e.target.value,\n              payload: posts\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 'sortbytime',\n              children: \"Sort posts by time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 'sortbyauthor',\n              children: \"Sort posts by author\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), posts.map(pst => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.divPost,\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            className: style.loginHome,\n            onClick: () => {\n              history.push(`/user/${pst.user_id}`);\n            },\n            children: pst.login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.divHref,\n            onClick: () => {\n              history.push(`/post/${pst.id}`);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: style.titlePost,\n              children: [\"Title: \", pst.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: style.contentPost,\n              children: pst.info\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: style.timePost,\n              children: moment(pst.time).fromNow()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this)]\n        }, pst.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => setCategory(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select category of post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this), categorie.map(categor => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: categor.title,\n              children: categor.title\n            }, categor.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            placeholder: \"Enter title of your post\",\n            autoFocus: true,\n            value: title,\n            onChange: e => setTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"content\",\n            placeholder: \"Enter description on your post\",\n            autoFocus: true,\n            value: content,\n            onChange: e => setContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              dispatch(createPost(title, content, category));\n            },\n            children: \"Create post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_s(HomePage, \"2xpDD5Qpo5wYjt/9/zrvjvLWYh8=\", false, function () {\n  return [useHistory, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","Link","useHistory","createPost","getPosts","style","moment","getCategories","Category","HomePage","posts","history","category","setCategory","title","setTitle","content","setContent","currentPage","setCurrentPage","dispatch","data","state","Post","auth","store","Auth","categorySelector","token","categorie","categories","allPost","undefined","length","ppost","divAllPosts","map","pst","divPost","loginHome","push","login","divHref","titlePost","contentPost","info","timePost","time","fromNow","id","e","type","target","value","payload","user_id","categor"],"sources":["/home/firemort/Рабочий стол/Fullstack/back-front/idashchenk/clients/src/components/pages/Homepage.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { createPost, getPosts } from \"../../action/PostAction\";\nimport style from \"../style/Homepage.module.css\"\nimport moment from 'moment'\nimport { getCategories } from \"../../action/CategoryAction\";\nimport Category from \"./PostComponents/GetCategory\";\n\nconst HomePage = () => {\n    let posts  \n    const history = useHistory()\n    let [category, setCategory] = useState('')\n    let [title, setTitle] = useState('')\n    let [content, setContent] = useState('')\n    let [currentPage, setCurrentPage] = useState(1)\n    const dispatch = useDispatch()\n    \n    const data = useSelector(state => state.Post)\n    const auth = useSelector(store => store.Auth)\n    const categorySelector = useSelector(store => store.Category)\n    const token = auth.token\n\n    useEffect(() => {\n        dispatch(getPosts())\n        dispatch(getCategories())\n    },[dispatch])\n    let categorie = categorySelector.categories\n    posts = data.allPost\n    if (posts === undefined) {\n        posts = []\n    }\n    if (categorie.length === 0) {\n        categorie = []\n    }\n    else {\n        ppost = posts\n        return (\n            <>\n                {token === '' ? \n                     <div className={style.divAllPosts}>\n                        {posts.map((pst) => \n                            <div className ={style.divPost} key={pst.id}>\n                                <a className={style.loginHome} onClick = {() => {history.push(`/register`)}}>{pst.login}</a>\n                                <div className={style.divHref} onClick={()=>{history.push(`/register`)}}>\n                                <p className={style.titlePost}>Title: {pst.title}</p>\n                                <p className={style.contentPost}>{pst.info}</p>\n                                <p className={style.timePost}>{moment(pst.time).fromNow()}</p>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                    :\n                    <div className={style.divAllPosts}>\n                        <div>\n                            <select onChange={ e => dispatch({type:e.target.value, payload:posts})}>\n                                <option value={''}></option>\n                                <option value={'sortbytime'}>Sort posts by time</option>\n                                <option value={'sortbyauthor'}>Sort posts by author</option>\n                            </select>\n                        </div>\n                        {posts.map((pst) => \n                            <div className ={style.divPost} key={pst.id}>\n                                <a className={style.loginHome} onClick = {() => {history.push(`/user/${pst.user_id}`)}}>{pst.login}</a>\n                                <div className={style.divHref} onClick={()=>{history.push(`/post/${pst.id}`)}}>\n                                <p className={style.titlePost}>Title: {pst.title}</p>\n                                <p className={style.contentPost}>{pst.info}</p>\n                                <p className={style.timePost}>{moment(pst.time).fromNow()}</p>\n                                </div>\n                            </div>\n                        )}\n                        <div>\n                            <select onChange={ e => setCategory(e.target.value)}>\n                                <option value=''>Select category of post</option>\n                                {categorie.map( (categor) => \n                                    <option value={categor.title} key={categor.id}>{categor.title}</option>\n                                )}\n                            </select>\n                            <input type='text' name=\"title\" \n                            placeholder=\"Enter title of your post\" autoFocus\n                            value={title} onChange={e => setTitle(e.target.value)}\n                            >    \n                            </input>\n                            <input type='text' name=\"content\" \n                            placeholder=\"Enter description on your post\" autoFocus \n                            value={content} onChange={e => setContent(e.target.value)}>\n                            </input>\n                            <button onClick={ () => {dispatch(createPost(title, content, category))}}>Create post</button>\n                        </div>\n    \n                    </div>\n                }\n            </>\n        )\n    }\n    \n}\n\nexport default HomePage"],"mappings":"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"},"metadata":{},"sourceType":"module"}