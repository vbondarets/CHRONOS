{"ast":null,"code":"import { createevent, getEventId, getEvents, getLatestEvents } from \"../api/EventApi\";\nexport const getAllEventByCalendar = calendar_id => async dispatch => {\n  try {\n    const {\n      data\n    } = await getEvents(calendar_id);\n    console.log(data);\n    return dispatch({\n      type: 'getEvets',\n      payload: data.result\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getEventById = event_id => async dispatch => {\n  try {\n    const {\n      data\n    } = await getEventId(event_id);\n    console.log(data);\n    return dispatch({\n      type: 'getEventById',\n      payload: data.result\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getNewestEventsByUser_id = user_id => async dispatch => {\n  try {\n    const {\n      data\n    } = await getLatestEvents(user_id);\n    return dispatch({\n      type: 'getLatestEvents',\n      payload: data.result\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const CreateEvent = (title, description, type, color, start_at, end_at, calendar_id) => async dispatch => {\n  try {\n    const {\n      data\n    } = await createevent(title, description, type, color, start_at, end_at, calendar_id);\n\n    if (data.result.affectedRows > 0) {\n      const Data = await getEvents(calendar_id);\n      return dispatch({\n        type: 'createEvent',\n        payload: Data.data.result\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const SortByType = (calendar_id, type) => async dispatch => {\n  try {\n    const {\n      data\n    } = await getEvents(calendar_id);\n    console.log(calendar_id);\n    console.log(type);\n    const sorted = [];\n    const events = data.result;\n    console.log(events);\n\n    for (let index = 0; index < events.result; index++) {\n      if (events[index].type.toString() == type) {\n        sorted.push(events[index]);\n      }\n    }\n\n    console.log(sorted);\n    return dispatch({\n      type: 'sortbyType',\n      payload: sorted\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["createevent","getEventId","getEvents","getLatestEvents","getAllEventByCalendar","calendar_id","dispatch","data","console","log","type","payload","result","error","getEventById","event_id","getNewestEventsByUser_id","user_id","CreateEvent","title","description","color","start_at","end_at","affectedRows","Data","SortByType","sorted","events","index","toString","push"],"sources":["/home/firemort/Рабочий стол/Fullstack/CHRONOS/Chronos2/CHRONOS/clients/src/action/EventAction.js"],"sourcesContent":["import { createevent, getEventId, getEvents, getLatestEvents } from \"../api/EventApi\";\n\nexport const getAllEventByCalendar = (calendar_id) => async(dispatch) => {\n    try {\n        const {data} = await getEvents(calendar_id)\n        console.log(data);\n        return dispatch({type:'getEvets', payload:data.result})\n    } catch (error) {\n        console.log(error);\n    }\n}\nexport const getEventById = (event_id) => async(dispatch) => {\n    try {\n       const {data} = await getEventId(event_id)\n       console.log(data);\n       return dispatch({type:'getEventById', payload: data.result}) \n    } catch (error) {\n        console.log(error);\n    }\n}\nexport const getNewestEventsByUser_id = (user_id) => async(dispatch)=> {\n    try {\n        const {data} = await getLatestEvents(user_id)\n        return dispatch({type:'getLatestEvents', payload:data.result})\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const CreateEvent = (title, description, type, color, start_at, end_at, calendar_id) => async(dispatch) => {\n    try {\n        const {data} = await createevent(title, description, type, color, start_at, end_at, calendar_id)\n        if (data.result.affectedRows > 0) {\n            const Data = await getEvents(calendar_id)\n            return dispatch({type:'createEvent', payload: Data.data.result})\n        }\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const SortByType = (calendar_id, type) => async(dispatch) => {\n    try {\n        const {data} = await getEvents(calendar_id)\n        console.log(calendar_id);\n        console.log(type);\n        const sorted = []\n        const events = data.result\n        console.log(events);\n        for (let index = 0; index < events.result; index++) {\n            if (events[index].type.toString() == type) {\n                sorted.push(events[index])\n            }\n        }\n        console.log(sorted);\n        return dispatch({type:'sortbyType', payload:sorted})\n    } catch (error) {\n        console.log(error);\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}