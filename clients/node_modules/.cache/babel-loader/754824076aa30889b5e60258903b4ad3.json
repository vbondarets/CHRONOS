{"ast":null,"code":"import { observable } from \"mobx\";\nimport { useState } from \"react\";\nexport function useLocalObservable(initializer, annotations) {\n  return useState(function () {\n    return observable(initializer(), annotations, {\n      autoBind: true\n    });\n  })[0];\n}","map":{"version":3,"mappings":"AAAA,SAASA,UAAT,QAA2C,MAA3C;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAM,SAAUC,kBAAV,CACFC,WADE,EAEFC,WAFE,EAEyC;EAE3C,OAAOH,QAAQ,CAAC;IAAM,iBAAU,CAACE,WAAW,EAAZ,EAAgBC,WAAhB,EAA6B;MAAEC,QAAQ,EAAE;IAAZ,CAA7B,CAAV;EAA0D,CAAjE,CAAR,CAA2E,CAA3E,CAAP;AACH","names":["observable","useState","useLocalObservable","initializer","annotations","autoBind"],"sources":["/home/firemort/Рабочий стол/Fullstack/chronos/idashchenk/clients/node_modules/mobx-react-lite/src/useLocalObservable.ts"],"sourcesContent":["import { observable, AnnotationsMap } from \"mobx\"\nimport { useState } from \"react\"\n\nexport function useLocalObservable<TStore extends Record<string, any>>(\n    initializer: () => TStore,\n    annotations?: AnnotationsMap<TStore, never>\n): TStore {\n    return useState(() => observable(initializer(), annotations, { autoBind: true }))[0]\n}\n"]},"metadata":{},"sourceType":"module"}