{"ast":null,"code":"var _jsxFileName = \"/home/firemort/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Fullstack/back-front/idashchenk/clients/src/components/pages/ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Reset_Password } from \"../../action/AuthAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ResetPassword = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  let [email, setEmail] = useState('');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      autoFocus: true,\n      required: true,\n      value: email,\n      type: \"email\",\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        dispatch(Reset_Password(email));\n      },\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ResetPassword, \"ACEaD/YK53cx0THoE73BHqzIfGw=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useDispatch","Reset_Password","ResetPassword","dispatch","email","setEmail","e","target","value"],"sources":["/home/firemort/Рабочий стол/Fullstack/back-front/idashchenk/clients/src/components/pages/ResetPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {Reset_Password } from \"../../action/AuthAction\";\n\nconst ResetPassword = () => {\n    const dispatch = useDispatch()\n    let [email, setEmail] = useState('')\n    return (\n        <>\n            <input autoFocus required \n                value = {email} type=\"email\"\n                onChange={ e => setEmail(e.target.value)} />\n            <button onClick={ () => {dispatch(Reset_Password(email))}}>Reset Password</button>\n        </>\n    )\n}\n\nexport default ResetPassword"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAAQC,cAAR,QAA8B,yBAA9B;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;EAAA;;EACxB,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;EACA,IAAI,CAACI,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAhC;EACA,oBACI;IAAA,wBACI;MAAO,SAAS,MAAhB;MAAiB,QAAQ,MAAzB;MACI,KAAK,EAAIK,KADb;MACoB,IAAI,EAAC,OADzB;MAEI,QAAQ,EAAGE,CAAC,IAAID,QAAQ,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV;IAF5B;MAAA;MAAA;MAAA;IAAA,QADJ,eAII;MAAQ,OAAO,EAAG,MAAM;QAACL,QAAQ,CAACF,cAAc,CAACG,KAAD,CAAf,CAAR;MAAgC,CAAzD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA,gBADJ;AAQH,CAXD;;GAAMF,a;UACeF,W;;;KADfE,a;AAaN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}