{"ast":null,"code":"var _jsxFileName = \"/home/firemort/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Fullstack/CHRONOS/Chronos2/CHRONOS/clients/src/components/forms/EventForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport MyButton from '../UI/button/MyButton';\nimport MyInput from '../UI/input/MyInput';\nimport MySelect from '../UI/select/MySelect';\nimport moment from 'moment';\nimport { SketchPicker, ChromePicker } from 'react-color';\nimport { CreateEvent } from '../../action/EventAction';\nimport { TimePicker } from '@mui/x-date-pickers/TimePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EventForm = _ref => {\n  _s();\n\n  let {\n    date,\n    calendar_id\n  } = _ref;\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [color, setColor] = useState('#4169e1');\n  const [time, setTime] = useState('00:00');\n  let exactTime = moment(time.valueOf()).format('HH:mm');\n  const [category, setCatigory] = useState('');\n  const dispatch = useDispatch();\n\n  const sendReq = e => {\n    e.preventDefault();\n    const exactDate = date + ' ' + exactTime;\n    console.log(exactDate);\n    dispatch(CreateEvent(title, description, category, color, exactDate, calendar_id));\n  };\n\n  const handleChangeComplete = (color, event) => {\n    setColor(color.hex);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      type: \"text\",\n      placeholder: \"Event title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      type: \"text\",\n      placeholder: \"Event description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n      value: category,\n      defaultValue: \"Choose category\",\n      options: categories.map(el => {\n        return {\n          value: el,\n          name: el\n        };\n      }),\n      onChange: selectedCategory => setCatigory(selectedCategory)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n      value: color,\n      onChange: e => setColor(e.target.value),\n      type: \"text\",\n      placeholder: \"Event color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChromePicker, {\n      color: color,\n      onChangeComplete: handleChangeComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n      dateAdapter: AdapterDayjs,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 3,\n        children: /*#__PURE__*/_jsxDEV(TimePicker, {\n          ampm: false,\n          minutesStep: 5,\n          value: time,\n          onChange: setTime,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: e => sendReq(e),\n      children: \"Create Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        color: color\n      },\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EventForm, \"inubE0m17mYqvQxzekfW8SAnMdk=\", false, function () {\n  return [useDispatch];\n});\n\n_c = EventForm;\nexport default EventForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventForm\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","MyButton","MyInput","MySelect","moment","SketchPicker","ChromePicker","CreateEvent","TimePicker","LocalizationProvider","AdapterDayjs","TextField","Stack","EventForm","date","calendar_id","title","setTitle","description","setDescription","color","setColor","time","setTime","exactTime","valueOf","format","category","setCatigory","dispatch","sendReq","e","preventDefault","exactDate","console","log","handleChangeComplete","event","hex","target","value","categories","map","el","name","selectedCategory","params","errorMessage"],"sources":["/home/firemort/Рабочий стол/Fullstack/CHRONOS/Chronos2/CHRONOS/clients/src/components/forms/EventForm.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport MyButton from '../UI/button/MyButton'\nimport MyInput from '../UI/input/MyInput'\nimport MySelect from '../UI/select/MySelect';\nimport moment from 'moment';\nimport { SketchPicker, ChromePicker } from 'react-color';\nimport { CreateEvent } from '../../action/EventAction';\nimport { TimePicker } from '@mui/x-date-pickers/TimePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\n\n\nconst EventForm = ({ date, calendar_id }) => {\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [color, setColor] = useState('#4169e1');\n    const [time, setTime] = useState('00:00');\n    let exactTime = moment(time.valueOf()).format('HH:mm')\n    const [category, setCatigory] = useState('');\n    const dispatch = useDispatch()\n    const sendReq = (e) => {\n        e.preventDefault();\n        const exactDate = date + ' ' + exactTime\n        console.log(exactDate);\n        dispatch(CreateEvent(title, description, category, color, exactDate, calendar_id))\n    }\n    const handleChangeComplete = (color, event) => {\n        setColor(color.hex);\n    };\n    return (\n        <form>\n            <h1>Event</h1>\n            <MyInput\n                value={title}\n                onChange={e => setTitle(e.target.value)}\n                type=\"text\"\n                placeholder=\"Event title\"\n            />\n            <MyInput\n                value={description}\n                onChange={e => setDescription(e.target.value)}\n                type=\"text\"\n                placeholder=\"Event description\"\n            />\n            <MySelect\n                value={category}\n                defaultValue={\"Choose category\"}\n                options={categories.map(el =>{\n                    return {value: el, name: el}\n                })}\n                onChange={selectedCategory => setCatigory(selectedCategory)}\n            />\n            <MyInput\n                value={color}\n                onChange={e => setColor(e.target.value)}\n                type=\"text\"\n                placeholder=\"Event color\"\n            />\n            <ChromePicker\n                color = {color}\n                onChangeComplete={ handleChangeComplete }\n            />\n            <LocalizationProvider dateAdapter={AdapterDayjs}>\n                <Stack spacing={3}>\n                    <TimePicker\n                        ampm={false}\n                        minutesStep={5}\n                        value={time}\n                        onChange={setTime}\n                        renderInput={(params) => <TextField {...params} />}\n                    />\n                </Stack>\n            </LocalizationProvider>\n            <h2>{errorMessage}</h2>\n            <MyButton onClick={(e) => sendReq(e)}>{\"Create Event\"}</MyButton>\n            <button style={{color: color}}>test</button>\n        </form>\n    )\n}\n\nexport default EventForm;\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}