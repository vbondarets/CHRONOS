{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization'; // maps ClockPickerView to its translation\n\nconst clockViews = {\n  hours: '時間',\n  minutes: '分',\n  seconds: '秒'\n}; // maps PickersToolbar[\"viewType\"] to its translation\n\nconst pickerViews = {\n  calendar: 'カレンダー表示',\n  clock: '時計表示'\n};\nconst jaJPPickers = {\n  // Calendar navigation\n  previousMonth: '先月',\n  nextMonth: '来月',\n  // View navigation\n  openPreviousView: '前の表示を開く',\n  openNextView: '次の表示を開く',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? '年選択表示からカレンダー表示に切り替える' : 'カレンダー表示から年選択表示に切り替える',\n  inputModeToggleButtonAriaLabel: (isKeyboardInputOpen, viewType) => isKeyboardInputOpen ? `テキスト入力表示から${pickerViews[viewType]}に切り替える` : `${pickerViews[viewType]}からテキスト入力表示に切り替える`,\n  // DateRange placeholders\n  start: '開始',\n  end: '終了',\n  // Action bar\n  cancelButtonLabel: 'キャンセル',\n  clearButtonLabel: 'クリア',\n  okButtonLabel: '確定',\n  todayButtonLabel: '今日',\n  // Toolbar titles\n  datePickerDefaultToolbarTitle: '日付を選択',\n  dateTimePickerDefaultToolbarTitle: '日時を選択',\n  timePickerDefaultToolbarTitle: '時間を選択',\n  dateRangePickerDefaultToolbarTitle: '日付の範囲を選択',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => {\n    var _clockViews$view;\n\n    return `${(_clockViews$view = clockViews[view]) != null ? _clockViews$view : view}を選択してください ${time === null ? '時間が選択されていません' : `選択した時間は ${adapter.format(time, 'fullTime')} です`}`;\n  },\n  hoursClockNumberText: hours => `${hours} ${clockViews.hours}`,\n  minutesClockNumberText: minutes => `${minutes} ${clockViews.minutes}`,\n  secondsClockNumberText: seconds => `${seconds} ${clockViews.seconds}`,\n  // Open picker labels\n  openDatePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? `日付を選択してください。選択した日付は ${utils.format(value, 'fullDate')} です` : '日付を選択してください',\n  openTimePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? `時間を選択してください。選択した時間は ${utils.format(value, 'fullTime')} です` : '時間を選択してください',\n  // Table labels\n  timeTableLabel: '時間を選択',\n  dateTableLabel: '日付を選択'\n};\nexport const jaJP = getPickersLocalization(jaJPPickers);","map":{"version":3,"names":["getPickersLocalization","clockViews","hours","minutes","seconds","pickerViews","calendar","clock","jaJPPickers","previousMonth","nextMonth","openPreviousView","openNextView","calendarViewSwitchingButtonAriaLabel","view","inputModeToggleButtonAriaLabel","isKeyboardInputOpen","viewType","start","end","cancelButtonLabel","clearButtonLabel","okButtonLabel","todayButtonLabel","datePickerDefaultToolbarTitle","dateTimePickerDefaultToolbarTitle","timePickerDefaultToolbarTitle","dateRangePickerDefaultToolbarTitle","clockLabelText","time","adapter","_clockViews$view","format","hoursClockNumberText","minutesClockNumberText","secondsClockNumberText","openDatePickerDialogue","value","utils","isValid","openTimePickerDialogue","timeTableLabel","dateTableLabel","jaJP"],"sources":["/home/firemort/Рабочий стол/Fullstack/CHRONOS/Chronos2/CHRONOS/clients/node_modules/@mui/x-date-pickers/locales/jaJP.js"],"sourcesContent":["import { getPickersLocalization } from './utils/getPickersLocalization';\n// maps ClockPickerView to its translation\nconst clockViews = {\n  hours: '時間',\n  minutes: '分',\n  seconds: '秒'\n}; // maps PickersToolbar[\"viewType\"] to its translation\n\nconst pickerViews = {\n  calendar: 'カレンダー表示',\n  clock: '時計表示'\n};\nconst jaJPPickers = {\n  // Calendar navigation\n  previousMonth: '先月',\n  nextMonth: '来月',\n  // View navigation\n  openPreviousView: '前の表示を開く',\n  openNextView: '次の表示を開く',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? '年選択表示からカレンダー表示に切り替える' : 'カレンダー表示から年選択表示に切り替える',\n  inputModeToggleButtonAriaLabel: (isKeyboardInputOpen, viewType) => isKeyboardInputOpen ? `テキスト入力表示から${pickerViews[viewType]}に切り替える` : `${pickerViews[viewType]}からテキスト入力表示に切り替える`,\n  // DateRange placeholders\n  start: '開始',\n  end: '終了',\n  // Action bar\n  cancelButtonLabel: 'キャンセル',\n  clearButtonLabel: 'クリア',\n  okButtonLabel: '確定',\n  todayButtonLabel: '今日',\n  // Toolbar titles\n  datePickerDefaultToolbarTitle: '日付を選択',\n  dateTimePickerDefaultToolbarTitle: '日時を選択',\n  timePickerDefaultToolbarTitle: '時間を選択',\n  dateRangePickerDefaultToolbarTitle: '日付の範囲を選択',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => {\n    var _clockViews$view;\n\n    return `${(_clockViews$view = clockViews[view]) != null ? _clockViews$view : view}を選択してください ${time === null ? '時間が選択されていません' : `選択した時間は ${adapter.format(time, 'fullTime')} です`}`;\n  },\n  hoursClockNumberText: hours => `${hours} ${clockViews.hours}`,\n  minutesClockNumberText: minutes => `${minutes} ${clockViews.minutes}`,\n  secondsClockNumberText: seconds => `${seconds} ${clockViews.seconds}`,\n  // Open picker labels\n  openDatePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? `日付を選択してください。選択した日付は ${utils.format(value, 'fullDate')} です` : '日付を選択してください',\n  openTimePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? `時間を選択してください。選択した時間は ${utils.format(value, 'fullTime')} です` : '時間を選択してください',\n  // Table labels\n  timeTableLabel: '時間を選択',\n  dateTableLabel: '日付を選択'\n};\nexport const jaJP = getPickersLocalization(jaJPPickers);"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,gCAAvC,C,CACA;;AACA,MAAMC,UAAU,GAAG;EACjBC,KAAK,EAAE,IADU;EAEjBC,OAAO,EAAE,GAFQ;EAGjBC,OAAO,EAAE;AAHQ,CAAnB,C,CAIG;;AAEH,MAAMC,WAAW,GAAG;EAClBC,QAAQ,EAAE,SADQ;EAElBC,KAAK,EAAE;AAFW,CAApB;AAIA,MAAMC,WAAW,GAAG;EAClB;EACAC,aAAa,EAAE,IAFG;EAGlBC,SAAS,EAAE,IAHO;EAIlB;EACAC,gBAAgB,EAAE,SALA;EAMlBC,YAAY,EAAE,SANI;EAOlBC,oCAAoC,EAAEC,IAAI,IAAIA,IAAI,KAAK,MAAT,GAAkB,sBAAlB,GAA2C,sBAPvE;EAQlBC,8BAA8B,EAAE,CAACC,mBAAD,EAAsBC,QAAtB,KAAmCD,mBAAmB,GAAI,aAAYX,WAAW,CAACY,QAAD,CAAW,QAAtC,GAAiD,GAAEZ,WAAW,CAACY,QAAD,CAAW,kBAR7I;EASlB;EACAC,KAAK,EAAE,IAVW;EAWlBC,GAAG,EAAE,IAXa;EAYlB;EACAC,iBAAiB,EAAE,OAbD;EAclBC,gBAAgB,EAAE,KAdA;EAelBC,aAAa,EAAE,IAfG;EAgBlBC,gBAAgB,EAAE,IAhBA;EAiBlB;EACAC,6BAA6B,EAAE,OAlBb;EAmBlBC,iCAAiC,EAAE,OAnBjB;EAoBlBC,6BAA6B,EAAE,OApBb;EAqBlBC,kCAAkC,EAAE,UArBlB;EAsBlB;EACAC,cAAc,EAAE,CAACd,IAAD,EAAOe,IAAP,EAAaC,OAAb,KAAyB;IACvC,IAAIC,gBAAJ;;IAEA,OAAQ,GAAE,CAACA,gBAAgB,GAAG9B,UAAU,CAACa,IAAD,CAA9B,KAAyC,IAAzC,GAAgDiB,gBAAhD,GAAmEjB,IAAK,aAAYe,IAAI,KAAK,IAAT,GAAgB,cAAhB,GAAkC,WAAUC,OAAO,CAACE,MAAR,CAAeH,IAAf,EAAqB,UAArB,CAAiC,KAAK,EAAhL;EACD,CA3BiB;EA4BlBI,oBAAoB,EAAE/B,KAAK,IAAK,GAAEA,KAAM,IAAGD,UAAU,CAACC,KAAM,EA5B1C;EA6BlBgC,sBAAsB,EAAE/B,OAAO,IAAK,GAAEA,OAAQ,IAAGF,UAAU,CAACE,OAAQ,EA7BlD;EA8BlBgC,sBAAsB,EAAE/B,OAAO,IAAK,GAAEA,OAAQ,IAAGH,UAAU,CAACG,OAAQ,EA9BlD;EA+BlB;EACAgC,sBAAsB,EAAE,CAACC,KAAD,EAAQC,KAAR,KAAkBD,KAAK,KAAK,IAAV,IAAkBC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAlB,GAA0C,uBAAsBC,KAAK,CAACN,MAAN,CAAaK,KAAb,EAAoB,UAApB,CAAgC,KAAhG,GAAuG,aAhC/H;EAiClBG,sBAAsB,EAAE,CAACH,KAAD,EAAQC,KAAR,KAAkBD,KAAK,KAAK,IAAV,IAAkBC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAlB,GAA0C,uBAAsBC,KAAK,CAACN,MAAN,CAAaK,KAAb,EAAoB,UAApB,CAAgC,KAAhG,GAAuG,aAjC/H;EAkClB;EACAI,cAAc,EAAE,OAnCE;EAoClBC,cAAc,EAAE;AApCE,CAApB;AAsCA,OAAO,MAAMC,IAAI,GAAG3C,sBAAsB,CAACQ,WAAD,CAAnC"},"metadata":{},"sourceType":"module"}