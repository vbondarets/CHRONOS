{"ast":null,"code":"var _jsxFileName = \"/home/firemort/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Fullstack/back-front/idashchenk/clients/src/components/pages/PostComponents/GetComment.js\",\n    _s = $RefreshSig$();\n\nimport jwt_decode from \"jwt-decode\";\nimport moment from \"moment\";\nimport React, { createElement, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeletComment, getComments, getLikesFromComment, UpdateComment } from \"../../../action/PostAction\";\nimport style from '../../style/PostPage.module.css';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentsForPost = props => {\n  _s();\n\n  const history = useHistory();\n  let [comment, setComment] = useState('');\n  let [index, setIndex] = useState(0);\n  let [indexOfLike, setIndexOfLike] = useState(0);\n  let [comment_id, setCommentid] = useState(0);\n  const auth = useSelector(state => state.Auth);\n  const commentSelector = useSelector(state => state.Comment);\n  const token = auth.token;\n  const decode = jwt_decode(token);\n  const user_id = decode.id;\n  const {\n    post_id,\n    comments\n  } = props;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getComments(post_id));\n  }, [dispatch]);\n  let likes = commentSelector.likes;\n\n  if (likes === undefined) {\n    likes = [];\n  }\n\n  if (comments === undefined) {\n    comments = [];\n  }\n\n  if (comments.length === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"No Comments yet\"\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: comments.map(cmnt => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.Comment,\n        onClick: () => {\n          if (indexOfLike === 0) {\n            dispatch(getLikesFromComment(cmnt.id));\n            setIndexOfLike(1);\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: style.loginHome,\n          onClick: () => {\n            history.push(`/user/${cmnt.user_id}`);\n          },\n          children: cmnt.login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.Commentcontent,\n          children: cmnt.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), user_id === cmnt.user_id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (index === 0) {\n                setIndex(1);\n                setCommentid(cmnt.id);\n              } else if (index === 1) {\n                setIndex(0);\n                dispatch(UpdateComment(cmnt.id, post_id, comment));\n              }\n\n              console.log(index);\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), index === 1 ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"How u wanna edit comment\",\n            value: comment,\n            onChange: e => setComment(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 40\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              dispatch(DeletComment(cmnt.id, post_id));\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), indexOfLike === 1 && likes[0].comment_id === cmnt.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: likes.length\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: style.Commenttime,\n          children: moment(cmnt.time).fromNow()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, cmnt.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this))\n    }, void 0, false);\n  }\n};\n\n_s(CommentsForPost, \"ZR20PQkx+VCpSGzlz3Vk3jR1Lu4=\", false, function () {\n  return [useHistory, useSelector, useSelector, useDispatch];\n});\n\n_c = CommentsForPost;\nexport default CommentsForPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentsForPost\");","map":{"version":3,"names":["jwt_decode","moment","React","createElement","useEffect","useState","useDispatch","useSelector","useHistory","DeletComment","getComments","getLikesFromComment","UpdateComment","style","CommentsForPost","props","history","comment","setComment","index","setIndex","indexOfLike","setIndexOfLike","comment_id","setCommentid","auth","state","Auth","commentSelector","Comment","token","decode","user_id","id","post_id","comments","dispatch","likes","undefined","length","map","cmnt","loginHome","push","login","Commentcontent","content","console","log","e","target","value","Commenttime","time","fromNow"],"sources":["/home/firemort/Рабочий стол/Fullstack/back-front/idashchenk/clients/src/components/pages/PostComponents/GetComment.js"],"sourcesContent":["import jwt_decode from \"jwt-decode\";\nimport moment from \"moment\";\nimport React, { createElement, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { DeletComment, getComments, getLikesFromComment, UpdateComment } from \"../../../action/PostAction\";\n\nimport style from '../../style/PostPage.module.css'\n\nconst CommentsForPost = (props) => {\n    const history = useHistory()\n    let [comment, setComment] = useState('')\n    let [index, setIndex] = useState(0)\n    let [indexOfLike, setIndexOfLike] = useState(0)\n    let [comment_id, setCommentid] = useState(0)\n\n    const auth = useSelector(state=>state.Auth)\n    const commentSelector = useSelector(state => state.Comment)\n    const token = auth.token\n    const decode = jwt_decode(token)\n    const user_id = decode.id\n    const {post_id,comments} = props\n\n    const dispatch = useDispatch()\n    useEffect ( () => {\n        dispatch(getComments(post_id))\n    }, [dispatch])\n    let likes = commentSelector.likes\n    if (likes === undefined) {\n        likes = []\n    }\n    if (comments === undefined) {\n        comments = []\n    }\n    if (comments.length === 0) {\n        return (\n            <>No Comments yet</>\n        )\n    }\n    else {\n        return (\n            <>\n            {comments.map( (cmnt) => \n                <div key={cmnt.id} className={style.Comment} onClick = { () => {\n                    if (indexOfLike === 0) {\n                        dispatch(getLikesFromComment(cmnt.id))\n                        setIndexOfLike(1)\n                    }\n                    }}>\n                    <a className={style.loginHome} onClick = {() => {history.push(`/user/${cmnt.user_id}`)}}>{cmnt.login}</a>\n                    <p className={style.Commentcontent}>{cmnt.content}</p>\n                    {user_id === cmnt.user_id ?\n                        <>\n                        <button onClick= { () => {\n                            if (index === 0) {\n                                setIndex(1)\n                                setCommentid(cmnt.id)\n                            }\n                            else if (index === 1) {\n                                setIndex(0)\n                                dispatch(UpdateComment(cmnt.id,post_id, comment))\n                            }\n                            console.log(index);\n                        }}>Edit</button>\n                        {index === 1 ? <input type='text' placeholder=\"How u wanna edit comment\" value={comment} onChange={e=>setComment(e.target.value)}/> :<></>}\n                        <button onClick={() => {\n                            dispatch(DeletComment(cmnt.id,post_id))\n                        }}>Delete</button></>\n                        :\n                        <></>\n                    }\n                    {indexOfLike === 1 && likes[0].comment_id === cmnt.id ? <>{likes.length}</> : <></>}\n                    <p className={style.Commenttime}>{moment(cmnt.time).fromNow()}</p>\n                </div>\n                \n            )}\n            </>\n        )\n    }\n}\n\nexport default  CommentsForPost"],"mappings":"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"},"metadata":{},"sourceType":"module"}