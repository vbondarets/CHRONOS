{"ast":null,"code":"var _jsxFileName = \"/home/firemort/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Fullstack/back-front/idashchenk/clients/src/components/pages/TokenConfirm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { tokenConfirm } from \"../../action/AuthAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TokenReset = () => {\n  _s();\n\n  const token = useParams();\n  const dispatch = useDispatch();\n  let [password, setPassword] = useState('');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"password\",\n      autoFocus: true,\n      required: true,\n      value: password,\n      type: \"text\",\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        dispatch(tokenConfirm(token, password));\n      },\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TokenReset, \"ccQe8XwBnQ8W9PQG07aVGy50S5U=\", false, function () {\n  return [useParams, useDispatch];\n});\n\n_c = TokenReset;\nexport default TokenReset;\n\nvar _c;\n\n$RefreshReg$(_c, \"TokenReset\");","map":{"version":3,"names":["React","useState","useDispatch","useParams","tokenConfirm","TokenReset","token","dispatch","password","setPassword","e","target","value"],"sources":["/home/firemort/Рабочий стол/Fullstack/back-front/idashchenk/clients/src/components/pages/TokenConfirm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { tokenConfirm } from \"../../action/AuthAction\";\n\nconst TokenReset = () => {\n    const token = useParams()\n    const dispatch = useDispatch()\n    let [password, setPassword] = useState('')\n    \n    return (\n        <>\n            <input name = 'password' autoFocus required\n                value = {password} type='text'\n                onChange={ e => setPassword(e.target.value)} />\n            <button onClick={ () => {dispatch(tokenConfirm(token, password))}}>Reset Password</button>\n        </>\n    )\n}\n\nexport default TokenReset"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,YAAT,QAA6B,yBAA7B;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACrB,MAAMC,KAAK,GAAGH,SAAS,EAAvB;EACA,MAAMI,QAAQ,GAAGL,WAAW,EAA5B;EACA,IAAI,CAACM,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAtC;EAEA,oBACI;IAAA,wBACI;MAAO,IAAI,EAAG,UAAd;MAAyB,SAAS,MAAlC;MAAmC,QAAQ,MAA3C;MACI,KAAK,EAAIO,QADb;MACuB,IAAI,EAAC,MAD5B;MAEI,QAAQ,EAAGE,CAAC,IAAID,WAAW,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV;IAF/B;MAAA;MAAA;MAAA;IAAA,QADJ,eAII;MAAQ,OAAO,EAAG,MAAM;QAACL,QAAQ,CAACH,YAAY,CAACE,KAAD,EAAQE,QAAR,CAAb,CAAR;MAAwC,CAAjE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA,gBADJ;AAQH,CAbD;;GAAMH,U;UACYF,S,EACGD,W;;;KAFfG,U;AAeN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}