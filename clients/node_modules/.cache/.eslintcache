[{"/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/index.js":"1","/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/App.js":"2","/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/reducers/Reducer.js":"3","/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/components/AppRoute.js":"4","/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/reducers/AuthReducer.js":"5","/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/routes/Route.js":"6","/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/components/pages/Navbar.js":"7","/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/components/pages/LoginPage.js":"8","/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/components/pages/RegisterPage.js":"9","/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/components/pages/Homepage.js":"10","/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/components/pages/ResetPassword.js":"11","/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/components/pages/TokenConfirm.js":"12","/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/action/AuthAction.js":"13","/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/api/AuthApi.js":"14","/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/reducers/EventReducer.js":"15","/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/action/EventAction.js":"16","/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/api/EventApi.js":"17"},{"size":518,"mtime":1668174755651,"results":"18","hashOfConfig":"19"},{"size":704,"mtime":1668174755651,"results":"20","hashOfConfig":"19"},{"size":239,"mtime":1668211619883,"results":"21","hashOfConfig":"19"},{"size":573,"mtime":1668174755651,"results":"22","hashOfConfig":"19"},{"size":542,"mtime":1668174755651,"results":"23","hashOfConfig":"19"},{"size":696,"mtime":1668174755651,"results":"24","hashOfConfig":"19"},{"size":4781,"mtime":1668174755651,"results":"25","hashOfConfig":"19"},{"size":2373,"mtime":1668174755651,"results":"26","hashOfConfig":"19"},{"size":2701,"mtime":1668174755651,"results":"27","hashOfConfig":"19"},{"size":2641,"mtime":1668212900385,"results":"28","hashOfConfig":"19"},{"size":1160,"mtime":1668174755651,"results":"29","hashOfConfig":"19"},{"size":1074,"mtime":1668174755651,"results":"30","hashOfConfig":"19"},{"size":1860,"mtime":1668174755651,"results":"31","hashOfConfig":"19"},{"size":704,"mtime":1668174755651,"results":"32","hashOfConfig":"19"},{"size":262,"mtime":1668211423241,"results":"33","hashOfConfig":"19"},{"size":331,"mtime":1668211970710,"results":"34","hashOfConfig":"19"},{"size":404,"mtime":1668212137972,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},"18cnweh",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"40"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/index.js",["96"],[],"import React, { createContext } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport { createStore,applyMiddleware,compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from './reducers/Reducer'\n\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)))\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    \n    <Provider store={store}> \n        <App />\n    </Provider>\n  \n  \n);\n\n",[],"/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/App.js",["97","98","99"],[],"import React from \"react\";\nimport {BrowserRouter} from \"react-router-dom\" \nimport AppRoute from \"./components/AppRoute\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./components/style/pagestyle.css\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Cookies from \"js-cookie\";\nimport jwt_decode from 'jwt-decode'\n\n\nconst App = () =>{\n  const dispatch = useDispatch()\n  const store = useSelector(store => store)\n  const token = Cookies.get('token')\n  \n  if (token === undefined) {\n    store.Auth.token = ''\n  }\n  else {\n    store.Auth.token = token\n  }\n  const history = useHistory()\n  return (\n    <BrowserRouter>\n      <AppRoute />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/reducers/Reducer.js",[],[],"/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/components/AppRoute.js",["100"],[],"import React from \"react\";\nimport {route} from \"../routes/Route\";\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport { useHistory } from \"react-router-dom\";\nimport Navbar from \"./pages/Navbar\";\n\nconst AppRoute= () => {\n    const history = useHistory()\n    return (\n        <>\n        <Navbar />\n        <Switch>\n            {route.map((route)=> \n                <Route key={route.path} component={route.component} path={route.path} exact/>\n            )}\n            <Redirect to='/' />\n        </Switch>\n        </>\n        \n    );\n\n}\n\nexport default AppRoute","/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/reducers/AuthReducer.js",[],[],"/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/routes/Route.js",[],[],"/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/components/pages/Navbar.js",["101","102","103","104","105","106","107","108","109","110","111"],[],"import React, { useEffect, useState } from \"react\";\nimport Cookies from 'js-cookie'\nimport style from \"../style/Navbar.module.css\"\nimport { useHistory } from \"react-router-dom\";\nimport jwt_decode from 'jwt-decode'\nimport { useSelector } from \"react-redux\";\nimport HomeIcon from '@mui/icons-material/Home';\nimport { Button } from \"@mui/material\";\nimport LogoutIcon from '@mui/icons-material/Logout';\n\nconst Navbar= () => {\n    const history = useHistory()\n    const [isAuth, setAuth] = useState()\n    const auth = useSelector(state=>state.Auth)\n    const tokenn = auth.token\n    let decode, user_id, role\n    if (tokenn === '') {\n        \n    }\n    else {\n        decode = jwt_decode(tokenn)\n        user_id = decode.id\n        role = decode.role\n    }\n    const token = Cookies.get('token')   \n \n    useEffect ( () => {\n        if (token) {\n            setAuth(true)\n        }\n        else {\n            setAuth(false)\n        }      \n    }, [token])\n    // if (token) {\n    //     isAuth = true\n    // }\n    // else {\n    //     isAuth = false\n    // }\n    return (\n        isAuth ? \n        <>\n            {role === 'admin' ? \n                <>\n                    <h1 className={style.h1Navbar}>INSPACE<img src=\"http://localhost:3001/avatar/logo.png\" className ={style.Logo} alt=\"logo\"></img></h1>\n                    <div >\n                        <ul className={style.ulNavbar}> \n                            <li className={style.liNavbar}><a className={style.aNavbar} onClick={()=>{history.push(\"/home\")}}>Home<HomeIcon /></a></li>\n                            <li className={style.liNavbar}><a className={style.aNavbar} onClick={()=>{history.push(\"/users\")}}>Users</a></li>\n                            <li className={style.liNavbar}><a className={style.aNavbar} onClick={()=>{history.push(\"/categories\")}}>Categories</a></li>\n                            <li className={style.liNavbarAdmin}><a className={style.aNavbar} onClick={() => {\n                                                    history.push(`/user/${user_id}`)}}>{decode.login\n                                                         }</a>\n                            </li>\n                            <li className={style.liNavbar}><Button onClick={()=>{Cookies.remove('token')\n                                                                                setAuth(false)}}>Logout <LogoutIcon/></Button></li>\n\n                        </ul>\n                        \n                    </div>\n                </>\n                :\n                <>\n                    <h1 className={style.h1Navbar}>INSPACE<img src=\"http://localhost:3001/avatar/logo.png\" className ={style.Logo} alt=\"logo\"></img></h1>\n                    <div >\n                        <ul className={style.ulNavbar}> \n                            <li className={style.liNavbar}><a className={style.aNavbar} onClick={()=>{history.push(\"/home\")}}>Home<HomeIcon /></a></li>\n                            <li className={style.liNavbar}><a className={style.aNavbar} onClick={()=>{history.push(\"/users\")}}>Users</a></li>\n                            <li className={style.liNavbarUser}><a className={style.aNavbar} onClick={() => {\n                                                                    history.push(`/user/${user_id}`)\n                                                                }}>\n                                                                {decode.login}\n                                                          </a>\n                            </li>\n                            <li className={style.liNavbar}><Button onClick={()=>{Cookies.remove('token')\n                                                                                setAuth(false)}}>Logout <LogoutIcon/></Button></li>\n\n                        </ul>\n                        \n                    </div>\n                </>\n            }   \n        </>\n        :\n        <>\n            <h1 className={style.h1Navbar}>INSPACE<img src=\"http://localhost:3001/avatar/logo.png\" className ={style.Logo} alt=\"logo\"></img></h1>\n            <div>\n                <ul className={style.ulNavbar}>\n                    <li className={style.liNavbar}><a className={style.aNavbar} onClick={()=>{history.push(\"/home\")}}>Home <HomeIcon /></a></li>\n                    <li className={style.liNavbar}><a className={style.aNavbar} onClick={()=>{history.push(\"/register\")}}>Users</a></li>\n                    <li className={style.liNavbarRegister}><a className={style.aNavbar} onClick={()=>{history.push(\"/register\")}}>Register</a></li>\n                    <li className={style.liNavbar}><a className={style.aNavbar} onClick={()=>{history.push(\"/login\")}}>Login</a></li>\n                </ul>\n            </div>\n                \n        </>\n        \n    );\n}\n\n\nexport default Navbar;","/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/components/pages/LoginPage.js",["112","113","114"],[],"import React, { useContext } from \"react\";\nimport { useState } from \"react\";\nimport { loginUser } from \"../../action/AuthAction\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport style from '../style/UserForm/LoginStyle.module.css'\nimport LoginIcon from '@mui/icons-material/Login';\n\nconst LoginPage = () => {\n    const [login,setLogin] = useState('')\n    const [password,setPassword] = useState('')\n    const [email,setEmail] = useState('')\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const submit = e => {\n        e.preventDefault()\n        dispatch(loginUser(login,password,email))\n        history.push('/')\n    }\n    return (\n        <div className={style.LoginDiv}>\n            <div className={style.LoginForm}>\n                <h1>\n                    Login    \n                </h1>\n                <div>\n                    <p>Email: \n                    <input type=\"email\" name=\"email\" placeholder=\"Please paste your email\"\n                        maxLength={20} required={true} \n                        value = {email} onChange= {e=>setEmail(e.target.value)}\n                    />\n                    </p>\n                    <p>Login: \n                    <input type=\"text\" name=\"login\" placeholder=\"Please paste your login\"\n                        maxLength={20} required={true} value={login} \n                        onChange = {e=>setLogin(e.target.value)}\n                    />\n                    </p>\n                    <p>Password: \n                    <input type=\"password\" name=\"password\" placeholder=\"Please paste your password\"\n                        minLength={8} required={true} \n                        value = {password} onChange= {e => setPassword(e.target.value)}\n                    /> \n                    </p>\n                    <div className={style.divSubmit}>\n                        <a className={style.linkLogin} onClick={()=>{history.push(`/register`)}}>Haven't account?</a>\n                        <a onClick={()=>{history.push('/reset-password')}} className={style.linkLogin1}>Forget your password?</a>\n                        <button onClick={submit} className={style.buttonLogin}>Login<LoginIcon /></button>\n                    </div>\n                    \n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default LoginPage;","/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/components/pages/RegisterPage.js",["115"],[],"import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { register } from \"../../action/AuthAction\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport style from '../style/UserForm/RegisterStyle.module.css'\n\nconst RegisterPage = () => {\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [login, setLogin] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [full_name, setFull_name] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const submit = e => {\n        e.preventDefault()\n        dispatch(register(login,full_name, email,password))\n        history.push('/login')\n    }\n    return (\n        <div className={style.RegisterDiv}>\n            <div className={style.RegisterForm}>\n                <h1 className={style.h1Register}>\n                    Registration       \n                </h1>\n                <div>\n                    <p>Login: \n                    <input type=\"text\" name=\"login\" placeholder=\"Please paste your login\"\n                        maxLength={20} autoFocus required={true} value={login} \n                        onChange = {e=>setLogin(e.target.value)}\n                        \n                    />\n                    </p>\n                    <p>E-mail: \n                    <input type=\"email\" name=\"email\" placeholder=\"Please paste your email\"\n                        maxLength={20} autoFocus required={true} \n                        value = {email} onChange= {e=>setEmail(e.target.value)}\n                    />\n                    </p>\n                    <p>Full Name: \n                    <input type=\"text\" name=\"full_name\" placeholder=\"Please paste your Full name\"\n                        maxLength={20} autoFocus required={true} \n                        value = {full_name} onChange= {e => setFull_name(e.target.value)}\n                    />\n                    </p>\n                    <p>Password: \n                    <input type=\"password\" name=\"password\" placeholder=\"Please paste your password\"\n                        minLength={8} autoFocus required={true} \n                        value = {password} onChange= {e => setPassword(e.target.value)}\n                    /> \n                    </p>\n                    <div className={style.divSubmit}>\n                        <a onClick={()=>{history.push(`/login`)}} className={style.linkRegister}>Already have an account?</a>\n                        <button onClick={submit} className={style.buttonRegister}>Register</button>\n                    </div>\n                    \n                </div>\n            </div>\n        </div>\n        \n    );\n}\n\nexport default RegisterPage;","/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/components/pages/Homepage.js",["116","117"],[],"/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/components/pages/ResetPassword.js",["118"],[],"import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport {Reset_Password } from \"../../action/AuthAction\";\nimport style from '../style/UserForm/ResetPassword.module.css'\n\nconst ResetPassword = () => {\n    const history = useHistory()\n    const dispatch = useDispatch()\n    let [email, setEmail] = useState('')\n    let [index, setIndex] = useState(0)\n\n    return (\n        <div className={style.divResetPassword}>\n            <h1>Reset password</h1>\n            <p>E-mail: \n            <input autoFocus required \n                placeholder=\"Enter your email\"\n                value = {email} type=\"email\" \n                onChange={ e => setEmail(e.target.value)} />\n            </p>\n            <a onClick={()=>{history.push(\"/login\")}}>Remember login?</a>\n            <button onClick={ () => {\n                setIndex(1)\n                dispatch(Reset_Password(email))\n            }\n            }>Reset Password</button>\n            {index === 1 ? <p className={style.sendEmailP}>Mail was send. Check your email</p> : <></>}\n        </div>\n    )\n}\n\nexport default ResetPassword","/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/components/pages/TokenConfirm.js",[],[],"/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/action/AuthAction.js",["119"],[],"import { getUser, registerUser, resetPass, resetToken } from '../api/AuthApi'\nimport {loginn} from '../api/AuthApi'\nimport Cookie from \"js-cookie\"\nimport { useHistory } from 'react-router-dom'\nexport const register = (login,full_name, email,password) => async(dispatch) => {\n    try {\n        const {data} = await registerUser(login,full_name, email,password)\n        console.log(data);\n        dispatch({type:'register', payload: data})   \n    } catch (error) {\n        console.log(error);\n    } \n}\n\nexport const loginUser = (login,password,email) => async (dispatch) => {\n    try {\n        if (!login || !password || !email) {alert(\"Fill all required fields\")}\n        const {data} = await loginn(email,login,password)\n        Cookie.set('token', data.token,{expires:7})\n        dispatch({type:'login', payload:data.token})\n    } catch (e) {\n        alert(\"Check login, email or password\")\n    }\n}\n\nexport const tokenConfirm = (token, password) => async(dispatch) => {\n    try {\n        const {data} = await resetToken(token, password)\n        console.log(data);\n        if (data.message === 'Your password was changed') {\n            alert('Your password was changed')\n            \n            return dispatch ({type:'tokenconfirm', payload:'Ok'})\n        }\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const Reset_Password = (email) => async(dispatch) => {\n    try {\n        const {data} = await resetPass(email)\n        if (data.message === 'Email was sent') {\n            return dispatch({type: 'resetpassword', payload:data.message})\n        }\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const getUser_by_id = (id) => async (dispatch) => {\n    try {\n        const {data} = await getUser(id)\n        dispatch({type:'getuser_by_id', payload:data.result})\n    } catch (error) {\n        console.log(error);\n    }\n}","/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/api/AuthApi.js",[],[],"/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/reducers/EventReducer.js",[],[],"/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/action/EventAction.js",[],[],"/home/firemort/Рабочий стол/Fullstack/CHRONOS/CHRONOS/clients/src/api/EventApi.js",[],[],{"ruleId":"120","severity":1,"message":"121","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":30},{"ruleId":"120","severity":1,"message":"124","line":8,"column":8,"nodeType":"122","messageId":"123","endLine":8,"endColumn":18},{"ruleId":"120","severity":1,"message":"125","line":12,"column":9,"nodeType":"122","messageId":"123","endLine":12,"endColumn":17},{"ruleId":"120","severity":1,"message":"126","line":22,"column":9,"nodeType":"122","messageId":"123","endLine":22,"endColumn":16},{"ruleId":"120","severity":1,"message":"126","line":8,"column":11,"nodeType":"122","messageId":"123","endLine":8,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":49,"column":60,"nodeType":"129","endLine":49,"endColumn":127},{"ruleId":"127","severity":1,"message":"128","line":50,"column":60,"nodeType":"129","endLine":50,"endColumn":128},{"ruleId":"127","severity":1,"message":"128","line":51,"column":60,"nodeType":"129","endLine":51,"endColumn":133},{"ruleId":"127","severity":1,"message":"128","line":52,"column":65,"nodeType":"129","endLine":53,"endColumn":88},{"ruleId":"127","severity":1,"message":"128","line":68,"column":60,"nodeType":"129","endLine":68,"endColumn":127},{"ruleId":"127","severity":1,"message":"128","line":69,"column":60,"nodeType":"129","endLine":69,"endColumn":128},{"ruleId":"127","severity":1,"message":"128","line":70,"column":64,"nodeType":"129","endLine":72,"endColumn":68},{"ruleId":"127","severity":1,"message":"128","line":90,"column":52,"nodeType":"129","endLine":90,"endColumn":119},{"ruleId":"127","severity":1,"message":"128","line":91,"column":52,"nodeType":"129","endLine":91,"endColumn":123},{"ruleId":"127","severity":1,"message":"128","line":92,"column":60,"nodeType":"129","endLine":92,"endColumn":131},{"ruleId":"127","severity":1,"message":"128","line":93,"column":52,"nodeType":"129","endLine":93,"endColumn":120},{"ruleId":"120","severity":1,"message":"130","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":27},{"ruleId":"127","severity":1,"message":"128","line":46,"column":25,"nodeType":"129","endLine":46,"endColumn":98},{"ruleId":"127","severity":1,"message":"128","line":47,"column":25,"nodeType":"129","endLine":47,"endColumn":105},{"ruleId":"127","severity":1,"message":"128","line":53,"column":25,"nodeType":"129","endLine":53,"endColumn":98},{"ruleId":"120","severity":1,"message":"131","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":13},{"ruleId":"132","severity":1,"message":"133","line":62,"column":54,"nodeType":"134","messageId":"135","endLine":62,"endColumn":56},{"ruleId":"127","severity":1,"message":"128","line":22,"column":13,"nodeType":"129","endLine":22,"endColumn":55},{"ruleId":"120","severity":1,"message":"136","line":4,"column":10,"nodeType":"122","messageId":"123","endLine":4,"endColumn":20},"no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","'jwt_decode' is defined but never used.","'dispatch' is assigned a value but never used.","'history' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useContext' is defined but never used.","'dayjs' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useHistory' is defined but never used."]